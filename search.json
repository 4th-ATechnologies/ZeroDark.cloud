{"Other%20Functions.html#/c:@F@NSStringFromTreesystemTrunk":{"name":"NSStringFromTreesystemTrunk","abstract":"<p>Converts from enum value to string.</p>"},"Other%20Functions.html#/c:@F@TreesystemTrunkFromString":{"name":"TreesystemTrunkFromString","abstract":"<p>Converts from string to enum value.</p>"},"Other%20Type%20Definitions.html#/c:ZDCDatabaseConfig.h@T@YapDatabaseConfigHook":{"name":"YapDatabaseConfigHook","abstract":"<p>Used for configuring the database and registering your own custom YapDatabse extensions.</p>"},"Other%20Type%20Definitions.html#/c:ZDCDownloadManager.h@T@NodeMetaDownloadCompletionBlock":{"name":"NodeMetaDownloadCompletionBlock","abstract":"<p>CompletionBlock for downloading a node&rsquo;s <q>meta</q> components.</p>"},"Other%20Type%20Definitions.html#/c:ZDCDownloadManager.h@T@NodeDataDownloadCompletionBlock":{"name":"NodeDataDownloadCompletionBlock","abstract":"<p>CompletionBlock for downloading a node.</p>"},"Other%20Type%20Definitions.html#/c:ZDCDownloadManager.h@T@UserAvatarDownloadCompletionBlock":{"name":"UserAvatarDownloadCompletionBlock","abstract":"<p>CompletionBlock for downloading an avatar.</p>"},"Other%20Type%20Definitions.html#/c:ZDCImageManager.h@T@ZDCImageProcessingBlock":{"name":"ZDCImageProcessingBlock","abstract":"<p>The ImageProcessingBlock allows you to modify an image for presentation within your UI."},"Other%20Type%20Definitions.html#/c:ZDCProgressManager.h@T@UploadCompletionBlock":{"name":"UploadCompletionBlock","abstract":"<p>Reports the results of an upload attempt."},"Other%20Type%20Definitions.html#/c:ZDCUITools.h@T@accountSetupViewCompletionHandler":{"name":"accountSetupViewCompletionHandler","abstract":"<p>Undocumented</p>"},"Other%20Type%20Definitions.html#/c:ZDCUITools.h@T@SharedUsersViewCompletionHandler":{"name":"SharedUsersViewCompletionHandler","abstract":"<p>Undocumented</p>"},"Other%20Type%20Definitions.html#/c:ZDCFileChecksum.h@T@ZDCFileChecksumCallbackBlock":{"name":"ZDCFileChecksumCallbackBlock","abstract":"<p>IMPORTANT:"},"Enums/ZDCNodeComponents.html#/c:@E@ZDCNodeComponents@ZDCNodeComponents_Header":{"name":"ZDCNodeComponents_Header","abstract":"<p>Bitmask flag that specifies the header should be downloaded.</p>","parent_name":"ZDCNodeComponents"},"Enums/ZDCNodeComponents.html#/c:@E@ZDCNodeComponents@ZDCNodeComponents_Metadata":{"name":"ZDCNodeComponents_Metadata","abstract":"<p>Bitmask flag that specifies the metadata section should be downloaded (if present).</p>","parent_name":"ZDCNodeComponents"},"Enums/ZDCNodeComponents.html#/c:@E@ZDCNodeComponents@ZDCNodeComponents_Thumbnail":{"name":"ZDCNodeComponents_Thumbnail","abstract":"<p>Bitmask flag that specifies the thumbnail section should be downloaded (if present).</p>","parent_name":"ZDCNodeComponents"},"Enums/ZDCNodeComponents.html#/c:@E@ZDCNodeComponents@ZDCNodeComponents_Data":{"name":"ZDCNodeComponents_Data","abstract":"<p>Bitmask flag that specifies the data section should be downloaded.</p>","parent_name":"ZDCNodeComponents"},"Enums/ZDCNodeComponents.html#/c:@E@ZDCNodeComponents@ZDCNodeComponents_All":{"name":"ZDCNodeComponents_All","abstract":"<p>Bitmask flag that specifies all sections should be downloaded.</p>","parent_name":"ZDCNodeComponents"},"Enums/ZDCCloudErrorCode.html#/c:@E@ZDCCloudErrorCode@ZDCCloudErrorCode_InvalidParameter":{"name":"ZDCCloudErrorCode_InvalidParameter","abstract":"<p>One of the parameters was invalid.","parent_name":"ZDCCloudErrorCode"},"Enums/ZDCCloudErrorCode.html#/c:@E@ZDCCloudErrorCode@ZDCCloudErrorCode_MissingParent":{"name":"ZDCCloudErrorCode_MissingParent","abstract":"<p>If you attempt to create a node from a path,","parent_name":"ZDCCloudErrorCode"},"Enums/ZDCCloudErrorCode.html#/c:@E@ZDCCloudErrorCode@ZDCCloudErrorCode_MissingReceiver":{"name":"ZDCCloudErrorCode_MissingReceiver","abstract":"<p>If you attempt to send a message to a user,","parent_name":"ZDCCloudErrorCode"},"Enums/ZDCCloudErrorCode.html#/c:@E@ZDCCloudErrorCode@ZDCCloudErrorCode_Conflict":{"name":"ZDCCloudErrorCode_Conflict","abstract":"<p>A conflict occurred.","parent_name":"ZDCCloudErrorCode"},"Enums/ZDCCloudPathComponents.html#/c:@E@ZDCCloudPathComponents@ZDCCloudPathComponents_TreeID":{"name":"ZDCCloudPathComponents_TreeID","abstract":"<p>The first component of a cloudPath.","parent_name":"ZDCCloudPathComponents"},"Enums/ZDCCloudPathComponents.html#/c:@E@ZDCCloudPathComponents@ZDCCloudPathComponents_DirPrefix":{"name":"ZDCCloudPathComponents_DirPrefix","abstract":"<p>The second component of a cloudPath.","parent_name":"ZDCCloudPathComponents"},"Enums/ZDCCloudPathComponents.html#/c:@E@ZDCCloudPathComponents@ZDCCloudPathComponents_FileName_WithExt":{"name":"ZDCCloudPathComponents_FileName_WithExt","abstract":"<p>The filename (including extension)</p>","parent_name":"ZDCCloudPathComponents"},"Enums/ZDCCloudPathComponents.html#/c:@E@ZDCCloudPathComponents@ZDCCloudPathComponents_FileName_WithoutExt":{"name":"ZDCCloudPathComponents_FileName_WithoutExt","abstract":"<p>The fileName (excluding extension)</p>","parent_name":"ZDCCloudPathComponents"},"Enums/ZDCCloudPathComponents.html#/c:@E@ZDCCloudPathComponents@ZDCCloudPathComponents_All_WithExt":{"name":"ZDCCloudPathComponents_All_WithExt","abstract":"<p>treeID + dirPrefix + filename (including extension)</p>","parent_name":"ZDCCloudPathComponents"},"Enums/ZDCCloudPathComponents.html#/c:@E@ZDCCloudPathComponents@ZDCCloudPathComponents_All_WithoutExt":{"name":"ZDCCloudPathComponents_All_WithoutExt","abstract":"<p>treeID + dirPrefix + filename (excluding extension)</p>","parent_name":"ZDCCloudPathComponents"},"Enums/ZDCDeleteNodeOptions.html#/c:@E@ZDCDeleteNodeOptions@ZDCDeleteOutdatedNodes":{"name":"ZDCDeleteOutdatedNodes","abstract":"<p>This option indicates that <q>outdated</q> nodes should still be deleted.","parent_name":"ZDCDeleteNodeOptions"},"Enums/ZDCDeleteNodeOptions.html#/c:@E@ZDCDeleteNodeOptions@ZDCDeleteUnknownNodes":{"name":"ZDCDeleteUnknownNodes","abstract":"<p>This option indicates that <q>unknown</q> nodes should still be deleted.","parent_name":"ZDCDeleteNodeOptions"},"Enums/ZDCCloudOperationPutType.html#/c:@E@ZDCCloudOperationPutType@ZDCCloudOperationPutType_Invalid":{"name":"ZDCCloudOperationPutType_Invalid","abstract":"<p>Represents an invalid put-type (generally used for errors)</p>","parent_name":"ZDCCloudOperationPutType"},"Enums/ZDCCloudOperationPutType.html#/c:@E@ZDCCloudOperationPutType@ZDCCloudOperationPutType_Node_Rcrd":{"name":"ZDCCloudOperationPutType_Node_Rcrd","abstract":"<p>Represents a put of the <q>*.rcrd</q> file for a node in the treesystem.","parent_name":"ZDCCloudOperationPutType"},"Enums/ZDCCloudOperationPutType.html#/c:@E@ZDCCloudOperationPutType@ZDCCloudOperationPutType_Node_Data":{"name":"ZDCCloudOperationPutType_Node_Data","abstract":"<p>Represents the put of the <q>*.data</q> file for a node in the treesystem.","parent_name":"ZDCCloudOperationPutType"},"Enums/ZDCCloudOperationType.html#/c:@E@ZDCCloudOperationType@ZDCCloudOperationType_Invalid":{"name":"ZDCCloudOperationType_Invalid","abstract":"<p>Represents an invalid type (generally used for errors)</p>","parent_name":"ZDCCloudOperationType"},"Enums/ZDCCloudOperationType.html#/c:@E@ZDCCloudOperationType@ZDCCloudOperationType_Put":{"name":"ZDCCloudOperationType_Put","abstract":"<p>Represents a &lsquo;put&rsquo; operation, meaning a node is being uploaded to the cloud.","parent_name":"ZDCCloudOperationType"},"Enums/ZDCCloudOperationType.html#/c:@E@ZDCCloudOperationType@ZDCCloudOperationType_Move":{"name":"ZDCCloudOperationType_Move","abstract":"<p>Represents a &lsquo;move&rsquo; operation, meaning a node is being moved from one location to another.</p>","parent_name":"ZDCCloudOperationType"},"Enums/ZDCCloudOperationType.html#/c:@E@ZDCCloudOperationType@ZDCCloudOperationType_DeleteLeaf":{"name":"ZDCCloudOperationType_DeleteLeaf","abstract":"<p>Represents a &lsquo;delete&rsquo; operation, where the node being deleted is a leaf (no children).</p>","parent_name":"ZDCCloudOperationType"},"Enums/ZDCCloudOperationType.html#/c:@E@ZDCCloudOperationType@ZDCCloudOperationType_DeleteNode":{"name":"ZDCCloudOperationType_DeleteNode","abstract":"<p>Represents a &lsquo;delete&rsquo; operation, where it&rsquo;s assumed the node might have children (not a leaf).</p>","parent_name":"ZDCCloudOperationType"},"Enums/ZDCCloudOperationType.html#/c:@E@ZDCCloudOperationType@ZDCCloudOperationType_CopyLeaf":{"name":"ZDCCloudOperationType_CopyLeaf","abstract":"<p>Represents a &lsquo;copy&rsquo; operation.","parent_name":"ZDCCloudOperationType"},"Enums/ZDCCloudOperationType.html#/c:@E@ZDCCloudOperationType@ZDCCloudOperationType_Avatar":{"name":"ZDCCloudOperationType_Avatar","abstract":"<p>Represents an update of the user&rsquo;s avatar.","parent_name":"ZDCCloudOperationType"},"Enums/ZDCChildProgressType.html#/c:@E@ZDCChildProgressType@ZDCChildProgressType_MultipartPrep":{"name":"ZDCChildProgressType_MultipartPrep","abstract":"<p>When uploading large files, a multipart upload process is used,","parent_name":"ZDCChildProgressType"},"Enums/ZDCCloudFileSection.html#/c:@E@ZDCCloudFileSection@ZDCCloudFileSection_Header":{"name":"ZDCCloudFileSection_Header","abstract":"<p>Every cloudfile contains a header.","parent_name":"ZDCCloudFileSection"},"Enums/ZDCCloudFileSection.html#/c:@E@ZDCCloudFileSection@ZDCCloudFileSection_Metadata":{"name":"ZDCCloudFileSection_Metadata","abstract":"<p>Cloudfiles may optionally contain a metadata section.</p>","parent_name":"ZDCCloudFileSection"},"Enums/ZDCCloudFileSection.html#/c:@E@ZDCCloudFileSection@ZDCCloudFileSection_Thumbnail":{"name":"ZDCCloudFileSection_Thumbnail","abstract":"<p>Cloudfiles may optionally contain a thumbnail section.</p>","parent_name":"ZDCCloudFileSection"},"Enums/ZDCCloudFileSection.html#/c:@E@ZDCCloudFileSection@ZDCCloudFileSection_Data":{"name":"ZDCCloudFileSection_Data","abstract":"<p>The file/data section of the cloudfile.</p>","parent_name":"ZDCCloudFileSection"},"Enums/ZDCCloudFileSection.html#/c:@E@ZDCCloudFileSection@ZDCCloudFileSection_EOF":{"name":"ZDCCloudFileSection_EOF","abstract":"<p>Indicates the End Of File has been reached.</p>","parent_name":"ZDCCloudFileSection"},"Enums/ZDCSharePermission.html#/c:@E@ZDCSharePermission@ZDCSharePermission_Read":{"name":"ZDCSharePermission_Read","abstract":"<p>Read permission for the user.","parent_name":"ZDCSharePermission"},"Enums/ZDCSharePermission.html#/c:@E@ZDCSharePermission@ZDCSharePermission_Write":{"name":"ZDCSharePermission_Write","abstract":"<p>Write permission for the user.","parent_name":"ZDCSharePermission"},"Enums/ZDCSharePermission.html#/c:@E@ZDCSharePermission@ZDCSharePermission_Share":{"name":"ZDCSharePermission_Share","abstract":"<p>The share permission means the user is allowed to modify the node&rsquo;s set of permissions.","parent_name":"ZDCSharePermission"},"Enums/ZDCSharePermission.html#/c:@E@ZDCSharePermission@ZDCSharePermission_RecordsOnly":{"name":"ZDCSharePermission_RecordsOnly","abstract":"<p>All children of the node are restricted to RCRD files - DATA files are not allowed.","parent_name":"ZDCSharePermission"},"Enums/ZDCSharePermission.html#/c:@E@ZDCSharePermission@ZDCSharePermission_LeafsOnly":{"name":"ZDCSharePermission_LeafsOnly","abstract":"<p>All children of the node are restricted to leafs.","parent_name":"ZDCSharePermission"},"Enums/ZDCSharePermission.html#/c:@E@ZDCSharePermission@ZDCSharePermission_UserOnly":{"name":"ZDCSharePermission_UserOnly","abstract":"<p>Users with this permission are allowed to create/modify a single child node, whose name matches their userID.","parent_name":"ZDCSharePermission"},"Enums/ZDCSharePermission.html#/c:@E@ZDCSharePermission@ZDCSharePermission_WriteOnce":{"name":"ZDCSharePermission_WriteOnce","abstract":"<p>Users with this permission are allowed to create child nodes.","parent_name":"ZDCSharePermission"},"Enums/ZDCSharePermission.html#/c:@E@ZDCSharePermission@ZDCSharePermission_BurnIfSender":{"name":"ZDCSharePermission_BurnIfSender","abstract":"<p>The node can be deleted by the sender.","parent_name":"ZDCSharePermission"},"Enums/ZDCSearchResultStage.html#/c:@E@ZDCSearchResultStage@ZDCSearchResultStage_Database":{"name":"ZDCSearchResultStage_Database","abstract":"<p>The search results come from a search within the local database.</p>","parent_name":"ZDCSearchResultStage"},"Enums/ZDCSearchResultStage.html#/c:@E@ZDCSearchResultStage@ZDCSearchResultStage_Cache":{"name":"ZDCSearchResultStage_Cache","abstract":"<p>The search results come from a search of the in-memory cache populated from previous server responses.</p>","parent_name":"ZDCSearchResultStage"},"Enums/ZDCSearchResultStage.html#/c:@E@ZDCSearchResultStage@ZDCSearchResultStage_Server":{"name":"ZDCSearchResultStage_Server","abstract":"<p>The search results come directly from the server.</p>","parent_name":"ZDCSearchResultStage"},"Enums/ZDCSearchResultStage.html#/c:@E@ZDCSearchResultStage@ZDCSearchResultStage_Done":{"name":"ZDCSearchResultStage_Done","abstract":"<p>The search request is complete.</p>","parent_name":"ZDCSearchResultStage"},"Enums/ZDCSyncStatusNotificationType.html#/c:@E@ZDCSyncStatusNotificationType@ZDCSyncStatusNotificationType_PullStarted":{"name":"ZDCSyncStatusNotificationType_PullStarted","abstract":"<p>This notification type is broadcast when changes have been discovered in the cloud,","parent_name":"ZDCSyncStatusNotificationType"},"Enums/ZDCSyncStatusNotificationType.html#/c:@E@ZDCSyncStatusNotificationType@ZDCSyncStatusNotificationType_PullStopped":{"name":"ZDCSyncStatusNotificationType_PullStopped","abstract":"<p>This notification type is broadcast after:</p>","parent_name":"ZDCSyncStatusNotificationType"},"Enums/ZDCSyncStatusNotificationType.html#/c:@E@ZDCSyncStatusNotificationType@ZDCSyncStatusNotificationType_PushStarted":{"name":"ZDCSyncStatusNotificationType_PushStarted","abstract":"<p>This notification type is broadcast when the PushManager changes its active status.","parent_name":"ZDCSyncStatusNotificationType"},"Enums/ZDCSyncStatusNotificationType.html#/c:@E@ZDCSyncStatusNotificationType@ZDCSyncStatusNotificationType_PushStopped":{"name":"ZDCSyncStatusNotificationType_PushStopped","abstract":"<p>This notification type is broadcast when the PushManager changes its active status.","parent_name":"ZDCSyncStatusNotificationType"},"Enums/ZDCSyncStatusNotificationType.html#/c:@E@ZDCSyncStatusNotificationType@ZDCSyncStatusNotificationType_PushPaused":{"name":"ZDCSyncStatusNotificationType_PushPaused","abstract":"<p>This notification type is broadcast when the PushManger is manually paused.</p>","parent_name":"ZDCSyncStatusNotificationType"},"Enums/ZDCSyncStatusNotificationType.html#/c:@E@ZDCSyncStatusNotificationType@ZDCSyncStatusNotificationType_PushResumed":{"name":"ZDCSyncStatusNotificationType_PushResumed","abstract":"<p>This notification type is broadcast when the PushManager is manually resumed (after being previously paused).</p>","parent_name":"ZDCSyncStatusNotificationType"},"Enums/ZDCSyncStatusNotificationType.html#/c:@E@ZDCSyncStatusNotificationType@ZDCSyncStatusNotificationType_SyncingNodeIDsChanged":{"name":"ZDCSyncStatusNotificationType_SyncingNodeIDsChanged","abstract":"<p>This notification is broadcast when a user&rsquo;s syncingNodeID&rsquo;s list changes.","parent_name":"ZDCSyncStatusNotificationType"},"Enums/ZDCPullResult.html#/c:@E@ZDCPullResult@ZDCPullResult_Success":{"name":"ZDCPullResult_Success","abstract":"<p>The pull operation was successful, and the client is now up-to-date with the cloud.</p>","parent_name":"ZDCPullResult"},"Enums/ZDCPullResult.html#/c:@E@ZDCPullResult@ZDCPullResult_ManuallyAborted":{"name":"ZDCPullResult_ManuallyAborted","abstract":"<p>The pull operation was cancelled by request.</p>","parent_name":"ZDCPullResult"},"Enums/ZDCPullResult.html#/c:@E@ZDCPullResult@ZDCPullResult_Fail_CloudChanged":{"name":"ZDCPullResult_Fail_CloudChanged","abstract":"<p>The pull operation failed temporarily.</p>","parent_name":"ZDCPullResult"},"Enums/ZDCPullResult.html#/c:@E@ZDCPullResult@ZDCPullResult_Fail_Auth":{"name":"ZDCPullResult_Fail_Auth","abstract":"<p>The pull operation failed due to an authentication problem.</p>","parent_name":"ZDCPullResult"},"Enums/ZDCPullResult.html#/c:@E@ZDCPullResult@ZDCPullResult_Fail_Other":{"name":"ZDCPullResult_Fail_Other","abstract":"<p>The pull operation failed.</p>","parent_name":"ZDCPullResult"},"Enums/ZDCProgressType.html#/c:@E@ZDCProgressType@ZDCProgressType_MetaDownload":{"name":"ZDCProgressType_MetaDownload","abstract":"<p>The progress item represents a download created via the ZDCDownloadManager (downloadNodeMeta&hellip;)</p>","parent_name":"ZDCProgressType"},"Enums/ZDCProgressType.html#/c:@E@ZDCProgressType@ZDCProgressType_DataDownload":{"name":"ZDCProgressType_DataDownload","abstract":"<p>The progress item represents a download created via the ZDCDownloadManager (downloadNodeData&hellip;)</p>","parent_name":"ZDCProgressType"},"Enums/ZDCProgressType.html#/c:@E@ZDCProgressType@ZDCProgressType_Upload":{"name":"ZDCProgressType_Upload","abstract":"<p>The progress item represents an upload operation (ZDCCloudOperation).","parent_name":"ZDCProgressType"},"Enums/ZDCNodeMetaComponents.html#/c:@E@ZDCNodeMetaComponents@ZDCNodeMetaComponents_Header":{"name":"ZDCNodeMetaComponents_Header","abstract":"<p>Bitmask flag that specifies the header should be downloaded.</p>","parent_name":"ZDCNodeMetaComponents"},"Enums/ZDCNodeMetaComponents.html#/c:@E@ZDCNodeMetaComponents@ZDCNodeMetaComponents_Metadata":{"name":"ZDCNodeMetaComponents_Metadata","abstract":"<p>Bitmask flag that specifies the metadata section should be downloaded (if present).</p>","parent_name":"ZDCNodeMetaComponents"},"Enums/ZDCNodeMetaComponents.html#/c:@E@ZDCNodeMetaComponents@ZDCNodeMetaComponents_Thumbnail":{"name":"ZDCNodeMetaComponents_Thumbnail","abstract":"<p>Bitmask flag that specifies the thumbnail section should be downloaded (if present).</p>","parent_name":"ZDCNodeMetaComponents"},"Enums/ZDCNodeMetaComponents.html#/c:@E@ZDCNodeMetaComponents@ZDCNodeMetaComponents_All":{"name":"ZDCNodeMetaComponents_All","abstract":"<p>Bitmask flag that specifies all non-data sections should be downloaded (header + metadata + thumbnail).</p>","parent_name":"ZDCNodeMetaComponents"},"Enums/ZDCLogLevel.html#/c:@E@ZDCLogLevel@ZDCLogLevelOff":{"name":"ZDCLogLevelOff","abstract":"<p>No logs</p>","parent_name":"ZDCLogLevel"},"Enums/ZDCLogLevel.html#/c:@E@ZDCLogLevel@ZDCLogLevelError":{"name":"ZDCLogLevelError","abstract":"<p>Error logs only</p>","parent_name":"ZDCLogLevel"},"Enums/ZDCLogLevel.html#/c:@E@ZDCLogLevel@ZDCLogLevelWarning":{"name":"ZDCLogLevelWarning","abstract":"<p>Error and warning logs</p>","parent_name":"ZDCLogLevel"},"Enums/ZDCLogLevel.html#/c:@E@ZDCLogLevel@ZDCLogLevelInfo":{"name":"ZDCLogLevelInfo","abstract":"<p>Error, warning and info logs</p>","parent_name":"ZDCLogLevel"},"Enums/ZDCLogLevel.html#/c:@E@ZDCLogLevel@ZDCLogLevelVerbose":{"name":"ZDCLogLevelVerbose","abstract":"<p>Error, warning, info, and verbose logs</p>","parent_name":"ZDCLogLevel"},"Enums/ZDCLogLevel.html#/c:@E@ZDCLogLevel@ZDCLogLevelAll":{"name":"ZDCLogLevelAll","abstract":"<p>All logs (1&hellip;11111)</p>","parent_name":"ZDCLogLevel"},"Enums/ZDCLogFlag.html#/c:@E@ZDCLogFlag@ZDCLogFlagError":{"name":"ZDCLogFlagError","abstract":"<p>Bitmask: 0&hellip;00001</p>","parent_name":"ZDCLogFlag"},"Enums/ZDCLogFlag.html#/c:@E@ZDCLogFlag@ZDCLogFlagWarning":{"name":"ZDCLogFlagWarning","abstract":"<p>Bitmask: 0&hellip;00010</p>","parent_name":"ZDCLogFlag"},"Enums/ZDCLogFlag.html#/c:@E@ZDCLogFlag@ZDCLogFlagInfo":{"name":"ZDCLogFlagInfo","abstract":"<p>Bitmask: 0&hellip;00100</p>","parent_name":"ZDCLogFlag"},"Enums/ZDCLogFlag.html#/c:@E@ZDCLogFlag@ZDCLogFlagVerbose":{"name":"ZDCLogFlagVerbose","abstract":"<p>Bitmask: 0&hellip;01000</p>","parent_name":"ZDCLogFlag"},"Enums/ZDCLogFlag.html#/c:@E@ZDCLogFlag@ZDCLogFlagTrace":{"name":"ZDCLogFlagTrace","abstract":"<p>Bitmask: 0&hellip;10000</p>","parent_name":"ZDCLogFlag"},"Enums/ZDCNodeConflict.html#/c:@E@ZDCNodeConflict@ZDCNodeConflict_Path":{"name":"ZDCNodeConflict_Path","abstract":"<p>A treesystem path is in conflict:</p>","parent_name":"ZDCNodeConflict"},"Enums/ZDCNodeConflict.html#/c:@E@ZDCNodeConflict@ZDCNodeConflict_Data":{"name":"ZDCNodeConflict_Data","abstract":"<p>Your node data is out-of-date:</p>","parent_name":"ZDCNodeConflict"},"Enums/ZDCNodeConflict.html#/c:@E@ZDCNodeConflict@ZDCNodeConflict_Graft_DstUserAccountDeleted":{"name":"ZDCNodeConflict_Graft_DstUserAccountDeleted","abstract":"<p>Unable to perform graft because the destination user&rsquo;s account has been deleted.</p>","parent_name":"ZDCNodeConflict"},"Enums/ZDCNodeConflict.html#/c:@E@ZDCNodeConflict@ZDCNodeConflict_Graft_DstNodeNotReadable":{"name":"ZDCNodeConflict_Graft_DstNodeNotReadable","abstract":"<p>Unable to perform graft because the destination node doesn&rsquo;t grant us appropriate permission(s).</p>","parent_name":"ZDCNodeConflict"},"Enums/ZDCNodeConflict.html#/c:@E@ZDCNodeConflict@ZDCNodeConflict_Graft_DstNodeNotFound":{"name":"ZDCNodeConflict_Graft_DstNodeNotFound","abstract":"<p>Unable to perform graft because the destination node has been deleted.</p>","parent_name":"ZDCNodeConflict"},"Enums/ZDCNodeChange.html#/c:@E@ZDCNodeChange@ZDCNodeChange_Treesystem":{"name":"ZDCNodeChange_Treesystem","abstract":"<p>Only treesystem information was changed, such as the node&rsquo;s name, permissions, etc.","parent_name":"ZDCNodeChange"},"Enums/ZDCNodeChange.html#/c:@E@ZDCNodeChange@ZDCNodeChange_Data":{"name":"ZDCNodeChange_Data","abstract":"<p>The node&rsquo;s data was changed (the data that your app creates).","parent_name":"ZDCNodeChange"},"Enums/ZDCTreesystemTrunk.html#/c:@E@ZDCTreesystemTrunk@ZDCTreesystemTrunk_Home":{"name":"ZDCTreesystemTrunk_Home","abstract":"<p>The &lsquo;Home&rsquo; trunk is where your app stores the majority of its data.","parent_name":"ZDCTreesystemTrunk"},"Enums/ZDCTreesystemTrunk.html#/c:@E@ZDCTreesystemTrunk@ZDCTreesystemTrunk_Prefs":{"name":"ZDCTreesystemTrunk_Prefs","abstract":"<p>The &lsquo;Prefs&rsquo; trunk is designed for storing (synced) user preferences.","parent_name":"ZDCTreesystemTrunk"},"Enums/ZDCTreesystemTrunk.html#/c:@E@ZDCTreesystemTrunk@ZDCTreesystemTrunk_Inbox":{"name":"ZDCTreesystemTrunk_Inbox","abstract":"<p>The &lsquo;Inbox&rsquo; trunk is where you receive incoming messages from other users.","parent_name":"ZDCTreesystemTrunk"},"Enums/ZDCTreesystemTrunk.html#/c:@E@ZDCTreesystemTrunk@ZDCTreesystemTrunk_Outbox":{"name":"ZDCTreesystemTrunk_Outbox","abstract":"<p>The &lsquo;Outbox&rsquo; trunk is for outgoing messages.","parent_name":"ZDCTreesystemTrunk"},"Enums/ZDCTreesystemTrunk.html#/c:@E@ZDCTreesystemTrunk@ZDCTreesystemTrunk_Detached":{"name":"ZDCTreesystemTrunk_Detached","abstract":"<p>A special value used for nodes that aren&rsquo;t attached to a local treesystem.","parent_name":"ZDCTreesystemTrunk"},"Enums/ZDCCryptoFileFormat.html#/c:@E@ZDCCryptoFileFormat@ZDCCryptoFileFormat_Unknown":{"name":"ZDCCryptoFileFormat_Unknown","abstract":"<p>An unkown file format. Generally used for errors.</p>","parent_name":"ZDCCryptoFileFormat"},"Enums/ZDCCryptoFileFormat.html#/c:@E@ZDCCryptoFileFormat@ZDCCryptoFileFormat_CacheFile":{"name":"ZDCCryptoFileFormat_CacheFile","abstract":"<p>The CacheFile format is used for caching files to the local disk.","parent_name":"ZDCCryptoFileFormat"},"Enums/ZDCCryptoFileFormat.html#/c:@E@ZDCCryptoFileFormat@ZDCCryptoFileFormat_CloudFile":{"name":"ZDCCryptoFileFormat_CloudFile","abstract":"<p>The CloudFile format is the format used when storing files in the cloud.","parent_name":"ZDCCryptoFileFormat"},"Enums/ZDCCryptoFileFormat.html":{"name":"ZDCCryptoFileFormat","abstract":"<p>ZeroDarkCloud supports 2 types of encrypted files.</p>"},"Enums/ZDCTreesystemTrunk.html":{"name":"ZDCTreesystemTrunk","abstract":"<p>The treesystem has several different <q>trunks</q>, which represent root-level nodes."},"Enums/ZDCNodeChange.html":{"name":"ZDCNodeChange","abstract":"<p>Used as a flag passed to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ZeroDarkCloudDelegate.html#/c:objc(pl)ZeroDarkCloudDelegate(im)didDiscoverModifiedNode:withChange:atPath:transaction:\">-[ZeroDarkCloudDelegate didDiscoverModifiedNode:withChange:atPath:transaction:]</a></code>,"},"Enums/ZDCNodeConflict.html":{"name":"ZDCNodeConflict","abstract":"<p>Used as a flag passed to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ZeroDarkCloudDelegate.html#/c:objc(pl)ZeroDarkCloudDelegate(im)didDiscoverConflict:forNode:atPath:transaction:\">-[ZeroDarkCloudDelegate didDiscoverConflict:forNode:atPath:transaction:]</a></code>,"},"Enums/ZDCLogFlag.html":{"name":"ZDCLogFlag","abstract":"<p>Log flags are a bitmask, which are biwise-OR&rsquo;d with the log level"},"Enums/ZDCLogLevel.html":{"name":"ZDCLogLevel","abstract":"<p>Log levels are used to filter out logs. Used together with flags.</p>"},"Enums/ZDCNodeMetaComponents.html":{"name":"ZDCNodeMetaComponents","abstract":"<p>Bitmask for specifiying which <q>meta</q> components to download from the cloud.</p>"},"Enums/ZDCProgressType.html":{"name":"ZDCProgressType","abstract":"<p>Represents the type of operation being tracked by the progress item.</p>"},"Enums/ZDCPullResult.html":{"name":"ZDCPullResult","abstract":"<p>Specifies the final result of a pull attempt.</p>"},"Enums/ZDCSyncStatusNotificationType.html":{"name":"ZDCSyncStatusNotificationType","abstract":"<p>The SyncManager broadcasts several types of notifications for changes in the sync state."},"Enums/ZDCSearchResultStage.html":{"name":"ZDCSearchResultStage","abstract":"<p>When you perform a search, the framework actually searches 3 different sources:</p>"},"Enums/ZDCSharePermission.html":{"name":"ZDCSharePermission","abstract":"<p>Permissions are represented as a string, where each character in the string has a special meaning.</p>"},"Enums/ZDCCloudFileSection.html":{"name":"ZDCCloudFileSection","abstract":"<p>A cloudfile is composed of several sections.</p>"},"Enums/ZDCChildProgressType.html":{"name":"ZDCChildProgressType","abstract":"<p>ZDCProgress is a container for 1 or more children (of type NSProgress)."},"Enums/ZDCCloudOperationType.html":{"name":"ZDCCloudOperationType","abstract":"<p>The type of operation to be performed.</p>"},"Enums/ZDCCloudOperationPutType.html":{"name":"ZDCCloudOperationPutType","abstract":"<p>If the type is &lsquo;put&rsquo;, this specifies the type of the put operation."},"Enums/ZDCDeleteNodeOptions.html":{"name":"ZDCDeleteNodeOptions","abstract":"<p>When you queue an operation to delete a node in the cloud,"},"Enums/ZDCCloudPathComponents.html":{"name":"ZDCCloudPathComponents","abstract":"<p>A cloudPath has the form: {treeID}/{dirPrefix}/{filename}</p>"},"Enums/ZDCCloudErrorCode.html":{"name":"ZDCCloudErrorCode","abstract":"<p>All errors returned from ZDCCloudTransaction will use an error code defined in this enumeration.</p>"},"Enums/ZDCNodeComponents.html":{"name":"ZDCNodeComponents","abstract":"<p>Bitmask for specifiying which components that need to be downloaded from the cloud.</p>"},"Other%20Constants.html#/c:@kZDCCollection_CachedResponse":{"name":"kZDCCollection_CachedResponse","abstract":"<p>Name of collection in YapDatabase. All ZeroDark collection constants start with <q>ZDC</q></p>"},"Other%20Constants.html#/c:@kZDCCollection_CloudNodes":{"name":"kZDCCollection_CloudNodes","abstract":"<p>Name of collection in YapDatabase. All ZeroDark collection constants start with <q>ZDC</q></p>"},"Other%20Constants.html#/c:@kZDCCollection_Nodes":{"name":"kZDCCollection_Nodes","abstract":"<p>Name of collection in YapDatabase. All ZeroDark collection constants start with <q>ZDC</q></p>"},"Other%20Constants.html#/c:@kZDCCollection_Prefs":{"name":"kZDCCollection_Prefs","abstract":"<p>Name of collection in YapDatabase. All ZeroDark collection constants start with <q>ZDC</q></p>"},"Other%20Constants.html#/c:@kZDCCollection_PublicKeys":{"name":"kZDCCollection_PublicKeys","abstract":"<p>Name of collection in YapDatabase. All ZeroDark collection constants start with <q>ZDC</q></p>"},"Other%20Constants.html#/c:@kZDCCollection_PullState":{"name":"kZDCCollection_PullState","abstract":"<p>Name of collection in YapDatabase. All ZeroDark collection constants start with <q>ZDC</q></p>"},"Other%20Constants.html#/c:@kZDCCollection_Reminders":{"name":"kZDCCollection_Reminders","abstract":"<p>Name of collection in YapDatabase. All ZeroDark collection constants start with <q>ZDC</q></p>"},"Other%20Constants.html#/c:@kZDCCollection_SessionStorage":{"name":"kZDCCollection_SessionStorage","abstract":"<p>Name of collection in YapDatabase. All ZeroDark collection constants start with <q>ZDC</q></p>"},"Other%20Constants.html#/c:@kZDCCollection_SymmetricKeys":{"name":"kZDCCollection_SymmetricKeys","abstract":"<p>Name of collection in YapDatabase. All ZeroDark collection constants start with <q>ZDC</q></p>"},"Other%20Constants.html#/c:@kZDCCollection_Tasks":{"name":"kZDCCollection_Tasks","abstract":"<p>Name of collection in YapDatabase. All ZeroDark collection constants start with <q>ZDC</q></p>"},"Other%20Constants.html#/c:@kZDCCollection_Users":{"name":"kZDCCollection_Users","abstract":"<p>Name of collection in YapDatabase. All ZeroDark collection constants start with <q>ZDC</q></p>"},"Other%20Constants.html#/c:@kZDCCollection_UserAuth":{"name":"kZDCCollection_UserAuth","abstract":"<p>Name of collection in YapDatabase. All ZeroDark collection constants start with <q>ZDC</q></p>"},"Other%20Constants.html#/c:@kZDCCollection_SplitKeys":{"name":"kZDCCollection_SplitKeys","abstract":"<p>Name of collection in YapDatabase. All ZeroDark collection constants start with <q>ZDC</q></p>"},"Other%20Constants.html#/c:@kZDCCollection_SplitKeyShares":{"name":"kZDCCollection_SplitKeyShares","abstract":"<p>Name of collection in YapDatabase. All ZeroDark collection constants start with <q>ZDC</q></p>"},"Other%20Constants.html#/c:@kZDCCloudFileName_PublicKey":{"name":"kZDCCloudFileName_PublicKey","abstract":"<p>Every account has a <q>.pubKey</q> file."},"Other%20Constants.html#/c:@kZDCCloudFileName_PrivateKey":{"name":"kZDCCloudFileName_PrivateKey","abstract":"<p>Every account has a <q>.privKey</q> file."},"Other%20Constants.html#/c:@kZDCCloudFileExtension_Rcrd":{"name":"kZDCCloudFileExtension_Rcrd","abstract":"<p>The RCRD file contains ONLY the treesystem metadata."},"Other%20Constants.html#/c:@kZDCCloudFileExtension_Data":{"name":"kZDCCloudFileExtension_Data","abstract":"<p>The DATA file contains the (encrypted) content of the node."},"Other%20Constants.html#/c:@kZDCDirPrefix_Home":{"name":"kZDCDirPrefix_Home","abstract":"<p>A <q>DirPrefix</q> is a part of the encrypted cloudName of a file."},"Other%20Constants.html#/c:@kZDCDirPrefix_Prefs":{"name":"kZDCDirPrefix_Prefs","abstract":"<p>A <q>DirPrefix</q> is a part of the encrypted cloudName of a file."},"Other%20Constants.html#/c:@kZDCDirPrefix_MsgsIn":{"name":"kZDCDirPrefix_MsgsIn","abstract":"<p>A <q>DirPrefix</q> is a part of the encrypted cloudName of a file."},"Other%20Constants.html#/c:@kZDCDirPrefix_MsgsOut":{"name":"kZDCDirPrefix_MsgsOut","abstract":"<p>A <q>DirPrefix</q> is a part of the encrypted cloudName of a file."},"Other%20Constants.html#/c:@kZDCDirPrefix_Avatar":{"name":"kZDCDirPrefix_Avatar","abstract":"<p>A <q>DirPrefix</q> is a part of the encrypted cloudName of a file."},"Other%20Constants.html#/c:@kZDCDirPrefix_Deprecated_Msgs":{"name":"kZDCDirPrefix_Deprecated_Msgs","abstract":"<p>A <q>DirPrefix</q> is a part of the encrypted cloudName of a file. (Deprecated)</p>"},"Other%20Constants.html#/c:@kZDCDirPrefix_Deprecated_Inbox":{"name":"kZDCDirPrefix_Deprecated_Inbox","abstract":"<p>A <q>DirPrefix</q> is a part of the encrypted cloudName of a file. (Deprecated)</p>"},"Other%20Constants.html#/c:@kZDCDirPrefix_Deprecated_Outbox":{"name":"kZDCDirPrefix_Deprecated_Outbox","abstract":"<p>A <q>DirPrefix</q> is a part of the encrypted cloudName of a file. (Deprecated)</p>"},"Other%20Constants.html#/c:@UIDatabaseConnectionWillUpdateNotification":{"name":"UIDatabaseConnectionWillUpdateNotification","abstract":"<p>The following notifications are automatically posted for the uiDatabaseConnection:</p>"},"Other%20Constants.html#/c:@UIDatabaseConnectionDidUpdateNotification":{"name":"UIDatabaseConnectionDidUpdateNotification","abstract":"<p>The following notifications are automatically posted for the uiDatabaseConnection:</p>"},"Other%20Constants.html#/c:@kNotificationsKey":{"name":"kNotificationsKey","abstract":"<p>Used by UIDatabaseConnectionDidUpdateNotification.userInfo."},"Other%20Constants.html#/c:@Ext_Relationship":{"name":"Ext_Relationship","abstract":"<p>YapDatabase extension of type: YapDatabaseRelationship <br/>"},"Other%20Constants.html#/c:@Ext_Index_Nodes":{"name":"Ext_Index_Nodes","abstract":"<p>YapDatabase extension of type: YapDatabaseSecondaryIndex <br/>"},"Other%20Constants.html#/c:@Ext_Index_Users":{"name":"Ext_Index_Users","abstract":"<p>YapDatabase extension of type: YapDatabaseSecondaryIndex <br/>"},"Other%20Constants.html#/c:@Ext_View_SplitKeys":{"name":"Ext_View_SplitKeys","abstract":"<p>YapDatabase extension of type: YapDatabaseAutoView <br/>"},"Other%20Constants.html#/c:@Ext_View_SplitKeys_Date":{"name":"Ext_View_SplitKeys_Date","abstract":"<p>YapDatabase extension of type: YapDatabaseAutoView <br/>"},"Other%20Constants.html#/c:@Ext_View_LocalUsers":{"name":"Ext_View_LocalUsers","abstract":"<p>YapDatabase extension of type: YapDatabaseAutoView <br/>"},"Other%20Constants.html#/c:@Ext_View_Treesystem_Name":{"name":"Ext_View_Treesystem_Name","abstract":"<p>YapDatabase extension of type: YapDatabaseAutoView <br/>"},"Other%20Constants.html#/c:@Ext_View_Treesystem_CloudName":{"name":"Ext_View_Treesystem_CloudName","abstract":"<p>YapDatabase extension of type: YapDatabaseAutoView <br/>"},"Other%20Constants.html#/c:@Ext_View_Flat":{"name":"Ext_View_Flat","abstract":"<p>YapDatabase extension of type: YapDatabaseAutoView <br/>"},"Other%20Constants.html#/c:@Ext_View_CloudNode_DirPrefix":{"name":"Ext_View_CloudNode_DirPrefix","abstract":"<p>YapDatabase extension of type: YapDatabaseAutoView <br/>"},"Other%20Constants.html#/c:@Ext_View_Cloud_Flat":{"name":"Ext_View_Cloud_Flat","abstract":"<p>YapDatabase extension of type: YapDatabaseAutoView <br/>"},"Other%20Constants.html#/c:@Ext_CloudCore_Prefix":{"name":"Ext_CloudCore_Prefix","abstract":"<p>The prefix used to register YapDatabase extensions of type: ZDCCloud</p>"},"Other%20Constants.html#/c:@Index_Nodes_Column_CloudID":{"name":"Index_Nodes_Column_CloudID","abstract":"<p>Secondary Index column name for: <code><a href=\"36f8f5912051ae747ef441d6511ca4cbOther%20Constants.html#/c:@Ext_Index_Nodes\">Ext_Index_Nodes</a></code></p>"},"Other%20Constants.html#/c:@Index_Nodes_Column_DirPrefix":{"name":"Index_Nodes_Column_DirPrefix","abstract":"<p>Secondary Index column name for: <code><a href=\"36f8f5912051ae747ef441d6511ca4cbOther%20Constants.html#/c:@Ext_Index_Nodes\">Ext_Index_Nodes</a></code></p>"},"Other%20Constants.html#/c:@Index_Nodes_Column_PointeeID":{"name":"Index_Nodes_Column_PointeeID","abstract":"<p>Secondary Index column name for: <code><a href=\"36f8f5912051ae747ef441d6511ca4cbOther%20Constants.html#/c:@Ext_Index_Nodes\">Ext_Index_Nodes</a></code></p>"},"Other%20Constants.html#/c:@Index_Users_Column_RandomUUID":{"name":"Index_Users_Column_RandomUUID","abstract":"<p>Secondary Index column name for: <code><a href=\"36f8f5912051ae747ef441d6511ca4cbOther%20Constants.html#/c:@Ext_Index_Users\">Ext_Index_Users</a></code></p>"},"Other%20Constants.html#/c:@ZDCDiskManagerChangedNotification":{"name":"ZDCDiskManagerChangedNotification","abstract":"<p>The ZDCDiskManagerChangedNotification is posted to the main thread anytime items change in the cache.</p>"},"Other%20Constants.html#/c:@kZDCDiskManagerChanges":{"name":"kZDCDiskManagerChanges","abstract":"<p>A key for the ZDCDiskManagerChangedNotification.userInfo dictionary,"},"Other%20Constants.html#/c:@ZDCProgressListChangedNotification":{"name":"ZDCProgressListChangedNotification","abstract":"<p>This notification is posted (to the main thread) whenever the progress list changes.</p>"},"Other%20Constants.html#/c:@kZDCProgressManagerChanges":{"name":"kZDCProgressManagerChanges","abstract":"<p>A key for the ZDCProgressListChangedNotification.userInfo dictionary,"},"Other%20Constants.html#/c:@ZDCProgressTypeKey":{"name":"ZDCProgressTypeKey","abstract":"<p>When a NSProgress instance is registered with the ProgressManager,"},"Other%20Constants.html#/c:@ZDCNodeMetaComponentsKey":{"name":"ZDCNodeMetaComponentsKey","abstract":"<p>When a NSProgress instance of type ZDCProgressType_MetaDownload is registered with the ProgressManager,"},"Other%20Constants.html#/c:@ZDCSyncStatusChangedNotification":{"name":"ZDCSyncStatusChangedNotification","abstract":"<p>This notification is broadcast whenever the sync status changes, which includes:</p>"},"Other%20Constants.html#/c:@kZDCSyncStatusNotificationInfo":{"name":"kZDCSyncStatusNotificationInfo","abstract":"<p>A key for the notification.userInfo dictionary of ZDCSyncStatusChangedNotification."},"Other%20Constants.html#/c:@ZDCShareKeyType_User":{"name":"ZDCShareKeyType_User","abstract":"<p>Keys are a compound component: <q>{type}:{identifier}</q>"},"Other%20Constants.html#/c:@ZDCShareKeyType_Server":{"name":"ZDCShareKeyType_Server","abstract":"<p>Keys are a compound component: <q>{type}:{identifier}</q>"},"Other%20Constants.html#/c:@ZDCShareKeyType_Passphrase":{"name":"ZDCShareKeyType_Passphrase","abstract":"<p>Keys are a compound component: <q>{type}:{identifier}</q>"},"Other%20Constants.html#/c:@kZDCAnonymousUserID":{"name":"kZDCAnonymousUserID","abstract":"<p>The userID used to represent non-ZeroDark users within the system.</p>"},"Other%20Constants.html#/c:@ZDCStreamCloudFileSection":{"name":"ZDCStreamCloudFileSection","abstract":"<p>This property allows you to jump to a specific section (via NSInputStream&rsquo;s <code>setProperty:forKey:</code> method).</p>"},"Other%20Constants.html#/c:@ZDCStreamFileMinOffset":{"name":"ZDCStreamFileMinOffset","abstract":"<p>This property is available for some streams."},"Other%20Constants.html#/c:@ZDCStreamFileMaxOffset":{"name":"ZDCStreamFileMaxOffset","abstract":"<p>This property is available for some streams."},"Other%20Constants.html#/c:@ZDCStreamReturnEOFOnWouldBlock":{"name":"ZDCStreamReturnEOFOnWouldBlock","abstract":"<p>This property is available for some streams."},"Other%20Constants.html#/c:@ZDCStreamUnexpectedFileSize":{"name":"ZDCStreamUnexpectedFileSize","abstract":"<p>This error code is used when an unexpected cleartext file size is encountered.</p>"},"Other%20Constants.html#/c:@ZDCFileModifiedDuringRead":{"name":"ZDCFileModifiedDuringRead","abstract":"<p>The purpose of the ZDCInterruptingInputStream class is to"},"Other%20Constants.html#/c:@ZDCLocalizedDescriptionKey":{"name":"ZDCLocalizedDescriptionKey","abstract":"<p>Custom key for NSProgress.userInfo dictionary."},"Other%20Constants.html#/c:@ZDCChildProgressTypeKey":{"name":"ZDCChildProgressTypeKey","abstract":"<p>Custom key for NSProgress.userInfo dictionary."},"Classes/ZDCSearchMatch.html#/c:objc(cs)ZDCSearchMatch(py)identityID":{"name":"identityID","abstract":"<p>A reference to the corresponding ZDCUserIdentity.</p>","parent_name":"ZDCSearchMatch"},"Classes/ZDCSearchMatch.html#/c:objc(cs)ZDCSearchMatch(py)matchingString":{"name":"matchingString","abstract":"<p>The string that matched the user&rsquo;s query.</p>","parent_name":"ZDCSearchMatch"},"Classes/ZDCSearchMatch.html#/c:objc(cs)ZDCSearchMatch(py)matchingRanges":{"name":"matchingRanges","abstract":"<p>An array of NSRange values (wrapped in NSValue).</p>","parent_name":"ZDCSearchMatch"},"Classes/ZDCSearchResult.html#/c:objc(cs)ZDCSearchResult(py)userID":{"name":"userID","abstract":"<p>The user&rsquo;s ID (a 32 character string)</p>","parent_name":"ZDCSearchResult"},"Classes/ZDCSearchResult.html#/c:objc(cs)ZDCSearchResult(py)aws_region":{"name":"aws_region","abstract":"<p>The AWS region where the user&rsquo;s bucket resides.</p>","parent_name":"ZDCSearchResult"},"Classes/ZDCSearchResult.html#/c:objc(cs)ZDCSearchResult(py)aws_bucket":{"name":"aws_bucket","abstract":"<p>The name of the user&rsquo;s S3 bucket.</p>","parent_name":"ZDCSearchResult"},"Classes/ZDCSearchResult.html#/c:objc(cs)ZDCSearchResult(py)identities":{"name":"identities","abstract":"<p>The list of linked social identities for the user&rsquo;s account.</p>","parent_name":"ZDCSearchResult"},"Classes/ZDCSearchResult.html#/c:objc(cs)ZDCSearchResult(py)matches":{"name":"matches","abstract":"<p>Detailed information concerning how this user matched the query.</p>","parent_name":"ZDCSearchResult"},"Classes/ZDCSearchResult.html#/c:objc(cs)ZDCSearchResult(py)preferredIdentityID":{"name":"preferredIdentityID","abstract":"<p>The preferredIdentityID controls how the system prefers to display the user within the UI.</p>","parent_name":"ZDCSearchResult"},"Classes/ZDCSearchResult.html#/c:objc(cs)ZDCSearchResult(py)displayIdentity":{"name":"displayIdentity","abstract":"<p>Extracts an identity for the user from their list of linked identities.","parent_name":"ZDCSearchResult"},"Classes/ZDCSearchResult.html#/c:objc(cs)ZDCSearchResult(im)identityWithID:":{"name":"-identityWithID:","abstract":"<p>Returns the identity with the given ID, if it exists.</p>","parent_name":"ZDCSearchResult"},"Classes/ZDCSearchResult.html#/c:objc(cs)ZDCSearchResult(im)initWithUser:":{"name":"-initWithUser:","abstract":"<p>create a ZDCSearchResult from an existing ZDCUser</p>","parent_name":"ZDCSearchResult"},"Classes/ZDCSearchOptions.html#/c:objc(cs)ZDCSearchOptions(py)providerToSearch":{"name":"providerToSearch","abstract":"<p>The default value is <q>*</q>, which searches all providers.</p>","parent_name":"ZDCSearchOptions"},"Classes/ZDCSearchOptions.html#/c:objc(cs)ZDCSearchOptions(py)searchLocalDatabase":{"name":"searchLocalDatabase","abstract":"<p>Whether or not to search the local database.","parent_name":"ZDCSearchOptions"},"Classes/ZDCSearchOptions.html#/c:objc(cs)ZDCSearchOptions(py)searchLocalCache":{"name":"searchLocalCache","abstract":"<p>Whether or not to search the local cache (from previous search queries).","parent_name":"ZDCSearchOptions"},"Classes/ZDCSearchOptions.html#/c:objc(cs)ZDCSearchOptions(py)searchRemoteServer":{"name":"searchRemoteServer","abstract":"<p>Whether or not to send the search query to the server.","parent_name":"ZDCSearchOptions"},"Classes/ZDCUserDisplay.html#/c:objc(cs)ZDCUserDisplay(py)userID":{"name":"userID","abstract":"<p>The userID (i.e. ZDCUser.uuid)</p>","parent_name":"ZDCUserDisplay"},"Classes/ZDCUserDisplay.html#/c:objc(cs)ZDCUserDisplay(py)displayName":{"name":"displayName","abstract":"<p>A unique name for the user, within the context of the returned array.</p>","parent_name":"ZDCUserDisplay"},"Classes/ZDCAccountSetupViewControllerProxy.html#/c:objc(cs)ZDCAccountSetupViewControllerProxy(im)pushCreateAccount":{"name":"-pushCreateAccount","abstract":"<p>Undocumented</p>","parent_name":"ZDCAccountSetupViewControllerProxy"},"Classes/ZDCAccountSetupViewControllerProxy.html#/c:objc(cs)ZDCAccountSetupViewControllerProxy(im)pushSignInToAccount":{"name":"-pushSignInToAccount","abstract":"<p>Undocumented</p>","parent_name":"ZDCAccountSetupViewControllerProxy"},"Classes/ZDCSyncStatusNotificationInfo.html#/c:objc(cs)ZDCSyncStatusNotificationInfo(py)type":{"name":"type","abstract":"<p>Tells you which type of notification is being broadcast.</p>","parent_name":"ZDCSyncStatusNotificationInfo"},"Classes/ZDCSyncStatusNotificationInfo.html#/c:objc(cs)ZDCSyncStatusNotificationInfo(py)localUserID":{"name":"localUserID","abstract":"<p>A reference to the localUser being pulled/pushed. (localUserID == ZDCLocalUser.uuid)</p>","parent_name":"ZDCSyncStatusNotificationInfo"},"Classes/ZDCSyncStatusNotificationInfo.html#/c:objc(cs)ZDCSyncStatusNotificationInfo(py)treeID":{"name":"treeID","abstract":"<p>The treeID of the system being pulled/pushed. (e.g. <q>com.busines.myApp</q>)</p>","parent_name":"ZDCSyncStatusNotificationInfo"},"Classes/ZDCSyncStatusNotificationInfo.html#/c:objc(cs)ZDCSyncStatusNotificationInfo(py)pullResult":{"name":"pullResult","abstract":"<p>If the notification type is PullStopped,","parent_name":"ZDCSyncStatusNotificationInfo"},"Classes/ZDCProgressManagerChanges.html#/c:objc(cs)ZDCProgressManagerChanges(py)progressType":{"name":"progressType","abstract":"<p>The type of progress item that changed.</p>","parent_name":"ZDCProgressManagerChanges"},"Classes/ZDCProgressManagerChanges.html#/c:objc(cs)ZDCProgressManagerChanges(py)localUserID":{"name":"localUserID","abstract":"<p>The localUser for which the progress is associated. (localUserID == ZDCLocalUser.uuid)</p>","parent_name":"ZDCProgressManagerChanges"},"Classes/ZDCProgressManagerChanges.html#/c:objc(cs)ZDCProgressManagerChanges(py)nodeID":{"name":"nodeID","abstract":"<p>The node for which the progress is associated. (nodeID == ZDCNode.uuid)</p>","parent_name":"ZDCProgressManagerChanges"},"Classes/ZDCProgressManagerChanges.html#/c:objc(cs)ZDCProgressManagerChanges(py)metaComponents":{"name":"metaComponents","abstract":"<p>If the progressType is <code>ZDCProgressType_MetaDownload</code>,","parent_name":"ZDCProgressManagerChanges"},"Classes/ZDCProgressManagerChanges.html#/c:objc(cs)ZDCProgressManagerChanges(py)operationUUID":{"name":"operationUUID","abstract":"<p>If the progressType is <code>ZDCProgressType_Upload</code>,","parent_name":"ZDCProgressManagerChanges"},"Classes/ZDCProgressManagerChanges.html#/c:objc(cs)ZDCProgressManagerChanges(py)isDataUpload":{"name":"isDataUpload","abstract":"<p>If the progressType is <code>ZDCProgressType_Upload</code>,","parent_name":"ZDCProgressManagerChanges"},"Classes/ZDCFetchOptions.html#/c:objc(cs)ZDCFetchOptions(py)downloadIfMarkedAsNeedsDownload":{"name":"downloadIfMarkedAsNeedsDownload","abstract":"<p>Applies to Node Thumbnails:</p>","parent_name":"ZDCFetchOptions"},"Classes/ZDCFetchOptions.html#/c:objc(cs)ZDCFetchOptions(py)identityID":{"name":"identityID","abstract":"<p>Applies to User Avatars:</p>","parent_name":"ZDCFetchOptions"},"Classes/ZDCDownloadTicket.html#/c:objc(cs)ZDCDownloadTicket(py)progress":{"name":"progress","abstract":"<p>The progress item can be used to track the download.</p>","parent_name":"ZDCDownloadTicket"},"Classes/ZDCDownloadTicket.html#/c:objc(cs)ZDCDownloadTicket(im)cancel":{"name":"-cancel","abstract":"<p>Indicates to the DownloadManager that you no longer need the data,","parent_name":"ZDCDownloadTicket"},"Classes/ZDCDownloadTicket.html#/c:objc(cs)ZDCDownloadTicket(im)ignore":{"name":"-ignore","abstract":"<p>Indicates to the DownloadManager that you no longer need the data,","parent_name":"ZDCDownloadTicket"},"Classes/ZDCDownloadOptions.html#/c:objc(cs)ZDCDownloadOptions(py)cacheToDiskManager":{"name":"cacheToDiskManager","abstract":"<p>If set to YES, then after downloading the file, the DownloadManager will store the file to disk via the DiskManager.</p>","parent_name":"ZDCDownloadOptions"},"Classes/ZDCDownloadOptions.html#/c:objc(cs)ZDCDownloadOptions(py)savePersistentlyToDiskManager":{"name":"savePersistentlyToDiskManager","abstract":"<p>If set to YES, then after downloading the file, the DownloadManager will store the file to disk via the DiskManager.</p>","parent_name":"ZDCDownloadOptions"},"Classes/ZDCDownloadOptions.html#/c:objc(cs)ZDCDownloadOptions(py)canDownloadWhileInBackground":{"name":"canDownloadWhileInBackground","abstract":"<p>Set to YES if you want to allow the download to continue while the app is backgrounded.</p>","parent_name":"ZDCDownloadOptions"},"Classes/ZDCDownloadOptions.html#/c:objc(cs)ZDCDownloadOptions(py)identityID":{"name":"identityID","abstract":"<p>Applies to user avatar downloads.</p>","parent_name":"ZDCDownloadOptions"},"Classes/ZDCDownloadOptions.html#/c:objc(cs)ZDCDownloadOptions(py)completionConsolidationTag":{"name":"completionConsolidationTag","abstract":"<p>The completionConsolidationTag helps you prevent multiple callbacks.</p>","parent_name":"ZDCDownloadOptions"},"Classes/ZDCDiskManagerChanges.html#/c:objc(cs)ZDCDiskManagerChanges(py)changedNodeIDs":{"name":"changedNodeIDs","abstract":"<p>A set of nodeID&rsquo;s (ZDCNode.uuid) that have changed (added, deleted or modified).","parent_name":"ZDCDiskManagerChanges"},"Classes/ZDCDiskManagerChanges.html#/c:objc(cs)ZDCDiskManagerChanges(py)changedNodeData":{"name":"changedNodeData","abstract":"<p>A set of nodeID&rsquo;s (ZDCNode.uuid) that have changed (added, deleted or modified).","parent_name":"ZDCDiskManagerChanges"},"Classes/ZDCDiskManagerChanges.html#/c:objc(cs)ZDCDiskManagerChanges(py)changedNodeThumbnails":{"name":"changedNodeThumbnails","abstract":"<p>A set of nodeID&rsquo;s (ZDCNode.uuid) that have changed (added, deleted or modified).","parent_name":"ZDCDiskManagerChanges"},"Classes/ZDCDiskManagerChanges.html#/c:objc(cs)ZDCDiskManagerChanges(py)changedUsersIDs":{"name":"changedUsersIDs","abstract":"<p>A set of userID&rsquo;s (ZDCUser.uuid) that have changed (added, deleted or modified).","parent_name":"ZDCDiskManagerChanges"},"Classes/ZDCDiskExport.html#/c:objc(cs)ZDCDiskExport(py)cryptoFile":{"name":"cryptoFile","abstract":"<p>If the file exists on disk (and is not a nil placholder) then this property will be set.","parent_name":"ZDCDiskExport"},"Classes/ZDCDiskExport.html#/c:objc(cs)ZDCDiskExport(py)isNilPlaceholder":{"name":"isNilPlaceholder","abstract":"<p>True if the file was imported as a nil placeholder.</p>","parent_name":"ZDCDiskExport"},"Classes/ZDCDiskExport.html#/c:objc(cs)ZDCDiskExport(py)isStoredPersistently":{"name":"isStoredPersistently","abstract":"<p>True if the file is stored in persistent mode.","parent_name":"ZDCDiskExport"},"Classes/ZDCDiskExport.html#/c:objc(cs)ZDCDiskExport(py)eTag":{"name":"eTag","abstract":"<p>The eTag associated with the file when it was imported.</p>","parent_name":"ZDCDiskExport"},"Classes/ZDCDiskExport.html#/c:objc(cs)ZDCDiskExport(py)expiration":{"name":"expiration","abstract":"<p>The expiration associated with the file when it was imported.","parent_name":"ZDCDiskExport"},"Classes/ZDCDiskImport.html#/c:objc(cs)ZDCDiskImport(im)init":{"name":"-init","abstract":"<p>Creates an <q>empty</q> import, which acts as a nil placeholder.</p>","parent_name":"ZDCDiskImport"},"Classes/ZDCDiskImport.html#/c:objc(cs)ZDCDiskImport(im)initWithCleartextData:":{"name":"-initWithCleartextData:","abstract":"<p>Creates an import with the given cleartext data.","parent_name":"ZDCDiskImport"},"Classes/ZDCDiskImport.html#/c:objc(cs)ZDCDiskImport(im)initWithCleartextFileURL:":{"name":"-initWithCleartextFileURL:","abstract":"<p>Creates an import with the given cleartext file.","parent_name":"ZDCDiskImport"},"Classes/ZDCDiskImport.html#/c:objc(cs)ZDCDiskImport(im)initWithCryptoFile:":{"name":"-initWithCryptoFile:","abstract":"<p>Creates an import with the given crypto file.","parent_name":"ZDCDiskImport"},"Classes/ZDCDiskImport.html#/c:objc(cs)ZDCDiskImport(py)cleartextData":{"name":"cleartextData","abstract":"<p>The parameter passed during init</p>","parent_name":"ZDCDiskImport"},"Classes/ZDCDiskImport.html#/c:objc(cs)ZDCDiskImport(py)cleartextFileURL":{"name":"cleartextFileURL","abstract":"<p>The parameter passed during init</p>","parent_name":"ZDCDiskImport"},"Classes/ZDCDiskImport.html#/c:objc(cs)ZDCDiskImport(py)cryptoFile":{"name":"cryptoFile","abstract":"<p>The parameter passed during init</p>","parent_name":"ZDCDiskImport"},"Classes/ZDCDiskImport.html#/c:objc(cs)ZDCDiskImport(py)isNilPlaceholder":{"name":"isNilPlaceholder","abstract":"<p>True if the all the following are nil: <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ZDCDiskImport.html#/c:objc(cs)ZDCDiskImport(py)cleartextData\">cleartextData</a></code>, <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ZDCDiskImport.html#/c:objc(cs)ZDCDiskImport(py)cleartextFileURL\">cleartextFileURL</a></code>, &amp; <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ZDCDiskImport.html#/c:objc(cs)ZDCDiskImport(py)cryptoFile\">cryptoFile</a></code></p>","parent_name":"ZDCDiskImport"},"Classes/ZDCDiskImport.html#/c:objc(cs)ZDCDiskImport(py)storePersistently":{"name":"storePersistently","abstract":"<p>If YES, the file is stored using persistent mode.","parent_name":"ZDCDiskImport"},"Classes/ZDCDiskImport.html#/c:objc(cs)ZDCDiskImport(py)migrateToCacheAfterUpload":{"name":"migrateToCacheAfterUpload","abstract":"<p>This value applies to files being imported with the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ZDCDiskImport.html#/c:objc(cs)ZDCDiskImport(py)storePersistently\">storePersistently</a></code> flag set to true.","parent_name":"ZDCDiskImport"},"Classes/ZDCDiskImport.html#/c:objc(cs)ZDCDiskImport(py)deleteAfterUpload":{"name":"deleteAfterUpload","abstract":"<p>If set to true, it instructs the DiskManager to automatically delete the file after","parent_name":"ZDCDiskImport"},"Classes/ZDCDiskImport.html#/c:objc(cs)ZDCDiskImport(py)eTag":{"name":"eTag","abstract":"<p>The DiskManager can store an associated eTag with every imported file.","parent_name":"ZDCDiskImport"},"Classes/ZDCDiskImport.html#/c:objc(cs)ZDCDiskImport(py)expiration":{"name":"expiration","abstract":"<p>The DiskManager supports an optional expiration interval (for non-persistent files).</p>","parent_name":"ZDCDiskImport"},"Classes/ZDCLogMessage.html#/c:objc(cs)ZDCLogMessage(im)initWithMessage:level:flag:file:function:line:":{"name":"-initWithMessage:level:flag:file:function:line:","abstract":"<p>Standard init method</p>","parent_name":"ZDCLogMessage"},"Classes/ZDCLogMessage.html#/c:objc(cs)ZDCLogMessage(py)message":{"name":"message","abstract":"<p>The log message. (e.g. <q>foo failed because bar returned 404</q>)</p>","parent_name":"ZDCLogMessage"},"Classes/ZDCLogMessage.html#/c:objc(cs)ZDCLogMessage(py)level":{"name":"level","abstract":"<p>The configured <code>zdcLogLevel</code> of the file from which the log was emitted.</p>","parent_name":"ZDCLogMessage"},"Classes/ZDCLogMessage.html#/c:objc(cs)ZDCLogMessage(py)flag":{"name":"flag","abstract":"<p>Tells you which flag triggered the log.","parent_name":"ZDCLogMessage"},"Classes/ZDCLogMessage.html#/c:objc(cs)ZDCLogMessage(py)file":{"name":"file","abstract":"<p>The full filePath (e.g. /Users/alice/code/myproject/ZeroDarkCloud/Managers/ZDCPushManager.m)","parent_name":"ZDCLogMessage"},"Classes/ZDCLogMessage.html#/c:objc(cs)ZDCLogMessage(py)fileName":{"name":"fileName","abstract":"<p>The lastPathComponent of the filePath, with the fileExtension removed. (e.g. ZDCPushManager)</p>","parent_name":"ZDCLogMessage"},"Classes/ZDCLogMessage.html#/c:objc(cs)ZDCLogMessage(py)function":{"name":"function","abstract":"<p>The name of function that triggered the log message.","parent_name":"ZDCLogMessage"},"Classes/ZDCLogMessage.html#/c:objc(cs)ZDCLogMessage(py)line":{"name":"line","abstract":"<p>The line number within the file. (i.e. location of emitted log message)</p>","parent_name":"ZDCLogMessage"},"Classes/ZDCDatabaseConfig.html#/c:objc(cs)ZDCDatabaseConfig(im)initWithEncryptionKey:":{"name":"-initWithEncryptionKey:","abstract":"<p>Creates an instance using the single required property.</p>","parent_name":"ZDCDatabaseConfig"},"Classes/ZDCDatabaseConfig.html#/c:objc(cs)ZDCDatabaseConfig(py)encryptionKey":{"name":"encryptionKey","abstract":"<p>The encryptionKey is used for encrypting &amp; decrypting the underlying data of the database.","parent_name":"ZDCDatabaseConfig"},"Classes/ZDCDatabaseConfig.html#/c:objc(cs)ZDCDatabaseConfig(py)configHook":{"name":"configHook","abstract":"<p>Allows you to configure the database for your app.</p>","parent_name":"ZDCDatabaseConfig"},"Classes/ZDCDataPromise.html#/c:objc(cs)ZDCDataPromise(im)fulfill:":{"name":"-fulfill:","abstract":"<p>Successfully completes the promise by delivering the data.</p>","parent_name":"ZDCDataPromise"},"Classes/ZDCDataPromise.html#/c:objc(cs)ZDCDataPromise(im)reject":{"name":"-reject","abstract":"<p>Rejects the promise due to an error.","parent_name":"ZDCDataPromise"},"Classes/ZDCConfig.html#/c:objc(cs)ZDCConfig(im)initWithPrimaryTreeID:":{"name":"-initWithPrimaryTreeID:","abstract":"<p>A treeID is a unique identifier for the container where your application stores its data.</p>","parent_name":"ZDCConfig"},"Classes/ZDCConfig.html#/c:objc(cs)ZDCConfig(py)primaryTreeID":{"name":"primaryTreeID","abstract":"<p>The default treeID, which is the treeID specified during initialization.</p>","parent_name":"ZDCConfig"},"Classes/ZDCConfig.html#/c:objc(cs)ZDCConfig(py)databaseName":{"name":"databaseName","abstract":"<p>Typically, you only need a single ZeroDarkCloud instance per app.","parent_name":"ZDCConfig"},"Classes/ZDCConfig.html#/c:objc(cs)ZDCConfig(im)addTreeID:":{"name":"-addTreeID:","abstract":"<p>Adds a treeID to the list of application containers you&rsquo;re requesting access to.</p>","parent_name":"ZDCConfig"},"Classes/ZDCAudit.html#/c:objc(cs)ZDCAudit(py)localUserID":{"name":"localUserID","abstract":"<p>The target of the audit.</p>","parent_name":"ZDCAudit"},"Classes/ZDCAudit.html#/c:objc(cs)ZDCAudit(py)aws_region":{"name":"aws_region","abstract":"<p>The name of the region in which the S3 belongs.","parent_name":"ZDCAudit"},"Classes/ZDCAudit.html#/c:objc(cs)ZDCAudit(py)aws_bucket":{"name":"aws_bucket","abstract":"<p>The name of the bucket in AWS S3.</p>","parent_name":"ZDCAudit"},"Classes/ZDCAudit.html#/c:objc(cs)ZDCAudit(py)aws_accessKeyID":{"name":"aws_accessKeyID","abstract":"<p>Part of the credentials used by AWS.</p>","parent_name":"ZDCAudit"},"Classes/ZDCAudit.html#/c:objc(cs)ZDCAudit(py)aws_secret":{"name":"aws_secret","abstract":"<p>Part of the credentials used by AWS.</p>","parent_name":"ZDCAudit"},"Classes/ZDCAudit.html#/c:objc(cs)ZDCAudit(py)aws_session":{"name":"aws_session","abstract":"<p>Part of the credentials used by AWS.</p>","parent_name":"ZDCAudit"},"Classes/ZDCAudit.html#/c:objc(cs)ZDCAudit(py)aws_expiration":{"name":"aws_expiration","abstract":"<p>The AWS credentials are only valid for a short period of time. (usualy just a few hours)","parent_name":"ZDCAudit"},"Classes/ZDCMerkleTree.html#/c:objc(cs)ZDCMerkleTree(cm)parseFile:error:":{"name":"+parseFile:error:","abstract":"<p>Attempts to parse the given dictionary.","parent_name":"ZDCMerkleTree"},"Classes/ZDCMerkleTree.html#/c:objc(cs)ZDCMerkleTree(im)hashAndVerify:":{"name":"-hashAndVerify:","abstract":"<p>This method performs a self-verify operation:</p>","parent_name":"ZDCMerkleTree"},"Classes/ZDCMerkleTree.html#/c:objc(cs)ZDCMerkleTree(im)rootHash":{"name":"-rootHash","abstract":"<p>Returns the merkleTree root value, as specified within the JSON.","parent_name":"ZDCMerkleTree"},"Classes/ZDCMerkleTree.html#/c:objc(cs)ZDCMerkleTree(im)userIDs":{"name":"-userIDs","abstract":"<p>Returns the set of userID&rsquo;s contained within the merkle tree file.</p>","parent_name":"ZDCMerkleTree"},"Classes/ZDCMerkleTree.html#/c:objc(cs)ZDCMerkleTree(im)getPubKey:keyID:forUserID:":{"name":"-getPubKey:keyID:forUserID:","abstract":"<p>Extracts the pubKey &amp; keyID values from the JSON.</p>","parent_name":"ZDCMerkleTree"},"Classes/ZDCMerkleTree.html":{"name":"ZDCMerkleTree","abstract":"<p>Utility class for parsing &amp; reading merkingTree files, as downloaded from ZDC servers.</p>"},"Classes/ZDCAudit.html":{"name":"ZDCAudit","abstract":"<p>You&rsquo;re always welcome to audit your user data stored in the cloud.</p>"},"Classes/ZDCConfig.html":{"name":"ZDCConfig","abstract":"<p>Container class for configuring ZeroDarkCloud."},"Classes/ZDCDataPromise.html":{"name":"ZDCDataPromise","abstract":"<p>A simple promise-like inteface for returning NodeData in an asynchronous fashion.</p>"},"Classes/ZDCDatabaseConfig.html":{"name":"ZDCDatabaseConfig","abstract":"<p>Container class for configuring the database."},"Classes/ZDCLogMessage.html":{"name":"ZDCLogMessage","abstract":"<p>Ecapsulates detailed information about an emitted log message.</p>"},"Classes/ZDCDiskImport.html":{"name":"ZDCDiskImport","abstract":"<p>Encapsulates the parameters used when importing a file into the DiskManager.</p>"},"Classes/ZDCDiskExport.html":{"name":"ZDCDiskExport","abstract":"<p>Provides all the information about a file being managed by the DiskManager.</p>"},"Classes/ZDCDiskManagerChanges.html":{"name":"ZDCDiskManagerChanges","abstract":"<p>Instances of this class are broadcast via <code><a href=\"36f8f5912051ae747ef441d6511ca4cbOther%20Constants.html#/c:@ZDCDiskManagerChangedNotification\">ZDCDiskManagerChangedNotification</a></code>.</p>"},"Classes/ZDCDownloadOptions.html":{"name":"ZDCDownloadOptions","abstract":"<p>A simple container for holding several different download options.</p>"},"Classes/ZDCDownloadTicket.html":{"name":"ZDCDownloadTicket","abstract":"<p>The DownloadManager automatically consolidates multiple requests for the same item into a single task."},"Classes/ZDCFetchOptions.html":{"name":"ZDCFetchOptions","abstract":"<p>FetchOptions allow you to configure the scenarios in which the image is downloaded from the cloud.</p>"},"Classes/ZDCProgressManagerChanges.html":{"name":"ZDCProgressManagerChanges","abstract":"<p>Instances of this class are broadcast via <code>ZDCProgressManagerChangedNotification</code>.</p>"},"Classes/ZDCSyncStatusNotificationInfo.html":{"name":"ZDCSyncStatusNotificationInfo","abstract":"<p>When a ZDCSyncStatusChangedNotification is posed, an instance of this class is added the notification.userInfo.</p>"},"Classes/ZDCAccountSetupViewControllerProxy.html":{"name":"ZDCAccountSetupViewControllerProxy","abstract":"<p>Undocumented</p>"},"Classes/ZDCUserDisplay.html":{"name":"ZDCUserDisplay","abstract":"<p>Instances of this class are created by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ZDCUserManager.html#/c:objc(cs)ZDCUserManager(im)sortedUnambiguousNamesForUsers:\">-[ZDCUserManager sortedUnambiguousNamesForUsers:]</a></code>.</p>"},"Classes/ZDCSearchOptions.html":{"name":"ZDCSearchOptions","abstract":"<p>/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////</p>"},"Classes/ZDCSearchResult.html":{"name":"ZDCSearchResult","abstract":"<p>A search result represents a particular user, along with their basic cloud information &amp; linked identities.</p>"},"Classes/ZDCSearchMatch.html":{"name":"ZDCSearchMatch","abstract":"<p>Provides detailed information concerning which identities matched the search,"},"Classes/AWSSignature.html#/c:objc(cs)AWSSignature(cm)signRequest:withRegion:service:accessKeyID:secret:session:":{"name":"+signRequest:withRegion:service:accessKeyID:secret:session:","abstract":"<p>The the workflow for most AWS requests is this:</p>","parent_name":"AWSSignature"},"Classes/AWSSignature.html#/c:objc(cs)AWSSignature(cm)signRequest:withRegion:service:accessKeyID:secret:session:payloadSig:":{"name":"+signRequest:withRegion:service:accessKeyID:secret:session:payloadSig:","abstract":"<p>The the workflow for most AWS requests is this:</p>","parent_name":"AWSSignature"},"Classes/AWSSignature.html#/c:objc(cs)AWSSignature(cm)setContentTypeHeaderAutomatically:":{"name":"+setContentTypeHeaderAutomatically:","abstract":"<p>The &lsquo;Content-Type&rsquo; header is required in order for some requests to work properly.","parent_name":"AWSSignature"},"Enums/AWSService.html#/c:@E@AWSService@AWSService_S3":{"name":"AWSService_S3","abstract":"<p>S3</p>","parent_name":"AWSService"},"Enums/AWSService.html#/c:@E@AWSService@AWSService_APIGateway":{"name":"AWSService_APIGateway","abstract":"<p>API Gateway</p>","parent_name":"AWSService"},"Enums/AWSService.html#/c:@E@AWSService@AWSService_Invalid":{"name":"AWSService_Invalid","abstract":"<p>Represents an invalid service. Kinda like a nil value.</p>","parent_name":"AWSService"},"Classes/AWSServices.html#/c:objc(cs)AWSServices(cm)shortNameForService:":{"name":"+shortNameForService:","abstract":"<p>Returns the short name of the service.","parent_name":"AWSServices"},"Enums/AWSRegion.html#/c:@E@AWSRegion@AWSRegion_US_East_1":{"name":"AWSRegion_US_East_1","abstract":"<p>USA (N. Virginia)</p>","parent_name":"AWSRegion"},"Enums/AWSRegion.html#/c:@E@AWSRegion@AWSRegion_US_East_2":{"name":"AWSRegion_US_East_2","abstract":"<p>USA (Ohio)</p>","parent_name":"AWSRegion"},"Enums/AWSRegion.html#/c:@E@AWSRegion@AWSRegion_US_West_1":{"name":"AWSRegion_US_West_1","abstract":"<p>USA (N. California)</p>","parent_name":"AWSRegion"},"Enums/AWSRegion.html#/c:@E@AWSRegion@AWSRegion_US_West_2":{"name":"AWSRegion_US_West_2","abstract":"<p>USA (Oregon)</p>","parent_name":"AWSRegion"},"Enums/AWSRegion.html#/c:@E@AWSRegion@AWSRegion_US_GovCloud_West_1":{"name":"AWSRegion_US_GovCloud_West_1","abstract":"<p>USA (GovCloud)</p>","parent_name":"AWSRegion"},"Enums/AWSRegion.html#/c:@E@AWSRegion@AWSRegion_EU_West_1":{"name":"AWSRegion_EU_West_1","abstract":"<p>Europe (Ireland)</p>","parent_name":"AWSRegion"},"Enums/AWSRegion.html#/c:@E@AWSRegion@AWSRegion_EU_West_2":{"name":"AWSRegion_EU_West_2","abstract":"<p>Europe (London)</p>","parent_name":"AWSRegion"},"Enums/AWSRegion.html#/c:@E@AWSRegion@AWSRegion_EU_West_3":{"name":"AWSRegion_EU_West_3","abstract":"<p>Europe (Paris)</p>","parent_name":"AWSRegion"},"Enums/AWSRegion.html#/c:@E@AWSRegion@AWSRegion_EU_Central_1":{"name":"AWSRegion_EU_Central_1","abstract":"<p>Europe (Frankfurt)</p>","parent_name":"AWSRegion"},"Enums/AWSRegion.html#/c:@E@AWSRegion@AWSRegion_AP_NorthEast_1":{"name":"AWSRegion_AP_NorthEast_1","abstract":"<p>Asia Pacific (Tokyo)</p>","parent_name":"AWSRegion"},"Enums/AWSRegion.html#/c:@E@AWSRegion@AWSRegion_AP_NorthEast_2":{"name":"AWSRegion_AP_NorthEast_2","abstract":"<p>Asia Pacific (Seoul)</p>","parent_name":"AWSRegion"},"Enums/AWSRegion.html#/c:@E@AWSRegion@AWSRegion_AP_SouthEast_1":{"name":"AWSRegion_AP_SouthEast_1","abstract":"<p>Asia Pacific (Singapore)</p>","parent_name":"AWSRegion"},"Enums/AWSRegion.html#/c:@E@AWSRegion@AWSRegion_AP_SouthEast_2":{"name":"AWSRegion_AP_SouthEast_2","abstract":"<p>Asia Pacific (Sydney)</p>","parent_name":"AWSRegion"},"Enums/AWSRegion.html#/c:@E@AWSRegion@AWSRegion_SA_East_1":{"name":"AWSRegion_SA_East_1","abstract":"<p>South America (São Paulo)</p>","parent_name":"AWSRegion"},"Enums/AWSRegion.html#/c:@E@AWSRegion@AWSRegion_CN_North_1":{"name":"AWSRegion_CN_North_1","abstract":"<p>China (Beijing)</p>","parent_name":"AWSRegion"},"Enums/AWSRegion.html#/c:@E@AWSRegion@AWSRegion_CA_Central_1":{"name":"AWSRegion_CA_Central_1","abstract":"<p>Canada (Central)</p>","parent_name":"AWSRegion"},"Enums/AWSRegion.html#/c:@E@AWSRegion@AWSRegion_Invalid":{"name":"AWSRegion_Invalid","abstract":"<p>Represents an invalid region. Kinda like a nil value.</p>","parent_name":"AWSRegion"},"Classes/AWSRegions.html#/c:objc(cs)AWSRegions(cm)allRegions":{"name":"+allRegions","abstract":"<p>Returns all regions.</p>","parent_name":"AWSRegions"},"Classes/AWSRegions.html#/c:objc(cs)AWSRegions(cm)shortNameForRegion:":{"name":"+shortNameForRegion:","abstract":"<p>Returns the short name of the region.","parent_name":"AWSRegions"},"Classes/AWSRegions.html#/c:objc(cs)AWSRegions(cm)displayNameForRegion:":{"name":"+displayNameForRegion:","abstract":"<p>Returns a string for the region which is suitable for display to the user.","parent_name":"AWSRegions"},"Classes/AWSRegions.html#/c:objc(cs)AWSRegions(cm)IPv4HostForRegion:":{"name":"+IPv4HostForRegion:","abstract":"<p>Returns the URL host for the given region.","parent_name":"AWSRegions"},"Classes/AWSRegions.html#/c:objc(cs)AWSRegions(cm)IPv4HostForRegion:service:":{"name":"+IPv4HostForRegion:service:","abstract":"<p>Returns the URL host for the given region &amp; service).","parent_name":"AWSRegions"},"Classes/AWSRegions.html#/c:objc(cs)AWSRegions(cm)dualStackHostForRegion:":{"name":"+dualStackHostForRegion:","abstract":"<p>Returns the URL host for the given region.","parent_name":"AWSRegions"},"Classes/AWSRegions.html#/c:objc(cs)AWSRegions(cm)dualStackHostForRegion:service:":{"name":"+dualStackHostForRegion:service:","abstract":"<p>Returns the URL host for the given region &amp; service.","parent_name":"AWSRegions"},"Classes/AWSRegions.html#/c:objc(cs)AWSRegions(cm)regionForName:":{"name":"+regionForName:","abstract":"<p>Returns the region enum value for the given region&rsquo;s shortName.</p>","parent_name":"AWSRegions"},"Classes/AWSPayload.html#/c:objc(cs)AWSPayload(cm)signatureForPayload:":{"name":"+signatureForPayload:","abstract":"<p>Returns the signature (SHA256 hash in lowercase hexadecimal) for the given payload data.</p>","parent_name":"AWSPayload"},"Classes/AWSPayload.html#/c:objc(cs)AWSPayload(cm)signatureForPayloadWithFile:completionQueue:completionBlock:":{"name":"+signatureForPayloadWithFile:completionQueue:completionBlock:","abstract":"<p>Calculates the signature (SHA256 hash in lowercase hexadecimal) for the given file.</p>","parent_name":"AWSPayload"},"Classes/AWSPayload.html#/c:objc(cs)AWSPayload(cm)signatureForPayloadWithStream:completionQueue:completionBlock:":{"name":"+signatureForPayloadWithStream:completionQueue:completionBlock:","parent_name":"AWSPayload"},"Classes/AWSPayload.html#/c:objc(cs)AWSPayload(cm)rawMD5HashForPayload:":{"name":"+rawMD5HashForPayload:","abstract":"<p>There are some API&rsquo;s which still require a <q>Content-MD5</q> header.","parent_name":"AWSPayload"},"Classes/AWSPayload.html#/c:objc(cs)AWSPayload(cm)md5HashForPayload:":{"name":"+md5HashForPayload:","abstract":"<p>There are some API&rsquo;s which still require a <q>Content-MD5</q> header.","parent_name":"AWSPayload"},"Classes/AWSDate.html#/c:objc(cs)AWSDate(cm)RFC1123TimestampFromDate:":{"name":"+RFC1123TimestampFromDate:","abstract":"<p>Common HTTP date format.","parent_name":"AWSDate"},"Classes/AWSDate.html#/c:objc(cs)AWSDate(cm)RFC1036TimestampFromDate:":{"name":"+RFC1036TimestampFromDate:","abstract":"<p>Older date format.","parent_name":"AWSDate"},"Classes/AWSDate.html#/c:objc(cs)AWSDate(cm)asctimeTimestampFromDate:":{"name":"+asctimeTimestampFromDate:","abstract":"<p>Really old date format. (format for C asctime() date string)","parent_name":"AWSDate"},"Classes/AWSDate.html#/c:objc(cs)AWSDate(cm)ISO8601TimestampFromDate:":{"name":"+ISO8601TimestampFromDate:","abstract":"<p>Standard Internet date format.","parent_name":"AWSDate"},"Classes/AWSDate.html#/c:objc(cs)AWSDate(cm)shortTimestampFromDate:":{"name":"+shortTimestampFromDate:","abstract":"<p>Short date format used by Amazon (during request signing).","parent_name":"AWSDate"},"Classes/AWSDate.html#/c:objc(cs)AWSDate(cm)parseRFC1123Timestamp:":{"name":"+parseRFC1123Timestamp:","abstract":"<p>Attempts to parse a date string assumed to be in RFC 1123 format.","parent_name":"AWSDate"},"Classes/AWSDate.html#/c:objc(cs)AWSDate(cm)parseRFC1036Timestamp:":{"name":"+parseRFC1036Timestamp:","abstract":"<p>Attempts to parse a date string assumed to be in RFC 1036 format.","parent_name":"AWSDate"},"Classes/AWSDate.html#/c:objc(cs)AWSDate(cm)parseAsctimeTimestamp:":{"name":"+parseAsctimeTimestamp:","abstract":"<p>Attempts to parse a date string assumed to be in asctime format.","parent_name":"AWSDate"},"Classes/AWSDate.html#/c:objc(cs)AWSDate(cm)parseISO8601Timestamp:":{"name":"+parseISO8601Timestamp:","abstract":"<p>Attempts to parse a date string assumed to be in SO 8601 format.","parent_name":"AWSDate"},"Classes/AWSDate.html#/c:objc(cs)AWSDate(cm)parseTimestamp:":{"name":"+parseTimestamp:","abstract":"<p>Will parse a date in any of the following formats:</p>","parent_name":"AWSDate"},"Classes/AWSDate.html":{"name":"AWSDate","abstract":"<p>A flexible date/time formatting &amp; parsing class.</p>"},"Classes/AWSPayload.html":{"name":"AWSPayload","abstract":"<p>Utility methods for calcuating the signature for a payload."},"Classes/AWSRegions.html":{"name":"AWSRegions","abstract":"<p>Common utility methods related to AWS regions.</p>"},"Enums/AWSRegion.html":{"name":"AWSRegion","abstract":"<p>List of available AWS regions.</p>"},"Classes/AWSServices.html":{"name":"AWSServices","abstract":"<p>Common utility methods related to AWS services.</p>"},"Enums/AWSService.html":{"name":"AWSService","abstract":"<p>List of AWS services.</p>"},"Classes/AWSSignature.html":{"name":"AWSSignature","abstract":"<p>Utility class to calculate AWS Signature&rsquo;s (v4).</p>"},"Classes/ZDCAsyncCompletionDispatch.html#/c:objc(cs)ZDCAsyncCompletionDispatch(im)pushCompletionQueue:completionBlock:forKey:":{"name":"-pushCompletionQueue:completionBlock:forKey:","abstract":"<p>Pushes the <completionQueue, completionBlock> tuple onto the the queue for the given key,","parent_name":"ZDCAsyncCompletionDispatch"},"Classes/ZDCAsyncCompletionDispatch.html#/c:objc(cs)ZDCAsyncCompletionDispatch(im)popCompletionQueues:completionBlocks:forKey:":{"name":"-popCompletionQueues:completionBlocks:forKey:","abstract":"<p>Pops the entire queue for the given key.","parent_name":"ZDCAsyncCompletionDispatch"},"Classes/ZDCProgress.html#/c:objc(cs)ZDCProgress(im)init":{"name":"-init","abstract":"<p>Designated initializer</p>","parent_name":"ZDCProgress"},"Classes/ZDCProgress.html#/c:objc(cs)ZDCProgress(py)baseTotalUnitCount":{"name":"baseTotalUnitCount","abstract":"<p>Represents the portion of the progress that comes from already completed child tasks.","parent_name":"ZDCProgress"},"Classes/ZDCProgress.html#/c:objc(cs)ZDCProgress(py)baseCompletedUnitCount":{"name":"baseCompletedUnitCount","abstract":"<p>Represents the portion of the progress that comes from already completed child tasks.","parent_name":"ZDCProgress"},"Classes/ZDCProgress.html#/c:objc(cs)ZDCProgress(im)addChild:withPendingUnitCount:":{"name":"-addChild:withPendingUnitCount:","parent_name":"ZDCProgress"},"Classes/ZDCProgress.html#/c:objc(cs)ZDCProgress(im)removeChild:andIncrementBaseUnitCount:":{"name":"-removeChild:andIncrementBaseUnitCount:","abstract":"<p>Removes the child from the list of children.</p>","parent_name":"ZDCProgress"},"Classes/ZDCProgress.html#/c:objc(cs)ZDCProgress(im)removeAllChildrenAndIncrementBaseUnitCount:":{"name":"-removeAllChildrenAndIncrementBaseUnitCount:","abstract":"<p>Removes all children from the list of children.</p>","parent_name":"ZDCProgress"},"Classes/ZDCProgress.html#/c:objc(cs)ZDCProgress(im)childProgressWithType:":{"name":"-childProgressWithType:","abstract":"<p>Finds &amp; returns the first child progress with the given type.</p>","parent_name":"ZDCProgress"},"Classes/BIP39Mnemonic.html#/c:objc(cs)BIP39Mnemonic(cm)languageIDForLocaleIdentifier:":{"name":"+languageIDForLocaleIdentifier:","abstract":"<p>Returns the closest language identifier for given localeIdentifier.","parent_name":"BIP39Mnemonic"},"Classes/BIP39Mnemonic.html#/c:objc(cs)BIP39Mnemonic(cm)availableLanguages":{"name":"+availableLanguages","abstract":"<p>Return an array of languageIDs supported</p>","parent_name":"BIP39Mnemonic"},"Classes/BIP39Mnemonic.html#/c:objc(cs)BIP39Mnemonic(cm)mnemonicCountForBits:mnemonicCount:":{"name":"+mnemonicCountForBits:mnemonicCount:","abstract":"<p>Return a the number of mnemonic words needed for given bit size</p>","parent_name":"BIP39Mnemonic"},"Classes/BIP39Mnemonic.html#/c:objc(cs)BIP39Mnemonic(cm)wordListForLanguageID:error:":{"name":"+wordListForLanguageID:error:","abstract":"<p>Return a list of acceptable mnemonic words for a given Locale</p>","parent_name":"BIP39Mnemonic"},"Classes/BIP39Mnemonic.html#/c:objc(cs)BIP39Mnemonic(cm)matchingMnemonicForString:languageID:error:":{"name":"+matchingMnemonicForString:languageID:error:","abstract":"<p>Return a matching mnemonic word  for a given string - expend abbreviated to proper mnemonic</p>","parent_name":"BIP39Mnemonic"},"Classes/BIP39Mnemonic.html#/c:objc(cs)BIP39Mnemonic(cm)dataFromMnemonic:languageID:error:":{"name":"+dataFromMnemonic:languageID:error:","abstract":"<p>Converts from a mnemonic to its data.</p>","parent_name":"BIP39Mnemonic"},"Classes/BIP39Mnemonic.html#/c:objc(cs)BIP39Mnemonic(cm)mnemonicFromData:languageID:error:":{"name":"+mnemonicFromData:languageID:error:","abstract":"<p>Converts from data  to a mnemonic (word list).</p>","parent_name":"BIP39Mnemonic"},"Classes/BIP39Mnemonic.html#/c:objc(cs)BIP39Mnemonic(cm)mnemonicFromKey:passphrase:languageID:error:":{"name":"+mnemonicFromKey:passphrase:languageID:error:","abstract":"<p>Converts from a key to a mnemonic (word list).</p>","parent_name":"BIP39Mnemonic"},"Classes/BIP39Mnemonic.html#/c:objc(cs)BIP39Mnemonic(cm)keyFromMnemonic:passphrase:languageID:error:":{"name":"+keyFromMnemonic:passphrase:languageID:error:","abstract":"<p>Converts from a mnemonic back to a key.</p>","parent_name":"BIP39Mnemonic"},"Classes/BIP39Mnemonic.html":{"name":"BIP39Mnemonic","abstract":"<p>Bitcoin Improvement Protocol (BIP) #39"},"Classes/ZDCProgress.html":{"name":"ZDCProgress","abstract":"<p>A subclass of NSProgress which simplifies the management of children.</p>"},"Classes/ZDCAsyncCompletionDispatch.html":{"name":"ZDCAsyncCompletionDispatch","abstract":"<p>This class helps to manage a list of <completionQueue, completionBlock> tuples"},"Classes/ZDCGraftInvite.html#/c:objc(cs)ZDCGraftInvite(im)initWithCloudID:cloudPath:":{"name":"-initWithCloudID:cloudPath:","abstract":"<p>Standard initializer.</p>","parent_name":"ZDCGraftInvite"},"Classes/ZDCGraftInvite.html#/c:objc(cs)ZDCGraftInvite(py)cloudID":{"name":"cloudID","abstract":"<p>Corresponds to ZDCNode.cloudID.</p>","parent_name":"ZDCGraftInvite"},"Classes/ZDCGraftInvite.html#/c:objc(cs)ZDCGraftInvite(py)cloudPath":{"name":"cloudPath","abstract":"<p>Represents the current location of the node in the cloud.</p>","parent_name":"ZDCGraftInvite"},"Classes/ZDCDropboxInvite.html#/c:objc(cs)ZDCDropboxInvite(im)initWithTreeID:dirPrefix:":{"name":"-initWithTreeID:dirPrefix:","abstract":"<p>Standard initializer.</p>","parent_name":"ZDCDropboxInvite"},"Classes/ZDCDropboxInvite.html#/c:objc(cs)ZDCDropboxInvite(py)treeID":{"name":"treeID","abstract":"<p>Represents a component of a ZDCCloudPath (#1 of 3)</p>","parent_name":"ZDCDropboxInvite"},"Classes/ZDCDropboxInvite.html#/c:objc(cs)ZDCDropboxInvite(py)dirPrefix":{"name":"dirPrefix","abstract":"<p>Represents a component of a ZDCCloudPath (#2 of 3)</p>","parent_name":"ZDCDropboxInvite"},"Classes/ZDCCloudRcrd.html#/c:objc(cs)ZDCCloudRcrd(py)version":{"name":"version","abstract":"<p>Every RCRD has a version number.","parent_name":"ZDCCloudRcrd"},"Classes/ZDCCloudRcrd.html#/c:objc(cs)ZDCCloudRcrd(py)cloudID":{"name":"cloudID","abstract":"<p>Every RCRD has a cloudID, which is assigned by the server (it&rsquo;s a UUID).","parent_name":"ZDCCloudRcrd"},"Classes/ZDCCloudRcrd.html#/c:objc(cs)ZDCCloudRcrd(py)sender":{"name":"sender","abstract":"<p>If the RCRD was written by a different user (i.e. not the owner of the bucket),","parent_name":"ZDCCloudRcrd"},"Classes/ZDCCloudRcrd.html#/c:objc(cs)ZDCCloudRcrd(py)encryptionKey":{"name":"encryptionKey","abstract":"<p>The symmetric key that is used for:</p>","parent_name":"ZDCCloudRcrd"},"Classes/ZDCCloudRcrd.html#/c:objc(cs)ZDCCloudRcrd(py)children":{"name":"children","abstract":"<p>The RAW children dictionary.</p>","parent_name":"ZDCCloudRcrd"},"Classes/ZDCCloudRcrd.html#/c:objc(cs)ZDCCloudRcrd(py)share":{"name":"share","abstract":"<p>The RAW share dictionary.","parent_name":"ZDCCloudRcrd"},"Classes/ZDCCloudRcrd.html#/c:objc(cs)ZDCCloudRcrd(py)burnDate":{"name":"burnDate","abstract":"<p>Optional burn date.","parent_name":"ZDCCloudRcrd"},"Classes/ZDCCloudRcrd.html#/c:objc(cs)ZDCCloudRcrd(py)metadata":{"name":"metadata","abstract":"<p>Every RCRD must have either a metadata || data section.","parent_name":"ZDCCloudRcrd"},"Classes/ZDCCloudRcrd.html#/c:objc(cs)ZDCCloudRcrd(py)data":{"name":"data","abstract":"<p>Every RCRD must have either a metadata || data section.","parent_name":"ZDCCloudRcrd"},"Classes/ZDCCloudRcrd.html#/c:objc(cs)ZDCCloudRcrd(py)errors":{"name":"errors","abstract":"<p>If there are any errors parsing the RCRD, or decrypting the content,","parent_name":"ZDCCloudRcrd"},"Classes/ZDCCloudRcrd.html#/c:objc(cs)ZDCCloudRcrd(im)appendError:":{"name":"-appendError:","abstract":"<p>Used to append an error to the errors array.</p>","parent_name":"ZDCCloudRcrd"},"Classes/ZDCCloudRcrd.html#/c:objc(cs)ZDCCloudRcrd(im)usingAdvancedChildrenContainer":{"name":"-usingAdvancedChildrenContainer","abstract":"<p>Standard nodes just have a single <q>container</q>.</p>","parent_name":"ZDCCloudRcrd"},"Classes/ZDCCloudRcrd.html#/c:objc(cs)ZDCCloudRcrd(im)enumerateChildrenWithBlock:":{"name":"-enumerateChildrenWithBlock:","abstract":"<p>Enumerates the children containers.</p>","parent_name":"ZDCCloudRcrd"},"Classes/ZDCCloudRcrd.html#/c:objc(cs)ZDCCloudRcrd(im)dirPrefix":{"name":"-dirPrefix","abstract":"<p>Extracts the standard dirPrefix from the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ZDCCloudRcrd.html#/c:objc(cs)ZDCCloudRcrd(py)children\">children</a></code> dictionary.</p>","parent_name":"ZDCCloudRcrd"},"Classes/ZDCCloudRcrd.html#/c:objc(cs)ZDCCloudRcrd(im)isPointer":{"name":"-isPointer","abstract":"<p>Returns YES if the data component contains valid pointer info.</p>","parent_name":"ZDCCloudRcrd"},"Classes/ZDCCloudRcrd.html#/c:objc(cs)ZDCCloudRcrd(im)getPointerCloudPath:cloudID:ownerID:":{"name":"-getPointerCloudPath:cloudID:ownerID:","abstract":"<p>Extracts pointer information from the data component.</p>","parent_name":"ZDCCloudRcrd"},"Classes/ZDCCloudPath.html#/c:objc(cs)ZDCCloudPath(cm)isValidTreeID:":{"name":"+isValidTreeID:","abstract":"<p>Returns YES if the given value is a valid treeID.</p>","parent_name":"ZDCCloudPath"},"Classes/ZDCCloudPath.html#/c:objc(cs)ZDCCloudPath(cm)isValidDirPrefix:":{"name":"+isValidDirPrefix:","abstract":"<p>Returns YES if the given value is a valid dirPrefix.</p>","parent_name":"ZDCCloudPath"},"Classes/ZDCCloudPath.html#/c:objc(cs)ZDCCloudPath(cm)isValidFileName:":{"name":"+isValidFileName:","abstract":"<p>Returns YES if the given value is a valid filename.</p>","parent_name":"ZDCCloudPath"},"Classes/ZDCCloudPath.html#/c:objc(cs)ZDCCloudPath(cm)isValidCloudPath:":{"name":"+isValidCloudPath:","abstract":"<p>Returns YES if the given value is a valid cloudPath.</p>","parent_name":"ZDCCloudPath"},"Classes/ZDCCloudPath.html#/c:objc(cs)ZDCCloudPath(im)initWithPath:":{"name":"-initWithPath:","abstract":"<p>Attempts to parse the given string into a cloudPath.</p>","parent_name":"ZDCCloudPath"},"Classes/ZDCCloudPath.html#/c:objc(cs)ZDCCloudPath(im)initWithTreeID:dirPrefix:fileName:":{"name":"-initWithTreeID:dirPrefix:fileName:","abstract":"<p>Creates a new instance with the given components.</p>","parent_name":"ZDCCloudPath"},"Classes/ZDCCloudPath.html#/c:objc(cs)ZDCCloudPath(im)initWithTreeID:inboxFileName:":{"name":"-initWithTreeID:inboxFileName:","abstract":"<p>Creates a new instance, where the dirPrefix is set to be the inbox.</p>","parent_name":"ZDCCloudPath"},"Classes/ZDCCloudPath.html#/c:objc(cs)ZDCCloudPath(im)initWithTreeID:outboxFileName:":{"name":"-initWithTreeID:outboxFileName:","abstract":"<p>Creates a new instance, where the dirPrefix is set to be the outbox.</p>","parent_name":"ZDCCloudPath"},"Classes/ZDCCloudPath.html#/c:objc(cs)ZDCCloudPath(py)treeID":{"name":"treeID","abstract":"<p>The treesystem container name.","parent_name":"ZDCCloudPath"},"Classes/ZDCCloudPath.html#/c:objc(cs)ZDCCloudPath(py)dirPrefix":{"name":"dirPrefix","abstract":"<p>Represents the parentNode.dirPrefix value.","parent_name":"ZDCCloudPath"},"Classes/ZDCCloudPath.html#/c:objc(cs)ZDCCloudPath(py)fileName":{"name":"fileName","abstract":"<p>The (hashed) name of the file. This is also referred to as the cloudName.","parent_name":"ZDCCloudPath"},"Classes/ZDCCloudPath.html#/c:objc(cs)ZDCCloudPath(im)fileNameExt":{"name":"-fileNameExt","abstract":"<p>Extracts the fileExtension, if it includes ones.","parent_name":"ZDCCloudPath"},"Classes/ZDCCloudPath.html#/c:objc(cs)ZDCCloudPath(im)fileNameWithExt:":{"name":"-fileNameWithExt:","abstract":"<p>Returns the current fileName, stripped of its existing fileExtension,","parent_name":"ZDCCloudPath"},"Classes/ZDCCloudPath.html#/c:objc(cs)ZDCCloudPath(im)path":{"name":"-path","abstract":"<p>Returns the full cloudPath in string form. (i.e. with &lsquo;/&rsquo; separator between components)</p>","parent_name":"ZDCCloudPath"},"Classes/ZDCCloudPath.html#/c:objc(cs)ZDCCloudPath(im)pathWithComponents:":{"name":"-pathWithComponents:","abstract":"<p>Returns a path including only the specific components (with &lsquo;/&rsquo; separator between components).</p>","parent_name":"ZDCCloudPath"},"Classes/ZDCCloudPath.html#/c:objc(cs)ZDCCloudPath(im)pathWithExt:":{"name":"-pathWithExt:","abstract":"<p>Returns the full cloudPath in string form, but with the given fileExtension.</p>","parent_name":"ZDCCloudPath"},"Classes/ZDCCloudPath.html#/c:objc(cs)ZDCCloudPath(im)matchesFileName:":{"name":"-matchesFileName:","abstract":"<p>Returns YES if the fileNames match (including fileExtension).</p>","parent_name":"ZDCCloudPath"},"Classes/ZDCCloudPath.html#/c:objc(cs)ZDCCloudPath(im)matchesFileName:comparingComponents:":{"name":"-matchesFileName:comparingComponents:","abstract":"<p>Returns YES if the fileNames match, comparing only the given components.</p>","parent_name":"ZDCCloudPath"},"Classes/ZDCCloudPath.html#/c:objc(cs)ZDCCloudPath(im)matchesPath:":{"name":"-matchesPath:","abstract":"<p>Retursn YES if the cloudPath matches the given path, including all components &amp; fileExtension.</p>","parent_name":"ZDCCloudPath"},"Classes/ZDCCloudPath.html#/c:objc(cs)ZDCCloudPath(im)matchesPath:comparingComponents:":{"name":"-matchesPath:comparingComponents:","abstract":"<p>Returns YES if the cloudPath matches the given path, comparing only the given components.</p>","parent_name":"ZDCCloudPath"},"Classes/ZDCCloudPath.html#/c:objc(cs)ZDCCloudPath(im)isEqualToCloudPath:":{"name":"-isEqualToCloudPath:","abstract":"<p>Compares the cloudPaths, and returns YES if they match exactly.</p>","parent_name":"ZDCCloudPath"},"Classes/ZDCCloudPath.html#/c:objc(cs)ZDCCloudPath(im)isEqualToCloudPathIgnoringExt:":{"name":"-isEqualToCloudPathIgnoringExt:","abstract":"<p>Compares the cloudPaths, and returne YES if they match (excluding fileExtension).</p>","parent_name":"ZDCCloudPath"},"Classes/ZDCCloudPath.html#/c:objc(cs)ZDCCloudPath(im)isEqualToCloudPath:components:":{"name":"-isEqualToCloudPath:components:","abstract":"<p>Compares the cloudPaths, but only comparing the given components.</p>","parent_name":"ZDCCloudPath"},"Classes/ZDCCloudPath.html#/c:objc(cs)ZDCCloudPath(im)copyWithFileNameExt:":{"name":"-copyWithFileNameExt:","abstract":"<p>Returns a copy with a different fileExtension.","parent_name":"ZDCCloudPath"},"Classes/ZDCCloudLocator.html#/c:objc(cs)ZDCCloudLocator(im)initWithRegion:bucket:cloudPath:":{"name":"-initWithRegion:bucket:cloudPath:","abstract":"<p>Creates an (immutable) locator instance.</p>","parent_name":"ZDCCloudLocator"},"Classes/ZDCCloudLocator.html#/c:objc(cs)ZDCCloudLocator(py)region":{"name":"region","abstract":"<p>The AWS region where the S3 bucket is located.</p>","parent_name":"ZDCCloudLocator"},"Classes/ZDCCloudLocator.html#/c:objc(cs)ZDCCloudLocator(py)bucket":{"name":"bucket","abstract":"<p>The name of the AWS S3 bucket.</p>","parent_name":"ZDCCloudLocator"},"Classes/ZDCCloudLocator.html#/c:objc(cs)ZDCCloudLocator(py)bucketOwner":{"name":"bucketOwner","abstract":"<p>Extracts the userID component from the bucket name.</p>","parent_name":"ZDCCloudLocator"},"Classes/ZDCCloudLocator.html#/c:objc(cs)ZDCCloudLocator(py)cloudPath":{"name":"cloudPath","abstract":"<p>Represents the keypath to the file within the S3 bucket.</p>","parent_name":"ZDCCloudLocator"},"Classes/ZDCCloudLocator.html#/c:objc(cs)ZDCCloudLocator(im)copyWithCloudPath:":{"name":"-copyWithCloudPath:","abstract":"<p>Returns a copy with a new cloudPath.","parent_name":"ZDCCloudLocator"},"Classes/ZDCCloudLocator.html#/c:objc(cs)ZDCCloudLocator(im)copyWithFileNameExt:":{"name":"-copyWithFileNameExt:","abstract":"<p>Returns a copy with an alternative filename extension.","parent_name":"ZDCCloudLocator"},"Classes/ZDCCloudLocator.html#/c:objc(cs)ZDCCloudLocator(im)isEqualToCloudLocator:":{"name":"-isEqualToCloudLocator:","abstract":"<p>Returns YES if the two cloudLocator&rsquo;s are an exact match.</p>","parent_name":"ZDCCloudLocator"},"Classes/ZDCCloudLocator.html#/c:objc(cs)ZDCCloudLocator(im)isEqualToCloudLocatorIgnoringExt:":{"name":"-isEqualToCloudLocatorIgnoringExt:","abstract":"<p>Returns YES if the two cloudLocator&rsquo;s refer to the same node.","parent_name":"ZDCCloudLocator"},"Classes/ZDCCloudLocator.html#/c:objc(cs)ZDCCloudLocator(im)isEqualToCloudLocator:components:":{"name":"-isEqualToCloudLocator:components:","abstract":"<p>Performs a detailed comparison between two cloudLocator&rsquo;s.","parent_name":"ZDCCloudLocator"},"Classes/ZDCCloudOperation.html#/c:objc(cs)ZDCCloudOperation(im)initWithLocalUserID:treeID:type:":{"name":"-initWithLocalUserID:treeID:type:","abstract":"<p>Creates a new instance with the basics.","parent_name":"ZDCCloudOperation"},"Classes/ZDCCloudOperation.html#/c:objc(cs)ZDCCloudOperation(im)initWithLocalUserID:treeID:putType:":{"name":"-initWithLocalUserID:treeID:putType:","abstract":"<p>Creates a new instance with the basics.","parent_name":"ZDCCloudOperation"},"Classes/ZDCCloudOperation.html#/c:objc(cs)ZDCCloudOperation(py)localUserID":{"name":"localUserID","abstract":"<p>The value specified during init.</p>","parent_name":"ZDCCloudOperation"},"Classes/ZDCCloudOperation.html#/c:objc(cs)ZDCCloudOperation(py)treeID":{"name":"treeID","abstract":"<p>The value specified during init.</p>","parent_name":"ZDCCloudOperation"},"Classes/ZDCCloudOperation.html#/c:objc(cs)ZDCCloudOperation(py)type":{"name":"type","abstract":"<p>Corresponds to the operation to be performed on the server.</p>","parent_name":"ZDCCloudOperation"},"Classes/ZDCCloudOperation.html#/c:objc(cs)ZDCCloudOperation(py)putType":{"name":"putType","abstract":"<p>For put operations, corresponds to the type of put operation being performed.</p>","parent_name":"ZDCCloudOperation"},"Classes/ZDCCloudOperation.html#/c:objc(cs)ZDCCloudOperation(py)nodeID":{"name":"nodeID","abstract":"<p>Points to the corresponding node (nodeID == ZDCNode.uuid)</p>","parent_name":"ZDCCloudOperation"},"Classes/ZDCCloudOperation.html#/c:objc(cs)ZDCCloudOperation(py)dstNodeID":{"name":"dstNodeID","abstract":"<p>For copy-leaf operations, points to the corresponding destination node (nodeID == ZDCNode.uuid)</p>","parent_name":"ZDCCloudOperation"},"Classes/ZDCCloudOperation.html#/c:objc(cs)ZDCCloudOperation(py)cloudNodeID":{"name":"cloudNodeID","abstract":"<p>Points to the corresponding cloudNode (cloudNodeID == ZDCCloudNode.uuid)</p>","parent_name":"ZDCCloudOperation"},"Classes/ZDCCloudOperation.html#/c:objc(cs)ZDCCloudOperation(py)cloudLocator":{"name":"cloudLocator","abstract":"<p>The cloud location of the operation.</p>","parent_name":"ZDCCloudOperation"},"Classes/ZDCCloudOperation.html#/c:objc(cs)ZDCCloudOperation(py)dstCloudLocator":{"name":"dstCloudLocator","abstract":"<p>For move &amp; copy operations, represents the target destination.","parent_name":"ZDCCloudOperation"},"Classes/ZDCCloudOperation.html#/c:objc(cs)ZDCCloudOperation(py)eTag":{"name":"eTag","abstract":"<p>The eTag is used for put-node-data operations.","parent_name":"ZDCCloudOperation"},"Classes/ZDCCloudOperation.html#/c:objc(cs)ZDCCloudOperation(py)ifOrphan":{"name":"ifOrphan","abstract":"<p>An &lsquo;orphaned&rsquo; node is where a RCRD file exists on the server, however there&rsquo;s no corresponding DATA file.","parent_name":"ZDCCloudOperation"},"Classes/ZDCCloudOperation.html#/c:objc(cs)ZDCCloudOperation(py)deleteNodeJSON":{"name":"deleteNodeJSON","abstract":"<p>A serialized version of the JSON request that&rsquo;s sent during a delete-node operation.</p>","parent_name":"ZDCCloudOperation"},"Classes/ZDCCloudOperation.html#/c:objc(cs)ZDCCloudOperation(py)deletedCloudIDs":{"name":"deletedCloudIDs","abstract":"<p>A list of cloudID&rsquo;s that are being deleted (for both delete-leaf &amp; delete-node operations).</p>","parent_name":"ZDCCloudOperation"},"Classes/ZDCCloudOperation.html#/c:objc(cs)ZDCCloudOperation(py)avatar_auth0ID":{"name":"avatar_auth0ID","abstract":"<p>For ZDCCloudOperationType_Avatar.","parent_name":"ZDCCloudOperation"},"Classes/ZDCCloudOperation.html#/c:objc(cs)ZDCCloudOperation(py)avatar_oldETag":{"name":"avatar_oldETag","abstract":"<p>For ZDCCloudOperationType_Avatar.","parent_name":"ZDCCloudOperation"},"Classes/ZDCCloudOperation.html#/c:objc(cs)ZDCCloudOperation(py)avatar_newETag":{"name":"avatar_newETag","abstract":"<p>For ZDCCloudOperationType_Avatar.","parent_name":"ZDCCloudOperation"},"Classes/ZDCCloudOperation.html#/c:objc(cs)ZDCCloudOperation(py)changeset_permissions":{"name":"changeset_permissions","abstract":"<p>Used for RCRD operations when the permissions have changed.","parent_name":"ZDCCloudOperation"},"Classes/ZDCCloudOperation.html#/c:objc(cs)ZDCCloudOperation(py)changeset_obj":{"name":"changeset_obj","abstract":"<p>Used for DATA operations.","parent_name":"ZDCCloudOperation"},"Classes/ZDCCloudOperation.html#/c:objc(cs)ZDCCloudOperation(im)hasSameTarget:":{"name":"-hasSameTarget:","abstract":"<p>Returns true if both the receiver and &lsquo;another&rsquo; have the same target.","parent_name":"ZDCCloudOperation"},"Classes/ZDCCloudOperation.html#/c:objc(cs)ZDCCloudOperation(im)isPutNodeRcrdOperation":{"name":"-isPutNodeRcrdOperation","abstract":"<p>Convenience method: returns YES if:</p>","parent_name":"ZDCCloudOperation"},"Classes/ZDCCloudOperation.html#/c:objc(cs)ZDCCloudOperation(im)isPutNodeDataOperation":{"name":"-isPutNodeDataOperation","abstract":"<p>Convenience method: returns YES if:</p>","parent_name":"ZDCCloudOperation"},"Classes/ZDCCloudOperation.html#/c:objc(cs)ZDCCloudOperation(cm)stringForType:":{"name":"+stringForType:","abstract":"<p>Utility method: converts from enum to string.","parent_name":"ZDCCloudOperation"},"Classes/ZDCCloudOperation.html#/c:objc(cs)ZDCCloudOperation(cm)typeForString:":{"name":"+typeForString:","abstract":"<p>Utility method: converts from string to enum.","parent_name":"ZDCCloudOperation"},"Classes/ZDCCloudOperation.html#/c:objc(cs)ZDCCloudOperation(cm)stringForPutType:":{"name":"+stringForPutType:","abstract":"<p>Utility method: converts from enum to string.","parent_name":"ZDCCloudOperation"},"Classes/ZDCCloudOperation.html#/c:objc(cs)ZDCCloudOperation(cm)putTypeForString:":{"name":"+putTypeForString:","abstract":"<p>Utility method: converts from string to enum.","parent_name":"ZDCCloudOperation"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)nodeWithID:":{"name":"-nodeWithID:","abstract":"<p>Returns the node with the given nodeID.</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)nodeWithPath:":{"name":"-nodeWithPath:","abstract":"<p>Returns the existing node with the given path.</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)parentNode:":{"name":"-parentNode:","abstract":"<p>Returns the parentNode for the given node.</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)targetNode:":{"name":"-targetNode:","abstract":"<p>If the given node is a pointer (node.isPointer == true),","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)trunkNode:":{"name":"-trunkNode:","abstract":"<p>Returns the corresponding trunk node (top-level root node).</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)conflictFreePath:":{"name":"-conflictFreePath:","abstract":"<p>Checks to see if there&rsquo;s already a node occupying the given path.","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)createNodeWithPath:error:":{"name":"-createNodeWithPath:error:","abstract":"<p>Creates a new node with the given path,","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)createNodeWithPath:dependencies:error:":{"name":"-createNodeWithPath:dependencies:error:","abstract":"<p>Creates a new node with the given path,","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)insertNode:error:":{"name":"-insertNode:error:","abstract":"<p>Inserts the given node into the treesystem (as configured),","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)modifyNode:error:":{"name":"-modifyNode:error:","abstract":"<p>Use this method to modify an existing node. For example, you can use it to:</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)moveNode:toPath:error:":{"name":"-moveNode:toPath:error:","abstract":"<p>Moves the given node to a new location, and queues an operation to push the change to the cloud.</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)queueDataUploadForNodeID:withChangeset:":{"name":"-queueDataUploadForNodeID:withChangeset:","abstract":"<p>Use this method to queue a data upload operation for the given node.</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)deleteNode:error:":{"name":"-deleteNode:error:","abstract":"<p>Removes the given node from the treesystem, and enqueues a delete operation to delete it from the cloud.</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)deleteNode:withOptions:error:":{"name":"-deleteNode:withOptions:error:","abstract":"<p>Removes the given node from the treesystem, and enqueues a delete operation to delete it from the cloud.</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)sendMessageToRecipients:error:":{"name":"-sendMessageToRecipients:error:","abstract":"<p>Enqueues a message to be sent to the specified recipients.</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)sendMessageToRecipients:withDependencies:error:":{"name":"-sendMessageToRecipients:withDependencies:error:","abstract":"<p>Enqueues a message to be sent to the specified recipients.</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)sendSignalToRecipient:error:":{"name":"-sendSignalToRecipient:error:","abstract":"<p>Enqueues a signal to be sent to the specified recipient.</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)sendSignalToRecipient:withDependencies:error:":{"name":"-sendSignalToRecipient:withDependencies:error:","abstract":"<p>Enqueues a signal to be sent to the specified recipient.</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)copyNode:toRecipientInbox:error:":{"name":"-copyNode:toRecipientInbox:error:","abstract":"<p>Queues an operation to perform a server-side-copy, from the given node, to the recipient&rsquo;s inbox.</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)copyNode:toRecipientInbox:withDependencies:error:":{"name":"-copyNode:toRecipientInbox:withDependencies:error:","abstract":"<p>Queues an operation to perform a server-side-copy, from the given node, to the recipient&rsquo;s inbox.</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)copyNode:toRecipient:withName:parentNode:error:":{"name":"-copyNode:toRecipient:withName:parentNode:error:","abstract":"<p>Queues an operation to perform a server-side-copy, from the given node, to the recipient&rsquo;s treesystem.</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)copyNode:toRecipient:remoteCloudPath:error:":{"name":"-copyNode:toRecipient:remoteCloudPath:error:","abstract":"<p>Queues an operation to perform a server-side-copy, from the given node, to the recipient&rsquo;s treesystem.</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)dropboxInviteForNode:":{"name":"-dropboxInviteForNode:","abstract":"<p>A <q>dropbox invite</q> encompasses the information required for another user to write into your treesystem.</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)graftInviteForNode:":{"name":"-graftInviteForNode:","abstract":"<p>Grafting allows you to add another user&rsquo;s branch into your own treesystem.","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)graftNodeWithLocalPath:remoteCloudPath:remoteCloudID:remoteUser:error:":{"name":"-graftNodeWithLocalPath:remoteCloudPath:remoteCloudID:remoteUser:error:","abstract":"<p>Grafting allows you to add another user&rsquo;s branch into your own treesystem.","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)recursiveAddShareItem:forUserID:nodeID:":{"name":"-recursiveAddShareItem:forUserID:nodeID:","abstract":"<p>Modifies the permissons for a treesystem branch rooted at the specified node.</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)recursiveRemoveShareItemForUserID:nodeID:":{"name":"-recursiveRemoveShareItemForUserID:nodeID:","abstract":"<p>Modifies the permissons for a treesystem branch rooted at the specified node.</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)linkNodeID:toKey:inCollection:error:":{"name":"-linkNodeID:toKey:inCollection:error:","abstract":"<p>Call this method to link an object in the database to an existing node.</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)unlinkKey:inCollection:":{"name":"-unlinkKey:inCollection:","abstract":"<p>If an object in the database has been linked to a node,","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)linkedNodeIDForKey:inCollection:":{"name":"-linkedNodeIDForKey:inCollection:","abstract":"<p>If the given collection/key tuple is linked to a node, this method returns the linked nodeID.","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)linkedNodeForKey:inCollection:":{"name":"-linkedNodeForKey:inCollection:","abstract":"<p>If the given collection/key tuple is linked to a node, this method returns the linked node.</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)isNodeLinked:":{"name":"-isNodeLinked:","abstract":"<p>Returns whether or not the node is currently linked to a {collection, key} tuple.</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)getLinkedKey:collection:forNodeID:":{"name":"-getLinkedKey:collection:forNodeID:","abstract":"<p>If the given node is linked to a collection/key tuple, this method returns the linked tuple information.</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)linkedObjectForNodeID:":{"name":"-linkedObjectForNodeID:","abstract":"<p>Combines several API&rsquo;s to return the linked object for a given nodeID.</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)linkedObjectForPath:":{"name":"-linkedObjectForPath:","abstract":"<p>Combines several methods to return the linked object for a given treesystem path.</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)tagForNodeID:withIdentifier:":{"name":"-tagForNodeID:withIdentifier:","abstract":"<p>Returns the currently set tag for the given {nodeID, identifier} tuple.</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)setTag:forNodeID:withIdentifier:":{"name":"-setTag:forNodeID:withIdentifier:","abstract":"<p>Allows you to set or update the current tag value for the given {nodeID, identifier} tuple.</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)enumerateTagsForNodeID:withBlock:":{"name":"-enumerateTagsForNodeID:withBlock:","abstract":"<p>Allows you to enumerate the current set of <key, tag> tuples associated with the given node.</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)removeTagForNodeID:withIdentifier:":{"name":"-removeTagForNodeID:withIdentifier:","abstract":"<p>Removes the tag for the given {nodeID, key} tuple.</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)removeAllTagsForNodeID:":{"name":"-removeAllTagsForNodeID:","abstract":"<p>Removes all tags with the given nodeID (matching any identifier).</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)markNodeAsNeedsDownload:components:":{"name":"-markNodeAsNeedsDownload:components:","abstract":"<p>When the ZeroDarkCloudDelegate is informed of a new/modified node, it may need to download the node&rsquo;s data.","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)unmarkNodeAsNeedsDownload:components:ifETagMatches:":{"name":"-unmarkNodeAsNeedsDownload:components:ifETagMatches:","abstract":"<p>After a download succeeds, invoke this method to remove the flag.</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)nodeIsMarkedAsNeedsDownload:components:":{"name":"-nodeIsMarkedAsNeedsDownload:components:","abstract":"<p>Returns YES/true if you&rsquo;ve marked the node as needing to be downloaded.</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)addedOperations":{"name":"-addedOperations","abstract":"<p>Returns the operations that were added to the push queue in THIS transaction.</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)addedOperationsForNodeID:":{"name":"-addedOperationsForNodeID:","abstract":"<p>Returns the operations that were added to the push queue in THIS transaction (for the given nodeID).</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)hasPendingDataUploadsForNodeID:":{"name":"-hasPendingDataUploadsForNodeID:","abstract":"<p>Returns YES if there pending uploads for the given nodeID.","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)pendingPutOperationsWithParentID:":{"name":"-pendingPutOperationsWithParentID:","abstract":"<p>Returns a list of pending ZDCCloudOperations for which:</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)pendingCopyOperationsWithRecipientInbox:":{"name":"-pendingCopyOperationsWithRecipientInbox:","abstract":"<p>Returns a list of pending ZDCCloudOperations for which:</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)pendingChangesetsForNodeID:":{"name":"-pendingChangesetsForNodeID:","abstract":"<p>Enumerates all the operations in the queue,","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)didMergeDataWithETag:forNodeID:":{"name":"-didMergeDataWithETag:forNodeID:","abstract":"<p>Invoke this method after you&rsquo;ve downloaded and processed the latest version of a node&rsquo;s data.</p>","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudTransaction.html#/c:objc(cs)ZDCCloudTransaction(im)skipDataUploadsForNodeID:":{"name":"-skipDataUploadsForNodeID:","abstract":"<p>Invoke this method if you&rsquo;ve been notified of a conflict, and you&rsquo;ve decided to let the cloud version <q>win</q>.","parent_name":"ZDCCloudTransaction"},"Classes/ZDCCloudConnection.html#/c:objc(cs)ZDCCloudConnection(py)cloud":{"name":"cloud","abstract":"<p>Returns the parent instance</p>","parent_name":"ZDCCloudConnection"},"Classes/ZDCCloud.html#/c:objc(cs)ZDCCloud(py)localUserID":{"name":"localUserID","abstract":"<p>The localUserID provided during init</p>","parent_name":"ZDCCloud"},"Classes/ZDCCloud.html#/c:objc(cs)ZDCCloud(py)treeID":{"name":"treeID","abstract":"<p>The treeID provided during init</p>","parent_name":"ZDCCloud"},"Classes/ZDCCloud.html":{"name":"ZDCCloud","abstract":"<p>ZDCCloud is a YapDatabase extension.</p>"},"Classes/ZDCCloudConnection.html":{"name":"ZDCCloudConnection","abstract":"<p>ZDCCloud is a YapDatabase extension.</p>"},"Classes/ZDCCloudTransaction.html":{"name":"ZDCCloudTransaction","abstract":"<p>ZDCCloud is a YapDatabase extension.</p>"},"Classes/ZDCCloudOperation.html":{"name":"ZDCCloudOperation","abstract":"<p>ZDCCloudOperation is a lightweight representation of a push task that needs to be performed.</p>"},"Classes/ZDCCloudLocator.html":{"name":"ZDCCloudLocator","abstract":"<p>Encapsulates all the information required to locate a file in the cloud:</p>"},"Classes/ZDCCloudPath.html":{"name":"ZDCCloudPath","abstract":"<p>Encapsultes a standardized &amp; parsed cloudPath, which takes the form of: {treeID}/{dirPrefix}/{filename}</p>"},"Classes/ZDCCloudRcrd.html":{"name":"ZDCCloudRcrd","abstract":"<p>This class represents the decrypted information within a RCRD file.</p>"},"Classes/ZDCDropboxInvite.html":{"name":"ZDCDropboxInvite","abstract":"<p>A <q>dropbox invite</q> encompasses the information required for another user to write into your treesystem.</p>"},"Classes/ZDCGraftInvite.html":{"name":"ZDCGraftInvite","abstract":"<p>A GraftInvite encompasses the information required to complete a graft.</p>"},"Structs/ZDCCloudFileHeader.html#/c:@S@ZDCCloudFileHeader@FI@magic":{"name":"magic","abstract":"<p>This value should be kZDCCloudFileContextMagic,","parent_name":"ZDCCloudFileHeader"},"Structs/ZDCCloudFileHeader.html#/c:@S@ZDCCloudFileHeader@FI@metadataSize":{"name":"metadataSize","abstract":"<p>Indicates the size of the (optional) metadata.</p>","parent_name":"ZDCCloudFileHeader"},"Structs/ZDCCloudFileHeader.html#/c:@S@ZDCCloudFileHeader@FI@thumbnailSize":{"name":"thumbnailSize","abstract":"<p>Indicates the size of the (optional) thumbnail.</p>","parent_name":"ZDCCloudFileHeader"},"Structs/ZDCCloudFileHeader.html#/c:@S@ZDCCloudFileHeader@FI@dataSize":{"name":"dataSize","abstract":"<p>Indicates the size of the data (in cleartext).","parent_name":"ZDCCloudFileHeader"},"Structs/ZDCCloudFileHeader.html#/c:@S@ZDCCloudFileHeader@FI@thumbnailxxHash64":{"name":"thumbnailxxHash64","abstract":"<p>A hash of the thumbnail bytes.","parent_name":"ZDCCloudFileHeader"},"Structs/ZDCCloudFileHeader.html#/c:@S@ZDCCloudFileHeader@FI@version":{"name":"version","abstract":"<p>Refers to the version of this header.</p>","parent_name":"ZDCCloudFileHeader"},"Structs/ZDCCloudFileHeader.html#/c:@S@ZDCCloudFileHeader@FI@reserved":{"name":"reserved","abstract":"<p>Reserved for future extensibility.</p>","parent_name":"ZDCCloudFileHeader"},"Structs/ZDCCacheFileHeader.html#/c:@S@ZDCCacheFileHeader@FI@magic":{"name":"magic","abstract":"<p>This value should be kZDCCacheFileContextMagic,","parent_name":"ZDCCacheFileHeader"},"Structs/ZDCCacheFileHeader.html#/c:@S@ZDCCacheFileHeader@FI@dataSize":{"name":"dataSize","abstract":"<p>Indicates the size of the data (in cleartext).","parent_name":"ZDCCacheFileHeader"},"Structs/ZDCCacheFileHeader.html#/c:@S@ZDCCacheFileHeader@FI@reserved":{"name":"reserved","abstract":"<p>Reserved for future extensibility.</p>","parent_name":"ZDCCacheFileHeader"},"Classes/ZDCFilesystemMonitor.html#/c:objc(cs)ZDCFilesystemMonitor(im)initWithFileURL:":{"name":"-initWithFileURL:","abstract":"<p>Creates a new monitor designed to watch the given file for changes.","parent_name":"ZDCFilesystemMonitor"},"Classes/ZDCFilesystemMonitor.html#/c:objc(cs)ZDCFilesystemMonitor(im)initWithDirectoryURL:":{"name":"-initWithDirectoryURL:","abstract":"<p>Creates a new monitor designed to watch the given directory for changes.","parent_name":"ZDCFilesystemMonitor"},"Classes/ZDCFilesystemMonitor.html#/c:objc(cs)ZDCFilesystemMonitor(py)url":{"name":"url","abstract":"<p>The URL specified during init</p>","parent_name":"ZDCFilesystemMonitor"},"Classes/ZDCFilesystemMonitor.html#/c:objc(cs)ZDCFilesystemMonitor(py)isDirectory":{"name":"isDirectory","abstract":"<p>YES if initWithDirectoryURL was used. NO otherwise</p>","parent_name":"ZDCFilesystemMonitor"},"Classes/ZDCFilesystemMonitor.html#/c:objc(cs)ZDCFilesystemMonitor(im)monitorWithMask:queue:block:":{"name":"-monitorWithMask:queue:block:","abstract":"<p>Starts monitoring the url for changes.</p>","parent_name":"ZDCFilesystemMonitor"},"Classes/ZDCFilesystemMonitor.html#/c:objc(cs)ZDCFilesystemMonitor(cm)vnode_flags_all":{"name":"+vnode_flags_all","abstract":"<p>Returns a mask with every possible event</p>","parent_name":"ZDCFilesystemMonitor"},"Classes/ZDCFilesystemMonitor.html#/c:objc(cs)ZDCFilesystemMonitor(cm)vnode_flags_data_changed":{"name":"+vnode_flags_data_changed","abstract":"<p>Returns a mask with flags only for when the actual bytes change</p>","parent_name":"ZDCFilesystemMonitor"},"Classes/ZDCFilesystemMonitor.html#/c:objc(cs)ZDCFilesystemMonitor(cm)vnode_flags_description:":{"name":"+vnode_flags_description:","abstract":"<p>Returns a string listing the flags specified by the given mask</p>","parent_name":"ZDCFilesystemMonitor"},"Classes/ZDCFileConversion.html#/c:objc(cs)ZDCFileConversion(cm)encryptCleartextFile:toCacheFileWithKey:completionQueue:completionBlock:":{"name":"+encryptCleartextFile:toCacheFileWithKey:completionQueue:completionBlock:","abstract":"<p>Converts from <q>unencrypted/cleartext file format</q> to <q>cache file format</q>.</p>","parent_name":"ZDCFileConversion"},"Classes/ZDCFileConversion.html#/c:objc(cs)ZDCFileConversion(cm)encryptCleartextFile:toCacheFileWithKey:outputStream:error:":{"name":"+encryptCleartextFile:toCacheFileWithKey:outputStream:error:","abstract":"<p>Converts from <q>unencrypted/cleartext file format</q> to <q>cache file format</q>.</p>","parent_name":"ZDCFileConversion"},"Classes/ZDCFileConversion.html#/c:objc(cs)ZDCFileConversion(cm)encryptCleartextFile:toCacheFileWithKey:outputURL:error:":{"name":"+encryptCleartextFile:toCacheFileWithKey:outputURL:error:","abstract":"<p>Converts from <q>unencrypted/cleartext file format</q> to <q>cache file format</q>.</p>","parent_name":"ZDCFileConversion"},"Classes/ZDCFileConversion.html#/c:objc(cs)ZDCFileConversion(cm)encryptCleartextData:toCacheFileWithKey:completionQueue:completionBlock:":{"name":"+encryptCleartextData:toCacheFileWithKey:completionQueue:completionBlock:","abstract":"<p>Converts from <q>unencrypted/cleartext format</q> to <q>cachefile format</q>.</p>","parent_name":"ZDCFileConversion"},"Classes/ZDCFileConversion.html#/c:objc(cs)ZDCFileConversion(cm)encryptCleartextData:toCacheFileWithKey:outputStream:error:":{"name":"+encryptCleartextData:toCacheFileWithKey:outputStream:error:","abstract":"<p>Converts from <q>unencrypted/cleartext format</q> to <q>cachefile format</q>.</p>","parent_name":"ZDCFileConversion"},"Classes/ZDCFileConversion.html#/c:objc(cs)ZDCFileConversion(cm)encryptCleartextData:toCacheFileWithKey:outputURL:error:":{"name":"+encryptCleartextData:toCacheFileWithKey:outputURL:error:","abstract":"<p>Converts from <q>unencrypted/cleartext format</q> to <q>cachefile format</q>.</p>","parent_name":"ZDCFileConversion"},"Classes/ZDCFileConversion.html#/c:objc(cs)ZDCFileConversion(cm)encryptCleartextData:toCacheFileWithKey:error:":{"name":"+encryptCleartextData:toCacheFileWithKey:error:","abstract":"<p>Converts from <q>unencrypted/cleartext format</q> to <q>cachefile format</q>.</p>","parent_name":"ZDCFileConversion"},"Classes/ZDCFileConversion.html#/c:objc(cs)ZDCFileConversion(cm)encryptCleartextWithDataBlock:completionBlock:toCacheFile:withKey:":{"name":"+encryptCleartextWithDataBlock:completionBlock:toCacheFile:withKey:","abstract":"<p>Creates and returns a <q>pump</q>.</p>","parent_name":"ZDCFileConversion"},"Classes/ZDCFileConversion.html#/c:objc(cs)ZDCFileConversion(cm)encryptCleartextFile:toCloudFileWithKey:metadata:thumbnail:completionQueue:completionBlock:":{"name":"+encryptCleartextFile:toCloudFileWithKey:metadata:thumbnail:completionQueue:completionBlock:","abstract":"<p>Converts from <q>unencrypted/cleartext file format</q> to <q>cloud file format</q>.</p>","parent_name":"ZDCFileConversion"},"Classes/ZDCFileConversion.html#/c:objc(cs)ZDCFileConversion(cm)encryptCleartextFile:toCloudFileWithKey:metadata:thumbnail:outputStream:error:":{"name":"+encryptCleartextFile:toCloudFileWithKey:metadata:thumbnail:outputStream:error:","abstract":"<p>Converts from <q>unencrypted/cleartext file format</q> to <q>cloud file format</q>.</p>","parent_name":"ZDCFileConversion"},"Classes/ZDCFileConversion.html#/c:objc(cs)ZDCFileConversion(cm)encryptCleartextFile:toCloudFileWithKey:metadata:thumbnail:outputURL:error:":{"name":"+encryptCleartextFile:toCloudFileWithKey:metadata:thumbnail:outputURL:error:","abstract":"<p>Converts from <q>unencrypted/cleartext file format</q> to <q>cloud file format</q>.</p>","parent_name":"ZDCFileConversion"},"Classes/ZDCFileConversion.html#/c:objc(cs)ZDCFileConversion(cm)encryptCleartextData:toCloudFileWithKey:metadata:thumbnail:completionQueue:completionBlock:":{"name":"+encryptCleartextData:toCloudFileWithKey:metadata:thumbnail:completionQueue:completionBlock:","abstract":"<p>Converts from <q>unencrypted/cleartext format</q> to <q>cloudfile format</q>.</p>","parent_name":"ZDCFileConversion"},"Classes/ZDCFileConversion.html#/c:objc(cs)ZDCFileConversion(cm)encryptCleartextData:toCloudFileWithKey:metadata:thumbnail:outputStream:error:":{"name":"+encryptCleartextData:toCloudFileWithKey:metadata:thumbnail:outputStream:error:","abstract":"<p>Converts from <q>unencrypted/cleartext format</q> to <q>cloud file format</q>.</p>","parent_name":"ZDCFileConversion"},"Classes/ZDCFileConversion.html#/c:objc(cs)ZDCFileConversion(cm)encryptCleartextData:toCloudFileWithKey:metadata:thumbnail:outputURL:error:":{"name":"+encryptCleartextData:toCloudFileWithKey:metadata:thumbnail:outputURL:error:","abstract":"<p>Converts from <q>unencrypted/cleartext format</q> to <q>cloudfile format</q>.</p>","parent_name":"ZDCFileConversion"},"Classes/ZDCFileConversion.html#/c:objc(cs)ZDCFileConversion(cm)encryptCleartextData:toCloudFileWithKey:metadata:thumbnail:error:":{"name":"+encryptCleartextData:toCloudFileWithKey:metadata:thumbnail:error:","abstract":"<p>Converts from <q>unencrypted/cleartext format</q> to <q>cloudfile format</q>.</p>","parent_name":"ZDCFileConversion"},"Classes/ZDCFileConversion.html#/c:objc(cs)ZDCFileConversion(cm)encryptCleartextWithDataBlock:completionBlock:toCloudFile:withKey:metadata:thumbnail:":{"name":"+encryptCleartextWithDataBlock:completionBlock:toCloudFile:withKey:metadata:thumbnail:","abstract":"<p>Creates and returns a <q>pump</q>.</p>","parent_name":"ZDCFileConversion"},"Classes/ZDCFileConversion.html#/c:objc(cs)ZDCFileConversion(cm)decryptCryptoFile:completionQueue:completionBlock:":{"name":"+decryptCryptoFile:completionQueue:completionBlock:","abstract":"<p>Converts a file from an encrypted format to an unencrypted/cleartext format.</p>","parent_name":"ZDCFileConversion"},"Classes/ZDCFileConversion.html#/c:objc(cs)ZDCFileConversion(cm)decryptCryptoFile:toOutputStream:error:":{"name":"+decryptCryptoFile:toOutputStream:error:","abstract":"<p>Converts a file from an encrypted format to an unencrypted/cleartext format.</p>","parent_name":"ZDCFileConversion"},"Classes/ZDCFileConversion.html#/c:objc(cs)ZDCFileConversion(cm)decryptCryptoFileIntoMemory:error:":{"name":"+decryptCryptoFileIntoMemory:error:","abstract":"<p>Converts a file from an encrypted format to an unencrypted/cleartext format.</p>","parent_name":"ZDCFileConversion"},"Classes/ZDCFileConversion.html#/c:objc(cs)ZDCFileConversion(cm)decryptCryptoFileIntoMemory:completionQueue:completionBlock:":{"name":"+decryptCryptoFileIntoMemory:completionQueue:completionBlock:","abstract":"<p>Converts a file from an encrypted format to an unencrypted/cleartext format.</p>","parent_name":"ZDCFileConversion"},"Classes/ZDCFileConversion.html#/c:objc(cs)ZDCFileConversion(cm)decryptCacheFile:encryptionKey:retainToken:completionQueue:completionBlock:":{"name":"+decryptCacheFile:encryptionKey:retainToken:completionQueue:completionBlock:","abstract":"<p>Converts from <q>cache file format</q> to <q>unencrypted/cleartext file format</q>.</p>","parent_name":"ZDCFileConversion"},"Classes/ZDCFileConversion.html#/c:objc(cs)ZDCFileConversion(cm)decryptCacheFile:encryptionKey:retainToken:toOutputStream:error:":{"name":"+decryptCacheFile:encryptionKey:retainToken:toOutputStream:error:","abstract":"<p>Converts from <q>cache file format</q> to <q>unencrypted/cleartext file format</q>.</p>","parent_name":"ZDCFileConversion"},"Classes/ZDCFileConversion.html#/c:objc(cs)ZDCFileConversion(cm)decryptCacheFileIntoMemory:encryptionKey:retainToken:error:":{"name":"+decryptCacheFileIntoMemory:encryptionKey:retainToken:error:","abstract":"<p>Converts from <q>cache file format</q> to <q>unencrypted/cleartext file format</q>.</p>","parent_name":"ZDCFileConversion"},"Classes/ZDCFileConversion.html#/c:objc(cs)ZDCFileConversion(cm)decryptCacheFileIntoMemory:encryptionKey:retainToken:completionQueue:completionBlock:":{"name":"+decryptCacheFileIntoMemory:encryptionKey:retainToken:completionQueue:completionBlock:","abstract":"<p>Converts from <q>cache file format</q> to <q>unencrypted/cleartext file format</q>.</p>","parent_name":"ZDCFileConversion"},"Classes/ZDCFileConversion.html#/c:objc(cs)ZDCFileConversion(cm)decryptCloudFile:encryptionKey:retainToken:completionQueue:completionBlock:":{"name":"+decryptCloudFile:encryptionKey:retainToken:completionQueue:completionBlock:","abstract":"<p>Converts from <q>cloud file format</q> to <q>unencrypted/cleartext file format</q>.</p>","parent_name":"ZDCFileConversion"},"Classes/ZDCFileConversion.html#/c:objc(cs)ZDCFileConversion(cm)decryptCloudFile:encryptionKey:retainToken:toOutputStream:error:":{"name":"+decryptCloudFile:encryptionKey:retainToken:toOutputStream:error:","abstract":"<p>Converts from <q>cloud file format</q> to <q>unencrypted/cleartext file format</q>.</p>","parent_name":"ZDCFileConversion"},"Classes/ZDCFileConversion.html#/c:objc(cs)ZDCFileConversion(cm)decryptCloudFileIntoMemory:encryptionKey:retainToken:error:":{"name":"+decryptCloudFileIntoMemory:encryptionKey:retainToken:error:","abstract":"<p>Converts from <q>cloud file format</q> to <q>unencrypted/cleartext file format</q>.</p>","parent_name":"ZDCFileConversion"},"Classes/ZDCFileConversion.html#/c:objc(cs)ZDCFileConversion(cm)decryptCloudFileIntoMemory:encryptionKey:retainToken:completionQueue:completionBlock:":{"name":"+decryptCloudFileIntoMemory:encryptionKey:retainToken:completionQueue:completionBlock:","abstract":"<p>Converts from <q>cloud file format</q> to <q>unencrypted/cleartext file format</q>.</p>","parent_name":"ZDCFileConversion"},"Classes/ZDCFileConversion.html#/c:objc(cs)ZDCFileConversion(cm)convertCacheFile:retainToken:encryptionKey:toCloudFileWithKey:metadata:thumbnail:completionQueue:completionBlock:":{"name":"+convertCacheFile:retainToken:encryptionKey:toCloudFileWithKey:metadata:thumbnail:completionQueue:completionBlock:","abstract":"<p>Converts from <q>cache file format</q> to <q>cloud file format</q>.</p>","parent_name":"ZDCFileConversion"},"Classes/ZDCFileConversion.html#/c:objc(cs)ZDCFileConversion(cm)convertCloudFile:retainToken:encryptionKey:toCacheFileWithKey:completionQueue:completionBlock:":{"name":"+convertCloudFile:retainToken:encryptionKey:toCacheFileWithKey:completionQueue:completionBlock:","abstract":"<p>Converts from <q>cloud file format</q> to <q>cache file format</q>.</p>","parent_name":"ZDCFileConversion"},"Classes/ZDCFileConversion.html#/c:objc(cs)ZDCFileConversion(cm)reEncryptFile:fromKey:toKey:completionQueue:completionBlock:":{"name":"+reEncryptFile:fromKey:toKey:completionQueue:completionBlock:","abstract":"<p>Re-Encrypts an encrypted file (either in CacheFile or CloudFile format),","parent_name":"ZDCFileConversion"},"Classes/ZDCFileConversion.html#/c:objc(cs)ZDCFileConversion(cm)reEncryptFile:fromKey:toFile:toKey:error:":{"name":"+reEncryptFile:fromKey:toFile:toKey:error:","abstract":"<p>Re-Encrypts an encrypted file (either in CacheFile or CloudFile format),","parent_name":"ZDCFileConversion"},"Classes/ZDCFileChecksumInstruction.html#/c:objc(cs)ZDCFileChecksumInstruction(py)algorithm":{"name":"algorithm","abstract":"<p>Specifies the algorithm to use when calculating the checksum.","parent_name":"ZDCFileChecksumInstruction"},"Classes/ZDCFileChecksumInstruction.html#/c:objc(cs)ZDCFileChecksumInstruction(py)range":{"name":"range","abstract":"<p>If set, then only a subsection of the file/stream will be part of the checksum.","parent_name":"ZDCFileChecksumInstruction"},"Classes/ZDCFileChecksumInstruction.html#/c:objc(cs)ZDCFileChecksumInstruction(py)chunkSize":{"name":"chunkSize","abstract":"<p>If set, then a separate checksum will be calculated for each chunkSize block.","parent_name":"ZDCFileChecksumInstruction"},"Classes/ZDCFileChecksumInstruction.html#/c:objc(cs)ZDCFileChecksumInstruction(py)callbackQueue":{"name":"callbackQueue","abstract":"<p>The dispatch queue on which to invoke the callbackBlock.","parent_name":"ZDCFileChecksumInstruction"},"Classes/ZDCFileChecksumInstruction.html#/c:objc(cs)ZDCFileChecksumInstruction(py)callbackBlock":{"name":"callbackBlock","abstract":"<p>The block to invoke with the checksum information.</p>","parent_name":"ZDCFileChecksumInstruction"},"Classes/ZDCFileChecksum.html#/c:objc(cs)ZDCFileChecksum(cm)checksumFileURL:withAlgorithm:completionQueue:completionBlock:":{"name":"+checksumFileURL:withAlgorithm:completionQueue:completionBlock:","abstract":"<p>Convenience method for checksuming an entire file with the given algorithm.</p>","parent_name":"ZDCFileChecksum"},"Classes/ZDCFileChecksum.html#/c:objc(cs)ZDCFileChecksum(cm)checksumFileStream:withStreamSize:algorithm:completionQueue:completionBlock:":{"name":"+checksumFileStream:withStreamSize:algorithm:completionQueue:completionBlock:","abstract":"<p>Convenience method for checksuming an entire stream with the given algorithm.</p>","parent_name":"ZDCFileChecksum"},"Classes/ZDCFileChecksum.html#/c:objc(cs)ZDCFileChecksum(cm)checksumFileURL:withInstructions:error:":{"name":"+checksumFileURL:withInstructions:error:","abstract":"<p>Starts a checksum process to read given file, and calculate the checksum(s).</p>","parent_name":"ZDCFileChecksum"},"Classes/ZDCFileChecksum.html#/c:objc(cs)ZDCFileChecksum(cm)checksumFileStream:withStreamSize:instructions:error:":{"name":"+checksumFileStream:withStreamSize:instructions:error:","abstract":"<p>Starts a checksum process to read given file, and calculate the checksum(s).</p>","parent_name":"ZDCFileChecksum"},"Classes/ZDCFileReader.html#/c:objc(cs)ZDCFileReader(im)initWithCryptoFile:":{"name":"-initWithCryptoFile:","abstract":"<p>Initializes a new FileReader with the encapsulated information from the cryptoFile instance.</p>","parent_name":"ZDCFileReader"},"Classes/ZDCFileReader.html#/c:objc(cs)ZDCFileReader(im)initWithFileURL:format:encryptionKey:retainToken:":{"name":"-initWithFileURL:format:encryptionKey:retainToken:","abstract":"<p>Designated initializer.</p>","parent_name":"ZDCFileReader"},"Classes/ZDCFileReader.html#/c:objc(cs)ZDCFileReader(py)cleartextFileSize":{"name":"cleartextFileSize","abstract":"<p>This property is available anytime after the stream has been opened.</p>","parent_name":"ZDCFileReader"},"Classes/ZDCFileReader.html#/c:objc(cs)ZDCFileReader(im)openFileWithError:":{"name":"-openFileWithError:","abstract":"<p>Attempts to open the underlying file on disk.</p>","parent_name":"ZDCFileReader"},"Classes/ZDCFileReader.html#/c:objc(cs)ZDCFileReader(im)getBytes:range:error:":{"name":"-getBytes:range:error:","parent_name":"ZDCFileReader"},"Classes/ZDCFileReader.html#/c:objc(cs)ZDCFileReader(im)close":{"name":"-close","abstract":"<p>Optional manual close method.","parent_name":"ZDCFileReader"},"Classes/CloudFile2CleartextInputStream.html#/c:objc(cs)CloudFile2CleartextInputStream(im)initWithCryptoFile:":{"name":"-initWithCryptoFile:","abstract":"<p>Creates an instance that will read from the given cryptoFile,","parent_name":"CloudFile2CleartextInputStream"},"Classes/CloudFile2CleartextInputStream.html#/c:objc(cs)CloudFile2CleartextInputStream(im)initWithCloudFileURL:encryptionKey:":{"name":"-initWithCloudFileURL:encryptionKey:","abstract":"<p>Creates an instance that will read from the given cloudFileURL,","parent_name":"CloudFile2CleartextInputStream"},"Classes/CloudFile2CleartextInputStream.html#/c:objc(cs)CloudFile2CleartextInputStream(im)initWithCloudFileStream:encryptionKey:":{"name":"-initWithCloudFileStream:encryptionKey:","abstract":"<p>Creates an instance that will read from the given cloudFileStream,","parent_name":"CloudFile2CleartextInputStream"},"Classes/CloudFile2CleartextInputStream.html#/c:objc(cs)CloudFile2CleartextInputStream(im)initWithCloudFileData:encryptionKey:":{"name":"-initWithCloudFileData:encryptionKey:","abstract":"<p>Creates an instance that will read from the given cloudFileData,","parent_name":"CloudFile2CleartextInputStream"},"Classes/CloudFile2CleartextInputStream.html#/c:objc(cs)CloudFile2CleartextInputStream(py)cleartextFileSize":{"name":"cleartextFileSize","abstract":"<p>This property is available anytime after the stream has been opened.</p>","parent_name":"CloudFile2CleartextInputStream"},"Classes/CloudFile2CleartextInputStream.html#/c:objc(cs)CloudFile2CleartextInputStream(py)cloudFileHeader":{"name":"cloudFileHeader","abstract":"<p>This property is available anytime after the cloudFileSection has","parent_name":"CloudFile2CleartextInputStream"},"Classes/CloudFile2CleartextInputStream.html#/c:objc(cs)CloudFile2CleartextInputStream(py)cloudFileSection":{"name":"cloudFileSection","abstract":"<p>Every invocation of &lsquo;read:maxLength:&rsquo; will only ever give you data from a single section at a time.","parent_name":"CloudFile2CleartextInputStream"},"Classes/CloudFile2CleartextInputStream.html#/c:objc(cs)CloudFile2CleartextInputStream(cm)decryptCloudFileStream:header:rawMetadata:rawThumbnail:error:":{"name":"+decryptCloudFileStream:header:rawMetadata:rawThumbnail:error:","abstract":"<p>This method is used to read just the header, metadata &amp; thumbnail sections of a cloud file.</p>","parent_name":"CloudFile2CleartextInputStream"},"Classes/CloudFile2CleartextInputStream.html#/c:objc(cs)CloudFile2CleartextInputStream(cm)decryptCloudFileData:withEncryptionKey:header:rawMetadata:rawThumbnail:error:":{"name":"+decryptCloudFileData:withEncryptionKey:header:rawMetadata:rawThumbnail:error:","abstract":"<p>This method is used to read the header, metadata &amp; thumbnail sections of a cloud file.","parent_name":"CloudFile2CleartextInputStream"},"Classes/CloudFile2CleartextInputStream.html#/c:objc(cs)CloudFile2CleartextInputStream(cm)decryptCloudFileURL:withEncryptionKey:header:rawMetadata:rawThumbnail:error:":{"name":"+decryptCloudFileURL:withEncryptionKey:header:rawMetadata:rawThumbnail:error:","abstract":"<p>This method is used to read the header, metadata &amp; thumbnail sections of a cloud file.","parent_name":"CloudFile2CleartextInputStream"},"Classes/CloudFile2CleartextInputStream.html#/c:objc(cs)CloudFile2CleartextInputStream(cm)decryptCloudFileBlocks:withByteOffset:encryptionKey:error:":{"name":"+decryptCloudFileBlocks:withByteOffset:encryptionKey:error:","abstract":"<p>This method can be used to decrypt bytes from the middle of a cloud file.</p>","parent_name":"CloudFile2CleartextInputStream"},"Classes/Cleartext2CloudFileInputStream.html#/c:objc(cs)Cleartext2CloudFileInputStream(im)initWithCleartextFileURL:encryptionKey:":{"name":"-initWithCleartextFileURL:encryptionKey:","abstract":"<p>Creates an instance that will read from the given cleartextFileURL,","parent_name":"Cleartext2CloudFileInputStream"},"Classes/Cleartext2CloudFileInputStream.html#/c:objc(cs)Cleartext2CloudFileInputStream(im)initWithCleartextFileStream:encryptionKey:":{"name":"-initWithCleartextFileStream:encryptionKey:","abstract":"<p>Creates an instance that will read from the given cleartextFileStream,","parent_name":"Cleartext2CloudFileInputStream"},"Classes/Cleartext2CloudFileInputStream.html#/c:objc(cs)Cleartext2CloudFileInputStream(im)initWithCleartextData:encryptionKey:":{"name":"-initWithCleartextData:encryptionKey:","abstract":"<p>Creates an instance that will read from the given cleartextData,","parent_name":"Cleartext2CloudFileInputStream"},"Classes/Cleartext2CloudFileInputStream.html#/c:objc(cs)Cleartext2CloudFileInputStream(py)cleartextFileURL":{"name":"cleartextFileURL","abstract":"<p>If the instance was initialized using a cleartextFileURL, returns the reference.</p>","parent_name":"Cleartext2CloudFileInputStream"},"Classes/Cleartext2CloudFileInputStream.html#/c:objc(cs)Cleartext2CloudFileInputStream(py)cleartextData":{"name":"cleartextData","abstract":"<p>If the instance was initialized using cleartextData, returns the reference.</p>","parent_name":"Cleartext2CloudFileInputStream"},"Classes/Cleartext2CloudFileInputStream.html#/c:objc(cs)Cleartext2CloudFileInputStream(py)rawMetadata":{"name":"rawMetadata","abstract":"<p>You can optionally add a metadata section to the cloudFile.</p>","parent_name":"Cleartext2CloudFileInputStream"},"Classes/Cleartext2CloudFileInputStream.html#/c:objc(cs)Cleartext2CloudFileInputStream(py)rawThumbnail":{"name":"rawThumbnail","abstract":"<p>You can optionally add a thumbnail section to the cloudfile.</p>","parent_name":"Cleartext2CloudFileInputStream"},"Classes/Cleartext2CloudFileInputStream.html#/c:objc(cs)Cleartext2CloudFileInputStream(py)cleartextFileSize":{"name":"cleartextFileSize","abstract":"<p>This property MUST be set before you can invoke &lsquo;read:maxLength&rsquo;.</p>","parent_name":"Cleartext2CloudFileInputStream"},"Classes/Cleartext2CloudFileInputStream.html#/c:objc(cs)Cleartext2CloudFileInputStream(py)cleartextFileSizeUnknown":{"name":"cleartextFileSizeUnknown","abstract":"<p>If you don&rsquo;t know the cleartextFileSize in advance, you can set this property to YES.","parent_name":"Cleartext2CloudFileInputStream"},"Classes/Cleartext2CloudFileInputStream.html#/c:objc(cs)Cleartext2CloudFileInputStream(py)encryptedFileSize":{"name":"encryptedFileSize","abstract":"<p>The total size of the cloud file.","parent_name":"Cleartext2CloudFileInputStream"},"Classes/Cleartext2CloudFileInputStream.html#/c:objc(cs)Cleartext2CloudFileInputStream(py)encryptedRangeSize":{"name":"encryptedRangeSize","abstract":"<p>The total size of the output (if read in its entirety),","parent_name":"Cleartext2CloudFileInputStream"},"Classes/Cleartext2CloudFileInputStream.html#/c:objc(cs)Cleartext2CloudFileInputStream(cm)updateCloudFileHeader:withCleartextFileSize:encryptionKey:":{"name":"+updateCloudFileHeader:withCleartextFileSize:encryptionKey:","abstract":"<p>Allows you to update the CloudFile header, and rewrites the cleartext file size.","parent_name":"Cleartext2CloudFileInputStream"},"Classes/Cleartext2CloudFileInputStream.html#/c:objc(cs)Cleartext2CloudFileInputStream(cm)encryptCloudFileHeader:withEncryptionKey:error:":{"name":"+encryptCloudFileHeader:withEncryptionKey:error:","abstract":"<p>This method can be used to produce an encrypted version of the given header.</p>","parent_name":"Cleartext2CloudFileInputStream"},"Classes/Cleartext2CacheFileInputStream.html#/c:objc(cs)Cleartext2CacheFileInputStream(im)initWithCleartextFileURL:encryptionKey:":{"name":"-initWithCleartextFileURL:encryptionKey:","abstract":"<p>Creates an instance that will read from the given cleartextFileURL,","parent_name":"Cleartext2CacheFileInputStream"},"Classes/Cleartext2CacheFileInputStream.html#/c:objc(cs)Cleartext2CacheFileInputStream(im)initWithCleartextFileStream:encryptionKey:":{"name":"-initWithCleartextFileStream:encryptionKey:","abstract":"<p>Creates an instance that will read from the given cleartextFileStream,","parent_name":"Cleartext2CacheFileInputStream"},"Classes/Cleartext2CacheFileInputStream.html#/c:objc(cs)Cleartext2CacheFileInputStream(im)initWithCleartextData:encryptionKey:":{"name":"-initWithCleartextData:encryptionKey:","abstract":"<p>Creates an instance that will read from the given cleartextData,","parent_name":"Cleartext2CacheFileInputStream"},"Classes/Cleartext2CacheFileInputStream.html#/c:objc(cs)Cleartext2CacheFileInputStream(py)cleartextFileURL":{"name":"cleartextFileURL","abstract":"<p>If the instance was initialized using a cleartextFileURL, returns the reference.</p>","parent_name":"Cleartext2CacheFileInputStream"},"Classes/Cleartext2CacheFileInputStream.html#/c:objc(cs)Cleartext2CacheFileInputStream(py)cleartextData":{"name":"cleartextData","abstract":"<p>If the instance was initialized using cleartextData, returns the reference.</p>","parent_name":"Cleartext2CacheFileInputStream"},"Classes/Cleartext2CacheFileInputStream.html#/c:objc(cs)Cleartext2CacheFileInputStream(py)cleartextFileSize":{"name":"cleartextFileSize","abstract":"<p>This property MUST be set before you can invoke &lsquo;read:maxLength&rsquo;.</p>","parent_name":"Cleartext2CacheFileInputStream"},"Classes/Cleartext2CacheFileInputStream.html#/c:objc(cs)Cleartext2CacheFileInputStream(py)cleartextFileSizeUnknown":{"name":"cleartextFileSizeUnknown","abstract":"<p>If you don&rsquo;t know the cleartextFileSize in advance, you can set this property to YES.","parent_name":"Cleartext2CacheFileInputStream"},"Classes/Cleartext2CacheFileInputStream.html#/c:objc(cs)Cleartext2CacheFileInputStream(py)encryptedFileSize":{"name":"encryptedFileSize","abstract":"<p>The total size of the resulting cache file.","parent_name":"Cleartext2CacheFileInputStream"},"Classes/Cleartext2CacheFileInputStream.html#/c:objc(cs)Cleartext2CacheFileInputStream(cm)updateCacheFileHeader:withCleartextFileSize:encryptionKey:":{"name":"+updateCacheFileHeader:withCleartextFileSize:encryptionKey:","abstract":"<p>Allows you to update the CacheFile header, and rewrites the cleartext file size.","parent_name":"Cleartext2CacheFileInputStream"},"Classes/CacheFile2CleartextInputStream.html#/c:objc(cs)CacheFile2CleartextInputStream(im)initWithCryptoFile:":{"name":"-initWithCryptoFile:","abstract":"<p>Creates an instance that will read from the given cryptoFile,","parent_name":"CacheFile2CleartextInputStream"},"Classes/CacheFile2CleartextInputStream.html#/c:objc(cs)CacheFile2CleartextInputStream(im)initWithCacheFileURL:encryptionKey:":{"name":"-initWithCacheFileURL:encryptionKey:","abstract":"<p>Creates an instance that will read from the given cacheFileURL,","parent_name":"CacheFile2CleartextInputStream"},"Classes/CacheFile2CleartextInputStream.html#/c:objc(cs)CacheFile2CleartextInputStream(im)initWithCacheFileStream:encryptionKey:":{"name":"-initWithCacheFileStream:encryptionKey:","abstract":"<p>Creates an instance that will read from the given cacheFileStream,","parent_name":"CacheFile2CleartextInputStream"},"Classes/CacheFile2CleartextInputStream.html#/c:objc(cs)CacheFile2CleartextInputStream(im)initWithCacheFileData:encryptionKey:":{"name":"-initWithCacheFileData:encryptionKey:","abstract":"<p>Creates an instance that will read from the given cacheFileData,","parent_name":"CacheFile2CleartextInputStream"},"Classes/CacheFile2CleartextInputStream.html#/c:objc(cs)CacheFile2CleartextInputStream(py)cleartextFileSize":{"name":"cleartextFileSize","abstract":"<p>This value is anytime after the stream has been opened.</p>","parent_name":"CacheFile2CleartextInputStream"},"Classes/ZDCInterruptingInputStream.html#/c:objc(cs)ZDCInterruptingInputStream(im)initWithFileURL:":{"name":"-initWithFileURL:","abstract":"<p>Use this method instead of the usual NSInputStream init methods.","parent_name":"ZDCInterruptingInputStream"},"Classes/ZDCInterruptingInputStream.html#/c:objc(cs)ZDCInterruptingInputStream(py)fileURL":{"name":"fileURL","abstract":"<p>The fileURL parameter used to initialize the stream.</p>","parent_name":"ZDCInterruptingInputStream"},"Classes/ZDCInterruptingInputStream.html#/c:objc(cs)ZDCInterruptingInputStream(py)fileSize":{"name":"fileSize","abstract":"<p>The size of the underlying file (in bytes) (value is wrapped uint64_t).","parent_name":"ZDCInterruptingInputStream"},"Classes/ZDCInputStream.html#/c:objc(cs)ZDCInputStream@inputStream":{"name":"inputStream","abstract":"<p>The underlying stream. Exposed to outside world via <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ZDCInputStream.html#/c:objc(cs)ZDCInputStream(py)underlyingInputStream\">underlyingInputStream</a></code> (readonly) property.</p>","parent_name":"ZDCInputStream"},"Classes/ZDCInputStream.html#/c:objc(cs)ZDCInputStream@streamStatus":{"name":"streamStatus","abstract":"<p>Set this when streamStatus changes. Then use <code>sendEvent:</code> if needed.</p>","parent_name":"ZDCInputStream"},"Classes/ZDCInputStream.html#/c:objc(cs)ZDCInputStream@streamError":{"name":"streamError","abstract":"<p>Set this when an error occurs. Then use <code>sendEvent:</code> if needed.</p>","parent_name":"ZDCInputStream"},"Classes/ZDCInputStream.html#/c:objc(cs)ZDCInputStream@delegate":{"name":"delegate","abstract":"<p>Every stream has a delegate</p>","parent_name":"ZDCInputStream"},"Classes/ZDCInputStream.html#/c:objc(cs)ZDCInputStream@fileMinOffset":{"name":"fileMinOffset","abstract":"<p>Direct access to configured value.</p>","parent_name":"ZDCInputStream"},"Classes/ZDCInputStream.html#/c:objc(cs)ZDCInputStream@fileMaxOffset":{"name":"fileMaxOffset","abstract":"<p>Direct access to configured value.</p>","parent_name":"ZDCInputStream"},"Classes/ZDCInputStream.html#/c:objc(cs)ZDCInputStream@returnEOFOnWouldBlock":{"name":"returnEOFOnWouldBlock","abstract":"<p>Direct access to configured value.</p>","parent_name":"ZDCInputStream"},"Classes/ZDCInputStream.html#/c:objc(cs)ZDCInputStream(py)underlyingInputStream":{"name":"underlyingInputStream","abstract":"<p>The underlying stream that&rsquo;s powering this stream.</p>","parent_name":"ZDCInputStream"},"Classes/ZDCInputStream.html#/c:objc(cs)ZDCInputStream(py)retainToken":{"name":"retainToken","abstract":"<p>The retainToken from CacheManager.","parent_name":"ZDCInputStream"},"Classes/ZDCInputStream.html#/c:objc(cs)ZDCInputStream(im)supportsFileMinMaxOffset":{"name":"-supportsFileMinMaxOffset","abstract":"<p>Subclasses should return YES if the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbOther%20Constants.html#/c:@ZDCStreamFileMinOffset\">ZDCStreamFileMinOffset</a></code> &amp; <code><a href=\"36f8f5912051ae747ef441d6511ca4cbOther%20Constants.html#/c:@ZDCStreamFileMaxOffset\">ZDCStreamFileMaxOffset</a></code> properties are supported.","parent_name":"ZDCInputStream"},"Classes/ZDCInputStream.html#/c:objc(cs)ZDCInputStream(im)supportsEOFOnWouldBlock":{"name":"-supportsEOFOnWouldBlock","abstract":"<p>Subclasses should return YES if the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbOther%20Constants.html#/c:@ZDCStreamReturnEOFOnWouldBlock\">ZDCStreamReturnEOFOnWouldBlock</a></code> property is supported.","parent_name":"ZDCInputStream"},"Classes/ZDCInputStream.html":{"name":"ZDCInputStream","abstract":"<p>ZDCInputStream is an abstract NSInputStream that&rsquo;s designed to be subclassed.</p>"},"Classes/ZDCInterruptingInputStream.html":{"name":"ZDCInterruptingInputStream","abstract":"<p>ZDCInterruptingInputStream will automatically close itself with an error if"},"Classes/CacheFile2CleartextInputStream.html":{"name":"CacheFile2CleartextInputStream","abstract":"<p>Converts from cacheFile (encrypted) format to cleartext (non-encrypted) format.</p>"},"Classes/Cleartext2CacheFileInputStream.html":{"name":"Cleartext2CacheFileInputStream","abstract":"<p>Converts from cleartext (non-encrypted) format to cacheFile (encrypted) format.</p>"},"Classes/Cleartext2CloudFileInputStream.html":{"name":"Cleartext2CloudFileInputStream","abstract":"<p>Converts from cleartext (non-encrypted) format to cloudFile (encrypted) format.</p>"},"Classes/CloudFile2CleartextInputStream.html":{"name":"CloudFile2CleartextInputStream","abstract":"<p>Converts from cloudFile (encrypted) format to cleartext (non-encrypted) format.</p>"},"Classes/ZDCFileReader.html":{"name":"ZDCFileReader","abstract":"<p>The FileReader class provides random access to an encrypted file.</p>"},"Classes/ZDCFileChecksum.html":{"name":"ZDCFileChecksum","abstract":"<p>ZDCFileChecksum can generate 1 or more checksums of a file in a single pass."},"Classes/ZDCFileChecksumInstruction.html":{"name":"ZDCFileChecksumInstruction","abstract":"<p>/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////</p>"},"Classes/ZDCFileConversion.html":{"name":"ZDCFileConversion","abstract":"<p>The ZDCFileConverstion class contains many utility methods to encrypt &amp; decrypt files.</p>"},"Classes/ZDCFilesystemMonitor.html":{"name":"ZDCFilesystemMonitor","abstract":"<p>Monitors the filesystem for changes to a file or directory,"},"Structs/ZDCCacheFileHeader.html":{"name":"ZDCCacheFileHeader","abstract":"<p>ZeroDark.cloud uses 2 different types of encrypted files:</p>"},"File%20%26%20Streams.html#/c:ZDCCacheFileHeader.h@T@ZDCCacheFileHeader":{"name":"ZDCCacheFileHeader","abstract":"<p>Standard typedef for <code>struct ZDCCacheFileHeader</code>.</p>"},"Structs/ZDCCloudFileHeader.html":{"name":"ZDCCloudFileHeader","abstract":"<p>ZeroDark.cloud uses 2 different types of encrypted files:</p>"},"File%20%26%20Streams.html#/c:ZDCCloudFileHeader.h@T@ZDCCloudFileHeader":{"name":"ZDCCloudFileHeader","abstract":"<p>Standard typedef for <code>struct ZDCCloudFileHeader</code>.</p>"},"Classes/ZDCAppCostDetails.html#/c:objc(cs)ZDCAppCostDetails(py)total":{"name":"total","abstract":"<p>Convenience funtion: returns the total of all costs.</p>","parent_name":"ZDCAppCostDetails"},"Classes/ZDCAppCostDetails.html#/c:objc(cs)ZDCAppCostDetails(py)bandwidth_byteCount":{"name":"bandwidth_byteCount","abstract":"<p>The cost for bandwidth.</p>","parent_name":"ZDCAppCostDetails"},"Classes/ZDCAppCostDetails.html#/c:objc(cs)ZDCAppCostDetails(py)s3_getCount":{"name":"s3_getCount","abstract":"<p>The cost for S3 GET operations.</p>","parent_name":"ZDCAppCostDetails"},"Classes/ZDCAppCostDetails.html#/c:objc(cs)ZDCAppCostDetails(py)s3_putCount":{"name":"s3_putCount","abstract":"<p>The cost for S3 PUT operations.</p>","parent_name":"ZDCAppCostDetails"},"Classes/ZDCAppCostDetails.html#/c:objc(cs)ZDCAppCostDetails(py)s3_storage":{"name":"s3_storage","abstract":"<p>The cost for S3 storage.</p>","parent_name":"ZDCAppCostDetails"},"Classes/ZDCAppCostDetails.html#/c:objc(cs)ZDCAppCostDetails(py)s3_multipartStorage":{"name":"s3_multipartStorage","abstract":"<p>The cost for temporary S3 storage, used during mulipart uploads.</p>","parent_name":"ZDCAppCostDetails"},"Classes/ZDCAppCostDetails.html#/c:objc(cs)ZDCAppCostDetails(py)s3_storage_total":{"name":"s3_storage_total","abstract":"<p>Convenience function: returns the total of all items in the s3_storage dictionary.</p>","parent_name":"ZDCAppCostDetails"},"Classes/ZDCAppCostDetails.html#/c:objc(cs)ZDCAppCostDetails(py)s3_multipartStorage_total":{"name":"s3_multipartStorage_total","abstract":"<p>Convenience function: returns the total of all items in the s3_multipartStorage dictionary.</p>","parent_name":"ZDCAppCostDetails"},"Classes/ZDCAppCostDetails.html#/c:objc(cs)ZDCAppCostDetails(py)sns_mobilePushCount":{"name":"sns_mobilePushCount","abstract":"<p>The cost for SNS push notification deliveries.</p>","parent_name":"ZDCAppCostDetails"},"Classes/ZDCAppCostDetails.html#/c:objc(cs)ZDCAppCostDetails(py)sns_publishCount":{"name":"sns_publishCount","abstract":"<p>The cost for SNS push notification publications.</p>","parent_name":"ZDCAppCostDetails"},"Classes/ZDCAppCostDetails.html#/c:objc(cs)ZDCAppCostDetails(py)lambda_millisCount":{"name":"lambda_millisCount","abstract":"<p>The cost for CPU usage.</p>","parent_name":"ZDCAppCostDetails"},"Classes/ZDCAppCostDetails.html#/c:objc(cs)ZDCAppCostDetails(py)lambda_requestCount":{"name":"lambda_requestCount","abstract":"<p>The cost for CPU requests.</p>","parent_name":"ZDCAppCostDetails"},"Classes/ZDCAppCost.html#/c:objc(cs)ZDCAppCost(py)finalCost":{"name":"finalCost","abstract":"<p>If ZDCUserBill.isFinal is true, then this value will be non-nil.","parent_name":"ZDCAppCost"},"Classes/ZDCAppCost.html#/c:objc(cs)ZDCAppCost(py)accumulatedCost":{"name":"accumulatedCost","abstract":"<p>If ZDCUserBill.isFinal is false, then this value will be non-nil.","parent_name":"ZDCAppCost"},"Classes/ZDCAppCost.html#/c:objc(cs)ZDCAppCost(py)estimatedCost":{"name":"estimatedCost","abstract":"<p>If ZDCUserBill.isFinal is false, then this value will be non-nil.","parent_name":"ZDCAppCost"},"Classes/ZDCAppCost.html#/c:objc(cs)ZDCAppCost(py)estimatedBill":{"name":"estimatedBill","abstract":"<p>If ZDCUserBill.isFinal is false, then this value will be non-nil.","parent_name":"ZDCAppCost"},"Classes/ZDCAppCost.html#/c:objc(cs)ZDCAppCost(py)monthStart":{"name":"monthStart","abstract":"<p>Timestamp of when the month started.</p>","parent_name":"ZDCAppCost"},"Classes/ZDCAppCost.html#/c:objc(cs)ZDCAppCost(py)monthEnd":{"name":"monthEnd","abstract":"<p>Timestamp of when the month ended.</p>","parent_name":"ZDCAppCost"},"Classes/ZDCAppCost.html#/c:objc(cs)ZDCAppCost(py)elapsed":{"name":"elapsed","abstract":"<p>The number of seconds that have elapsed so far (for the month).</p>","parent_name":"ZDCAppCost"},"Classes/ZDCAppCost.html#/c:objc(cs)ZDCAppCost(py)remaining":{"name":"remaining","abstract":"<p>The number of seconds that are remaining (for the month).</p>","parent_name":"ZDCAppCost"},"Classes/ZDCStorageBill.html#/c:objc(cs)ZDCStorageBill(py)byteCount":{"name":"byteCount","abstract":"<p>The number of bytes that are currently being stored on the server (as of the ZDCAppBill timestamp).</p>","parent_name":"ZDCStorageBill"},"Classes/ZDCStorageBill.html#/c:objc(cs)ZDCStorageBill(py)byteHours":{"name":"byteHours","abstract":"<p>Representes the <q>byte hours</q> used so far (as of the ZDCAppBill timestamp).</p>","parent_name":"ZDCStorageBill"},"Classes/ZDCAppBill.html#/c:objc(cs)ZDCAppBill(py)bandwidth_byteCount":{"name":"bandwidth_byteCount","abstract":"<p>The number of bytes the user has downloaded from the cloud.</p>","parent_name":"ZDCAppBill"},"Classes/ZDCAppBill.html#/c:objc(cs)ZDCAppBill(py)s3_getCount":{"name":"s3_getCount","abstract":"<p>The number S3 GET requests issued by the user.</p>","parent_name":"ZDCAppBill"},"Classes/ZDCAppBill.html#/c:objc(cs)ZDCAppBill(py)s3_putCount":{"name":"s3_putCount","abstract":"<p>The number of S3 PUT and/or LIST requests.</p>","parent_name":"ZDCAppBill"},"Classes/ZDCAppBill.html#/c:objc(cs)ZDCAppBill(py)s3_storage":{"name":"s3_storage","abstract":"<p>Details the storage consumption used by the app, for each storage tier.</p>","parent_name":"ZDCAppBill"},"Classes/ZDCAppBill.html#/c:objc(cs)ZDCAppBill(py)s3_multipartStorage":{"name":"s3_multipartStorage","abstract":"<p>Details temporary storage consumption used by the app, while uploading large nodes.</p>","parent_name":"ZDCAppBill"},"Classes/ZDCAppBill.html#/c:objc(cs)ZDCAppBill(py)s3_storage_total":{"name":"s3_storage_total","abstract":"<p>Convenience function: returns the SUM of all items in the s3_storage dictionary.</p>","parent_name":"ZDCAppBill"},"Classes/ZDCAppBill.html#/c:objc(cs)ZDCAppBill(py)s3_multipartStorage_total":{"name":"s3_multipartStorage_total","abstract":"<p>Convenience function: returns the SUM of all items in the s3_multipartStorage dictionary.</p>","parent_name":"ZDCAppBill"},"Classes/ZDCAppBill.html#/c:objc(cs)ZDCAppBill(py)sns_mobilePushCount":{"name":"sns_mobilePushCount","abstract":"<p>The number of push notifications actually sent via AWS SNS to devices.</p>","parent_name":"ZDCAppBill"},"Classes/ZDCAppBill.html#/c:objc(cs)ZDCAppBill(py)sns_publishCount":{"name":"sns_publishCount","abstract":"<p>The number of push notifications triggered by the user.</p>","parent_name":"ZDCAppBill"},"Classes/ZDCAppBill.html#/c:objc(cs)ZDCAppBill(py)lambda_millisCount":{"name":"lambda_millisCount","abstract":"<p>The number of milliseconds of CPU time consumed by the user.</p>","parent_name":"ZDCAppBill"},"Classes/ZDCAppBill.html#/c:objc(cs)ZDCAppBill(py)lambda_requestCount":{"name":"lambda_requestCount","abstract":"<p>The number of CPU requests consumed by the user.</p>","parent_name":"ZDCAppBill"},"Classes/ZDCAppBill.html#/c:objc(cs)ZDCAppBill(py)timestamp":{"name":"timestamp","abstract":"<p>The last time these tallies were updated by the server.</p>","parent_name":"ZDCAppBill"},"Classes/ZDCUserBillMetadata.html#/c:objc(cs)ZDCUserBillMetadata(py)month":{"name":"month","abstract":"<p>The month of the bill.</p>","parent_name":"ZDCUserBillMetadata"},"Classes/ZDCUserBillMetadata.html#/c:objc(cs)ZDCUserBillMetadata(py)year":{"name":"year","abstract":"<p>The year of the bill.</p>","parent_name":"ZDCUserBillMetadata"},"Classes/ZDCUserBillMetadata.html#/c:objc(cs)ZDCUserBillMetadata(py)timestamp":{"name":"timestamp","abstract":"<p>The last time this bill was updated by the server.</p>","parent_name":"ZDCUserBillMetadata"},"Classes/ZDCUserBillMetadata.html#/c:objc(cs)ZDCUserBillMetadata(py)isFinal":{"name":"isFinal","abstract":"<p>If the <code>final</code> flag is TRUE, it means the bill is for a previous month/year and is finalized.","parent_name":"ZDCUserBillMetadata"},"Classes/ZDCUserBill.html#/c:objc(cs)ZDCUserBill(py)metadata":{"name":"metadata","abstract":"<p>The bill metadata gives us information such as the year &amp; month this bill represents.</p>","parent_name":"ZDCUserBill"},"Classes/ZDCUserBill.html#/c:objc(cs)ZDCUserBill(py)rates":{"name":"rates","abstract":"<p>Returns the raw rates dictionary.</p>","parent_name":"ZDCUserBill"},"Classes/ZDCUserBill.html#/c:objc(cs)ZDCUserBill(py)apps":{"name":"apps","abstract":"<p>Returns a dictionary, with bills for specific apps (including the totals for all apps).</p>","parent_name":"ZDCUserBill"},"Classes/ZDCUserBill.html#/c:objc(cs)ZDCUserBill(im)calculateCost:":{"name":"-calculateCost:","abstract":"<p>Calculates the raw cloud costs for a given app, or the totals for all apps.","parent_name":"ZDCUserBill"},"Classes/ZDCUserBill.html#/c:objc(cs)ZDCUserBill(im)calculateCost:zdcFee:":{"name":"-calculateCost:zdcFee:","abstract":"<p>Calculates the raw cloud costs for a given app, or the totals for all apps.","parent_name":"ZDCUserBill"},"Classes/ZDCUserBill.html":{"name":"ZDCUserBill","abstract":"<p>Represents a user&rsquo;s bill, which is their tally of cloud costs such as:</p>"},"Classes/ZDCUserBillMetadata.html":{"name":"ZDCUserBillMetadata","abstract":"<p>Represents the metadata from a ZDCUserBill.</p>"},"Classes/ZDCAppBill.html":{"name":"ZDCAppBill","abstract":"<p>Represents the raw tallies for a specific app, or for the user&rsquo;s totals (all apps)."},"Classes/ZDCStorageBill.html":{"name":"ZDCStorageBill","abstract":"<p>Represents the storage tally for a specific {app, storageType} tuple."},"Classes/ZDCAppCost.html":{"name":"ZDCAppCost","abstract":"<p>Provides a calculation of the app&rsquo;s raw cloud costs.</p>"},"Classes/ZDCAppCostDetails.html":{"name":"ZDCAppCostDetails","abstract":"<p>The calculated raw cost for each service.</p>"},"Classes/ZDCUserIdentity.html#/c:objc(cs)ZDCUserIdentity(im)initWithDictionary:":{"name":"-initWithDictionary:","abstract":"<p>Standard initializer</p>","parent_name":"ZDCUserIdentity"},"Classes/ZDCUserIdentity.html#/c:objc(cs)ZDCUserIdentity(py)identityID":{"name":"identityID","abstract":"<p>The identityID is the unique identifier for this identity,","parent_name":"ZDCUserIdentity"},"Classes/ZDCUserIdentity.html#/c:objc(cs)ZDCUserIdentity(py)provider":{"name":"provider","abstract":"<p>Name of the identity provider. (e.g. <q>facebook</q>, <q>github</q>, &hellip;)</p>","parent_name":"ZDCUserIdentity"},"Classes/ZDCUserIdentity.html#/c:objc(cs)ZDCUserIdentity(py)userID":{"name":"userID","abstract":"<p>The userID within the context of the provider/connection.</p>","parent_name":"ZDCUserIdentity"},"Classes/ZDCUserIdentity.html#/c:objc(cs)ZDCUserIdentity(py)connection":{"name":"connection","abstract":"<p>If the provider_name is <q>auth0</q>, this value stores the database connection being used.","parent_name":"ZDCUserIdentity"},"Classes/ZDCUserIdentity.html#/c:objc(cs)ZDCUserIdentity(py)isSocial":{"name":"isSocial","abstract":"<p>Flag that indicates if the identity is <code>Social</code>. e.g: Facebook</p>","parent_name":"ZDCUserIdentity"},"Classes/ZDCUserIdentity.html#/c:objc(cs)ZDCUserIdentity(py)isOwnerPreferredIdentity":{"name":"isOwnerPreferredIdentity","abstract":"<p>The owner-preferred flag may be set by the owner of this identity.</p>","parent_name":"ZDCUserIdentity"},"Classes/ZDCUserIdentity.html#/c:objc(cs)ZDCUserIdentity(py)profileData":{"name":"profileData","abstract":"<p>User&rsquo;s profile data, which comes from the identity provider.</p>","parent_name":"ZDCUserIdentity"},"Classes/ZDCUserIdentity.html#/c:objc(cs)ZDCUserIdentity(py)displayName":{"name":"displayName","abstract":"<p>Returns the proper display name, taking into consideration many different things,","parent_name":"ZDCUserIdentity"},"Classes/ZDCUserIdentity.html#/c:objc(cs)ZDCUserIdentity(py)isRecoveryAccount":{"name":"isRecoveryAccount","abstract":"<p>Co-op users have a recovery connection created for them automatically.</p>","parent_name":"ZDCUserIdentity"},"Classes/ZDCUser.html#/c:objc(cs)ZDCUser(im)initWithUUID:":{"name":"-initWithUUID:","abstract":"<p>Creates a basic ZDCUser with the given userID.</p>","parent_name":"ZDCUser"},"Classes/ZDCUser.html#/c:objc(cs)ZDCUser(py)uuid":{"name":"uuid","abstract":"<p>A user&rsquo;s uuid is commonly referred to as the userID.</p>","parent_name":"ZDCUser"},"Classes/ZDCUser.html#/c:objc(cs)ZDCUser(py)publicKeyID":{"name":"publicKeyID","abstract":"<p>References the user&rsquo;s corresponding ZDCPublicKey stored in the database.</p>","parent_name":"ZDCUser"},"Classes/ZDCUser.html#/c:objc(cs)ZDCUser(py)blockchainProof":{"name":"blockchainProof","abstract":"<p>If the user&rsquo;s publicKey has been verified using the Ethereum blockchain,","parent_name":"ZDCUser"},"Classes/ZDCUser.html#/c:objc(cs)ZDCUser(py)aws_region":{"name":"aws_region","abstract":"<p>Every user account is tied to a specific region where their data is stored.</p>","parent_name":"ZDCUser"},"Classes/ZDCUser.html#/c:objc(cs)ZDCUser(py)aws_bucket":{"name":"aws_bucket","abstract":"<p>The name of a user&rsquo;s AWS S3 bucket.","parent_name":"ZDCUser"},"Classes/ZDCUser.html#/c:objc(cs)ZDCUser(py)accountBlocked":{"name":"accountBlocked","abstract":"<p>If we discover the user&rsquo;s publicKey has been tampered with, this value gets set to YES.</p>","parent_name":"ZDCUser"},"Classes/ZDCUser.html#/c:objc(cs)ZDCUser(py)accountDeleted":{"name":"accountDeleted","abstract":"<p>If the user&rsquo;s account gets deleted, this value gets set to YES.</p>","parent_name":"ZDCUser"},"Classes/ZDCUser.html#/c:objc(cs)ZDCUser(py)lastRefresh_profile":{"name":"lastRefresh_profile","abstract":"<p>A marker used to refresh the user&rsquo;s information periodically.</p>","parent_name":"ZDCUser"},"Classes/ZDCUser.html#/c:objc(cs)ZDCUser(py)lastRefresh_blockchain":{"name":"lastRefresh_blockchain","abstract":"<p>A marker used to refresh the user&rsquo;s information periodically.</p>","parent_name":"ZDCUser"},"Classes/ZDCUser.html#/c:objc(cs)ZDCUser(py)identities":{"name":"identities","abstract":"<p>Contains the list of social identities that the user has linked to their account.</p>","parent_name":"ZDCUser"},"Classes/ZDCUser.html#/c:objc(cs)ZDCUser(py)preferredIdentityID":{"name":"preferredIdentityID","abstract":"<p>Allows a user to control which identity is displayed within the UI.</p>","parent_name":"ZDCUser"},"Classes/ZDCUser.html#/c:objc(cs)ZDCUser(py)displayIdentity":{"name":"displayIdentity","abstract":"<p>Extracts an identity for the user from their list of linked identities.</p>","parent_name":"ZDCUser"},"Classes/ZDCUser.html#/c:objc(cs)ZDCUser(py)displayName":{"name":"displayName","abstract":"<p>Extracts a name for the user from their list of linked identities.</p>","parent_name":"ZDCUser"},"Classes/ZDCUser.html#/c:objc(cs)ZDCUser(im)identityWithID:":{"name":"-identityWithID:","abstract":"<p>Returns the corresponding identity (from the identities array) if it exists.</p>","parent_name":"ZDCUser"},"Classes/ZDCUser.html#/c:objc(cs)ZDCUser(py)isLocal":{"name":"isLocal","abstract":"<p>Shorthand way to check if this is an instance of ZDCLocalUser.</p>","parent_name":"ZDCUser"},"Classes/ZDCUser.html#/c:objc(cs)ZDCUser(py)isRemote":{"name":"isRemote","abstract":"<p>Shorthand way to check if this is NOT an instance of ZDCLocalUser.</p>","parent_name":"ZDCUser"},"Classes/ZDCUser.html#/c:objc(cs)ZDCUser(py)hasRegionAndBucket":{"name":"hasRegionAndBucket","abstract":"<p>Shorthand way to check if there&rsquo;s a valid aws_region &amp; aws_bucket property.</p>","parent_name":"ZDCUser"},"Classes/ZDCUser.html#/c:objc(cs)ZDCUser(im)copyTo:":{"name":"-copyTo:","abstract":"<p>Used when migrating between ZDCUser and ZDCLocalUser.</p>","parent_name":"ZDCUser"},"Classes/ZDCUser.html#/c:objc(cs)ZDCUser(cm)isUserID:":{"name":"+isUserID:","abstract":"<p>Returns YES if the given string is:</p>","parent_name":"ZDCUser"},"Classes/ZDCUser.html#/c:objc(cs)ZDCUser(cm)isAnonymousID:":{"name":"+isAnonymousID:","abstract":"<p>Returns YES if the given string is:</p>","parent_name":"ZDCUser"},"Classes/ZDCTrunkNode.html#/c:objc(cs)ZDCTrunkNode(cm)uuidForLocalUserID:treeID:trunk:":{"name":"+uuidForLocalUserID:treeID:trunk:","abstract":"<p>Returns the database key that can be used to fetch the trunkNode instance from the database.","parent_name":"ZDCTrunkNode"},"Classes/ZDCTrunkNode.html#/c:objc(cs)ZDCTrunkNode(py)treeID":{"name":"treeID","abstract":"<p>The container for the treesystem.</p>","parent_name":"ZDCTrunkNode"},"Classes/ZDCTrunkNode.html#/c:objc(cs)ZDCTrunkNode(py)trunk":{"name":"trunk","abstract":"<p>The trunk (top-level root node). E.g. <q>home</q>, <q>prefs</q>, <q>inbox</q>, <q>outbox</q>.</p>","parent_name":"ZDCTrunkNode"},"Classes/ZDCSymmetricKey.html#/c:objc(cs)ZDCSymmetricKey(cm)keyWithAlgorithm:storageKey:":{"name":"+keyWithAlgorithm:storageKey:","abstract":"<p>Generates a random symmetic key.</p>","parent_name":"ZDCSymmetricKey"},"Classes/ZDCSymmetricKey.html#/c:objc(cs)ZDCSymmetricKey(cm)keyWithString:passCode:":{"name":"+keyWithString:passCode:","abstract":"<p>Undocumented</p>","parent_name":"ZDCSymmetricKey"},"Classes/ZDCSymmetricKey.html#/c:objc(cs)ZDCSymmetricKey(cm)keyWithS4Key:storageKey:":{"name":"+keyWithS4Key:storageKey:","abstract":"<p>Undocumented</p>","parent_name":"ZDCSymmetricKey"},"Classes/ZDCSymmetricKey.html#/c:objc(cs)ZDCSymmetricKey(im)initWithUUID:keyJSON:":{"name":"-initWithUUID:keyJSON:","abstract":"<p>Undocumented</p>","parent_name":"ZDCSymmetricKey"},"Classes/ZDCSymmetricKey.html#/c:objc(cs)ZDCSymmetricKey(py)uuid":{"name":"uuid","abstract":"<p>Undocumented</p>","parent_name":"ZDCSymmetricKey"},"Classes/ZDCSymmetricKey.html#/c:objc(cs)ZDCSymmetricKey(py)keyJSON":{"name":"keyJSON","abstract":"<p>A string that contains the serialized JSON parameters that can be used to create the symmetic key.</p>","parent_name":"ZDCSymmetricKey"},"Classes/ZDCSymmetricKey.html#/c:objc(cs)ZDCSymmetricKey(py)keyDict":{"name":"keyDict","abstract":"<p>Returns a parsed version of <code>pubKeyJSON</code>.","parent_name":"ZDCSymmetricKey"},"Classes/ZDCShareList.html#/c:objc(cs)ZDCShareList(im)init":{"name":"-init","abstract":"<p>Creates an empty shareList.</p>","parent_name":"ZDCShareList"},"Classes/ZDCShareList.html#/c:objc(cs)ZDCShareList(im)initWithDictionary:":{"name":"-initWithDictionary:","abstract":"<p>Creates a shareList by parsing the given dictionary.","parent_name":"ZDCShareList"},"Classes/ZDCShareList.html#/c:objc(cs)ZDCShareList(py)rawDictionary":{"name":"rawDictionary","abstract":"<p>Returns the <q>raw</q> version of the shareList, as it would appear in the cloud.</p>","parent_name":"ZDCShareList"},"Classes/ZDCShareList.html#/c:objc(cs)ZDCShareList(py)count":{"name":"count","abstract":"<p>Returns the number of shareItems in the list</p>","parent_name":"ZDCShareList"},"Classes/ZDCShareList.html#/c:objc(cs)ZDCShareList(im)countOfUserIDs":{"name":"-countOfUserIDs","abstract":"<p>Returns the number of shareItems in the list,","parent_name":"ZDCShareList"},"Classes/ZDCShareList.html#/c:objc(cs)ZDCShareList(im)countOfUserIDsExcluding:":{"name":"-countOfUserIDsExcluding:","abstract":"<p>Returns the number of shareItems in the list,","parent_name":"ZDCShareList"},"Classes/ZDCShareList.html#/c:objc(cs)ZDCShareList(im)hasShareItemForKey:":{"name":"-hasShareItemForKey:","abstract":"<p>Returns whether or not a shareItem exists for the given key.","parent_name":"ZDCShareList"},"Classes/ZDCShareList.html#/c:objc(cs)ZDCShareList(im)hasShareItemForUserID:":{"name":"-hasShareItemForUserID:","abstract":"<p>Returns whether or not a shareItem exists for the given userID.</p>","parent_name":"ZDCShareList"},"Classes/ZDCShareList.html#/c:objc(cs)ZDCShareList(im)hasShareItemForServerID:":{"name":"-hasShareItemForServerID:","abstract":"<p>Returns whether or not a shareItem exists for the given serverID.</p>","parent_name":"ZDCShareList"},"Classes/ZDCShareList.html#/c:objc(cs)ZDCShareList(im)shareItemForKey:":{"name":"-shareItemForKey:","abstract":"<p>Returns the shareItem for the given key.","parent_name":"ZDCShareList"},"Classes/ZDCShareList.html#/c:objc(cs)ZDCShareList(im)shareItemForUserID:":{"name":"-shareItemForUserID:","abstract":"<p>Returns the shareItem for the given userID.</p>","parent_name":"ZDCShareList"},"Classes/ZDCShareList.html#/c:objc(cs)ZDCShareList(im)shareItemForServerID:":{"name":"-shareItemForServerID:","abstract":"<p>Returns the shareItem for the gien serverID.</p>","parent_name":"ZDCShareList"},"Classes/ZDCShareList.html#/c:objc(cs)ZDCShareList(im)addShareItem:forKey:":{"name":"-addShareItem:forKey:","abstract":"<p>Sets the shareItem for the given key.","parent_name":"ZDCShareList"},"Classes/ZDCShareList.html#/c:objc(cs)ZDCShareList(im)addShareItem:forUserID:":{"name":"-addShareItem:forUserID:","abstract":"<p>Sets the shareItem for the given userID.</p>","parent_name":"ZDCShareList"},"Classes/ZDCShareList.html#/c:objc(cs)ZDCShareList(im)addShareItem:forServerID:":{"name":"-addShareItem:forServerID:","abstract":"<p>Sets the shareItem for the given serverID.</p>","parent_name":"ZDCShareList"},"Classes/ZDCShareList.html#/c:objc(cs)ZDCShareList(im)removeShareItemForKey:":{"name":"-removeShareItemForKey:","abstract":"<p>Removes the shareItem with the given key.","parent_name":"ZDCShareList"},"Classes/ZDCShareList.html#/c:objc(cs)ZDCShareList(im)removeShareItemForUserID:":{"name":"-removeShareItemForUserID:","abstract":"<p>Removes the shareItem for the given userID.</p>","parent_name":"ZDCShareList"},"Classes/ZDCShareList.html#/c:objc(cs)ZDCShareList(im)removeShareItemForServerID:":{"name":"-removeShareItemForServerID:","abstract":"<p>Removes the shareItem for the given serverID.</p>","parent_name":"ZDCShareList"},"Classes/ZDCShareList.html#/c:objc(cs)ZDCShareList(im)removeAllShareItems":{"name":"-removeAllShareItems","abstract":"<p>Clears the list - afterwards there will be zero shareItems in the list.</p>","parent_name":"ZDCShareList"},"Classes/ZDCShareList.html#/c:objc(cs)ZDCShareList(im)allKeys":{"name":"-allKeys","abstract":"<p>Returns all keys in the list.","parent_name":"ZDCShareList"},"Classes/ZDCShareList.html#/c:objc(cs)ZDCShareList(im)allUserIDs":{"name":"-allUserIDs","abstract":"<p>Returns all userID&rsquo;s in the list.</p>","parent_name":"ZDCShareList"},"Classes/ZDCShareList.html#/c:objc(cs)ZDCShareList(im)enumerateListWithBlock:":{"name":"-enumerateListWithBlock:","abstract":"<p>Enumerates all items in the list.</p>","parent_name":"ZDCShareList"},"Classes/ZDCShareList.html#/c:objc(cs)ZDCShareList(im)isEqual:":{"name":"-isEqual:","abstract":"<p>Returns true if the parameter is of type ZDCShareList, and all values are the same.</p>","parent_name":"ZDCShareList"},"Classes/ZDCShareList.html#/c:objc(cs)ZDCShareList(im)isEqualToShareList:":{"name":"-isEqualToShareList:","abstract":"<p>Returns true if both lists contain the same shareItems.</p>","parent_name":"ZDCShareList"},"Classes/ZDCShareList.html#/c:objc(cs)ZDCShareList(cm)isUserKey:":{"name":"+isUserKey:","abstract":"<p>Keys are a compound component: <q>{type}:{identifier}</q>","parent_name":"ZDCShareList"},"Classes/ZDCShareList.html#/c:objc(cs)ZDCShareList(cm)isServerKey:":{"name":"+isServerKey:","abstract":"<p>Keys are a compound component: <q>{type}:{identifier}</q>","parent_name":"ZDCShareList"},"Classes/ZDCShareList.html#/c:objc(cs)ZDCShareList(cm)keyForUserID:":{"name":"+keyForUserID:","abstract":"<p>Creates a key: <q>UID:{userID_goes_here}</q></p>","parent_name":"ZDCShareList"},"Classes/ZDCShareList.html#/c:objc(cs)ZDCShareList(cm)userIDFromKey:":{"name":"+userIDFromKey:","abstract":"<p>Extracts userID from key: <q>UID:{userID_extracted_from_here}</q></p>","parent_name":"ZDCShareList"},"Classes/ZDCShareList.html#/c:objc(cs)ZDCShareList(cm)keyForServerID:":{"name":"+keyForServerID:","abstract":"<p>Creates a key: <q>SRV:{serverID_goes_here}</q></p>","parent_name":"ZDCShareList"},"Classes/ZDCShareList.html#/c:objc(cs)ZDCShareList(cm)serverIDFromKey:":{"name":"+serverIDFromKey:","abstract":"<p>Extracts serverID from key: <q>SRV:{serverID_extracted_from_here}</q></p>","parent_name":"ZDCShareList"},"Classes/ZDCShareList.html#/c:objc(cs)ZDCShareList(cm)defaultShareListForTrunk:withLocalUserID:":{"name":"+defaultShareListForTrunk:withLocalUserID:","abstract":"<p>Returns the default set of permissions for the given trunk (top-level root node).","parent_name":"ZDCShareList"},"Classes/ZDCShareItem.html#/c:objc(cs)ZDCShareItem(im)init":{"name":"-init","abstract":"<p>Creates an empty shareItem.</p>","parent_name":"ZDCShareItem"},"Classes/ZDCShareItem.html#/c:objc(cs)ZDCShareItem(im)initWithDictionary:":{"name":"-initWithDictionary:","abstract":"<p>Creates a shareItem by parsing the given dictionary.</p>","parent_name":"ZDCShareItem"},"Classes/ZDCShareItem.html#/c:objc(cs)ZDCShareItem(py)rawDictionary":{"name":"rawDictionary","abstract":"<p>Returns the <q>raw</q> version of the shareList, as it would appear in the cloud.</p>","parent_name":"ZDCShareItem"},"Classes/ZDCShareItem.html#/c:objc(cs)ZDCShareItem(py)permissions":{"name":"permissions","abstract":"<p>The permsissions for the resource.","parent_name":"ZDCShareItem"},"Classes/ZDCShareItem.html#/c:objc(cs)ZDCShareItem(py)key":{"name":"key","abstract":"<p>The wrapped encryptionKey that&rsquo;s being used to encrypt the node&rsquo;s content.</p>","parent_name":"ZDCShareItem"},"Classes/ZDCShareItem.html#/c:objc(cs)ZDCShareItem(py)canAddKey":{"name":"canAddKey","abstract":"<p>Additional security measure to prevent against a possible attack.</p>","parent_name":"ZDCShareItem"},"Classes/ZDCShareItem.html#/c:objc(cs)ZDCShareItem(im)hasPermission:":{"name":"-hasPermission:","abstract":"<p>Returns YES if the given permission is included in the set of permissions.</p>","parent_name":"ZDCShareItem"},"Classes/ZDCShareItem.html#/c:objc(cs)ZDCShareItem(im)addPermission:":{"name":"-addPermission:","abstract":"<p>Adds the given permission to the set of permissions (if it&rsquo;s not already included).</p>","parent_name":"ZDCShareItem"},"Classes/ZDCShareItem.html#/c:objc(cs)ZDCShareItem(im)removePermission:":{"name":"-removePermission:","abstract":"<p>Removes the given permission from the set of permissions (if it&rsquo;s already included).</p>","parent_name":"ZDCShareItem"},"Classes/ZDCShareItem.html#/c:objc(cs)ZDCShareItem(im)isEqual:":{"name":"-isEqual:","abstract":"<p>Returns true if the parameter is of type ZDCShareItem, and all values are the same.</p>","parent_name":"ZDCShareItem"},"Classes/ZDCShareItem.html#/c:objc(cs)ZDCShareItem(im)isEqualToShareItem:":{"name":"-isEqualToShareItem:","abstract":"<p>Returns true if all values are the same.</p>","parent_name":"ZDCShareItem"},"Classes/ZDCPublicKey.html#/c:objc(cs)ZDCPublicKey(cm)privateKeyWithOwner:storageKey:algorithm:":{"name":"+privateKeyWithOwner:storageKey:algorithm:","abstract":"<p>Generates a random public/private key pair.</p>","parent_name":"ZDCPublicKey"},"Classes/ZDCPublicKey.html#/c:objc(cs)ZDCPublicKey(im)initWithUserID:pubKeyJSON:":{"name":"-initWithUserID:pubKeyJSON:","abstract":"<p>Creates a new PublicKey instance from the given parameters.</p>","parent_name":"ZDCPublicKey"},"Classes/ZDCPublicKey.html#/c:objc(cs)ZDCPublicKey(im)initWithUserID:pubKeyJSON:privKeyJSON:":{"name":"-initWithUserID:pubKeyJSON:privKeyJSON:","abstract":"<p>Creates a new PublicKey instance from the given parameters.","parent_name":"ZDCPublicKey"},"Classes/ZDCPublicKey.html#/c:objc(cs)ZDCPublicKey(im)initWithUserID:pubKeyDict:privKeyDict:":{"name":"-initWithUserID:pubKeyDict:privKeyDict:","abstract":"<p>Creates a new PublicKey instance from the given parameters.","parent_name":"ZDCPublicKey"},"Classes/ZDCPublicKey.html#/c:objc(cs)ZDCPublicKey(py)uuid":{"name":"uuid","abstract":"<p>Every PublicKey instance has a randomly generated UUID.","parent_name":"ZDCPublicKey"},"Classes/ZDCPublicKey.html#/c:objc(cs)ZDCPublicKey(py)userID":{"name":"userID","abstract":"<p>A reference to the user who owns this public key.","parent_name":"ZDCPublicKey"},"Classes/ZDCPublicKey.html#/c:objc(cs)ZDCPublicKey(py)pubKeyJSON":{"name":"pubKeyJSON","abstract":"<p>A string that contains the serialized JSON parameters that can be used to create the public key.</p>","parent_name":"ZDCPublicKey"},"Classes/ZDCPublicKey.html#/c:objc(cs)ZDCPublicKey(py)privKeyJSON":{"name":"privKeyJSON","abstract":"<p>A string that contains the serialized JSON parameters that can be used to create the private key.</p>","parent_name":"ZDCPublicKey"},"Classes/ZDCPublicKey.html#/c:objc(cs)ZDCPublicKey(py)isPrivateKey":{"name":"isPrivateKey","abstract":"<p>Returns YES if privKeyJSON is non-nil.</p>","parent_name":"ZDCPublicKey"},"Classes/ZDCPublicKey.html#/c:objc(cs)ZDCPublicKey(py)keyDict":{"name":"keyDict","abstract":"<p>Returns a parsed version of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ZDCPublicKey.html#/c:objc(cs)ZDCPublicKey(py)pubKeyJSON\">pubKeyJSON</a></code>.","parent_name":"ZDCPublicKey"},"Classes/ZDCPublicKey.html#/c:objc(cs)ZDCPublicKey(py)pubKey":{"name":"pubKey","abstract":"<p>Reads &amp; returns the pubKey value from the keyDict.","parent_name":"ZDCPublicKey"},"Classes/ZDCPublicKey.html#/c:objc(cs)ZDCPublicKey(py)keyID":{"name":"keyID","abstract":"<p>Reads &amp; returns the keyID value from the keyDict.</p>","parent_name":"ZDCPublicKey"},"Classes/ZDCPublicKey.html#/c:objc(cs)ZDCPublicKey(im)checkKeyValidityWithError:":{"name":"-checkKeyValidityWithError:","abstract":"<p>Performs self-test by attempting to create an S4KeyContext from the pubKeyJSON.</p>","parent_name":"ZDCPublicKey"},"Classes/ZDCPublicKey.html#/c:objc(cs)ZDCPublicKey(im)updateKeyProperty:value:storageKey:error:":{"name":"-updateKeyProperty:value:storageKey:error:","abstract":"<p>Modifies the pubKeyJSON and/or privKeyJSON by setting the given property.</p>","parent_name":"ZDCPublicKey"},"Classes/ZDCPublicKey.html#/c:objc(cs)ZDCPublicKey(im)copyToPublicKey:":{"name":"-copyToPublicKey:","abstract":"<p>Used when migrating a PrivateKey to a PublicKey.</p>","parent_name":"ZDCPublicKey"},"Classes/ZDCNodeAnchor.html#/c:objc(cs)ZDCNodeAnchor(im)initWithUserID:treeID:dirPrefix:":{"name":"-initWithUserID:treeID:dirPrefix:","abstract":"<p>Creates a new anchor instance using the given properties.</p>","parent_name":"ZDCNodeAnchor"},"Classes/ZDCNodeAnchor.html#/c:objc(cs)ZDCNodeAnchor(py)userID":{"name":"userID","abstract":"<p>The userID who owns the bucket in which the node resides. (userID == ZDCUser.uuid)</p>","parent_name":"ZDCNodeAnchor"},"Classes/ZDCNodeAnchor.html#/c:objc(cs)ZDCNodeAnchor(py)treeID":{"name":"treeID","abstract":"<p>Corresponds to <code>[ZDCCloudPath treeID]</code>.</p>","parent_name":"ZDCNodeAnchor"},"Classes/ZDCNodeAnchor.html#/c:objc(cs)ZDCNodeAnchor(py)dirPrefix":{"name":"dirPrefix","abstract":"<p>Corresponds to <code>[ZDCCloudPath dirPrefix]</code>.</p>","parent_name":"ZDCNodeAnchor"},"Classes/ZDCNode.html#/c:objc(cs)ZDCNode(im)initWithLocalUserID:":{"name":"-initWithLocalUserID:","abstract":"<p>Creates a new ZDCNode instance.</p>","parent_name":"ZDCNode"},"Classes/ZDCNode.html#/c:objc(cs)ZDCNode(py)uuid":{"name":"uuid","abstract":"<p>Every ZDCNode has a uuid. This is commonly referred to as the nodeID:</p>","parent_name":"ZDCNode"},"Classes/ZDCNode.html#/c:objc(cs)ZDCNode(py)localUserID":{"name":"localUserID","abstract":"<p>A reference to the corresponding localUser. (localUserID == ZDCLocalUser.uuid)</p>","parent_name":"ZDCNode"},"Classes/ZDCNode.html#/c:objc(cs)ZDCNode(py)parentID":{"name":"parentID","abstract":"<p>A reference to the parent ZDCNode.uuid.</p>","parent_name":"ZDCNode"},"Classes/ZDCNode.html#/c:objc(cs)ZDCNode(py)name":{"name":"name","abstract":"<p>The cleartext name of the node.","parent_name":"ZDCNode"},"Classes/ZDCNode.html#/c:objc(cs)ZDCNode(py)shareList":{"name":"shareList","abstract":"<p>The shareList encompasses the permissions for the node.</p>","parent_name":"ZDCNode"},"Classes/ZDCNode.html#/c:objc(cs)ZDCNode(py)burnDate":{"name":"burnDate","abstract":"<p>Node&rsquo;s can be assigned a <q>burn</q> date.","parent_name":"ZDCNode"},"Classes/ZDCNode.html#/c:objc(cs)ZDCNode(py)senderID":{"name":"senderID","abstract":"<p>For incoming messages (in the inbox), this value will be set to the userID that sent the message.</p>","parent_name":"ZDCNode"},"Classes/ZDCNode.html#/c:objc(cs)ZDCNode(py)pendingRecipients":{"name":"pendingRecipients","abstract":"<p>For outgoing messages &amp; signals, this set contains the list of userID&rsquo;s for which the system","parent_name":"ZDCNode"},"Classes/ZDCNode.html#/c:objc(cs)ZDCNode(py)encryptionKey":{"name":"encryptionKey","abstract":"<p>The symmetric key that&rsquo;s used to encrypt &amp; decrypt the node&rsquo;s data.","parent_name":"ZDCNode"},"Classes/ZDCNode.html#/c:objc(cs)ZDCNode(py)dirSalt":{"name":"dirSalt","abstract":"<p>Random bits used for creating cloudName&rsquo;s.","parent_name":"ZDCNode"},"Classes/ZDCNode.html#/c:objc(cs)ZDCNode(py)dirPrefix":{"name":"dirPrefix","abstract":"<p>This value represents the dirPrefix to be used by all the children.</p>","parent_name":"ZDCNode"},"Classes/ZDCNode.html#/c:objc(cs)ZDCNode(py)cloudID":{"name":"cloudID","abstract":"<p>Every node has a server-assigned uuid, called the cloudID.","parent_name":"ZDCNode"},"Classes/ZDCNode.html#/c:objc(cs)ZDCNode(py)eTag_rcrd":{"name":"eTag_rcrd","abstract":"<p>The eTag value of the RCRD file in the cloud.</p>","parent_name":"ZDCNode"},"Classes/ZDCNode.html#/c:objc(cs)ZDCNode(py)eTag_data":{"name":"eTag_data","abstract":"<p>The eTag value of the data fork in the cloud.</p>","parent_name":"ZDCNode"},"Classes/ZDCNode.html#/c:objc(cs)ZDCNode(py)lastModified":{"name":"lastModified","abstract":"<p>Returns the later of the 2 dates: lastModified_rcrd &amp; lastModified_data</p>","parent_name":"ZDCNode"},"Classes/ZDCNode.html#/c:objc(cs)ZDCNode(py)lastModified_rcrd":{"name":"lastModified_rcrd","abstract":"<p>The date in which the RCRD file was last modified on the server.","parent_name":"ZDCNode"},"Classes/ZDCNode.html#/c:objc(cs)ZDCNode(py)lastModified_data":{"name":"lastModified_data","abstract":"<p>The date in which the DATA file was last modified on the server.","parent_name":"ZDCNode"},"Classes/ZDCNode.html#/c:objc(cs)ZDCNode(py)cloudDataInfo":{"name":"cloudDataInfo","abstract":"<p>Stores the most recently downloaded information about the data file in the cloud.</p>","parent_name":"ZDCNode"},"Classes/ZDCNode.html#/c:objc(cs)ZDCNode(py)explicitCloudName":{"name":"explicitCloudName","abstract":"<p>Typically the cloudName is calculated by hashing node.name along with parentNode.dirSalt.","parent_name":"ZDCNode"},"Classes/ZDCNode.html#/c:objc(cs)ZDCNode(py)anchor":{"name":"anchor","abstract":"<p>Pointers may point to nodes in a different treesystem.","parent_name":"ZDCNode"},"Classes/ZDCNode.html#/c:objc(cs)ZDCNode(py)pointeeID":{"name":"pointeeID","abstract":"<p>If the node is a pointer, specifies the ZDCNode.uuid that it points to.</p>","parent_name":"ZDCNode"},"Classes/ZDCNode.html#/c:objc(cs)ZDCNode(py)isPointer":{"name":"isPointer","abstract":"<p>Convenience method: equivalent to (pointeeID != nil).</p>","parent_name":"ZDCNode"},"Classes/ZDCNode.html#/c:objc(cs)ZDCNode(py)isSignal":{"name":"isSignal","abstract":"<p>Returns True if the node is an outgoing signal (lightweight message).</p>","parent_name":"ZDCNode"},"Classes/ZDCNode.html#/c:objc(cs)ZDCNode(cm)randomEncryptionKey":{"name":"+randomEncryptionKey","abstract":"<p>Generates a random 512 bit value (64 bytes).</p>","parent_name":"ZDCNode"},"Classes/ZDCNode.html#/c:objc(cs)ZDCNode(cm)randomDirSalt":{"name":"+randomDirSalt","abstract":"<p>Generates a random 160 bit value (20 bytes).</p>","parent_name":"ZDCNode"},"Classes/ZDCNode.html#/c:objc(cs)ZDCNode(cm)randomDirPrefix":{"name":"+randomDirPrefix","abstract":"<p>Generates a random string suitable for use as a dirPrefix.","parent_name":"ZDCNode"},"Classes/ZDCNode.html#/c:objc(cs)ZDCNode(cm)randomCloudName":{"name":"+randomCloudName","abstract":"<p>Generates a random string suitable for use as a cloudName.","parent_name":"ZDCNode"},"Classes/ZDCLocalUserAuth.html#/c:objc(cs)ZDCLocalUserAuth(py)localUserID":{"name":"localUserID","abstract":"<p>Matches ZDDLocalUser.uuid, which is the global userID for the user throughout the ZeroDark ecosystem.</p>","parent_name":"ZDCLocalUserAuth"},"Classes/ZDCLocalUserAuth.html#/c:objc(cs)ZDCLocalUserAuth(py)aws_accessKeyID":{"name":"aws_accessKeyID","abstract":"<p>Part of the credentials used by AWS.</p>","parent_name":"ZDCLocalUserAuth"},"Classes/ZDCLocalUserAuth.html#/c:objc(cs)ZDCLocalUserAuth(py)aws_secret":{"name":"aws_secret","abstract":"<p>Part of the credentials used by AWS.</p>","parent_name":"ZDCLocalUserAuth"},"Classes/ZDCLocalUserAuth.html#/c:objc(cs)ZDCLocalUserAuth(py)aws_session":{"name":"aws_session","abstract":"<p>Part of the credentials used by AWS.</p>","parent_name":"ZDCLocalUserAuth"},"Classes/ZDCLocalUserAuth.html#/c:objc(cs)ZDCLocalUserAuth(py)aws_expiration":{"name":"aws_expiration","abstract":"<p>The AWS credentials are only valid for a short period of time. (usually just a few hours)","parent_name":"ZDCLocalUserAuth"},"Classes/ZDCLocalUserAuth.html#/c:objc(cs)ZDCLocalUserAuth(py)auth0_refreshToken":{"name":"auth0_refreshToken","abstract":"<p>Used for Auth0, which is our identity broker (for now).</p>","parent_name":"ZDCLocalUserAuth"},"Classes/ZDCLocalUserAuth.html#/c:objc(cs)ZDCLocalUserAuth(py)auth0_idToken":{"name":"auth0_idToken","abstract":"<p>An idToken is a JWT that can be exchanged for AWS credentials.</p>","parent_name":"ZDCLocalUserAuth"},"Classes/ZDCLocalUser.html#/c:objc(cs)ZDCLocalUser(py)accessKeyID":{"name":"accessKeyID","abstract":"<p>A reference to the ZDCSymmetricKey.uuid that&rsquo;s used to unlock the user&rsquo;s account during sign-in.</p>","parent_name":"ZDCLocalUser"},"Classes/ZDCLocalUser.html#/c:objc(cs)ZDCLocalUser(py)syncedSalt":{"name":"syncedSalt","abstract":"<p>The syncedSalt is used to salt the clone code when no encyption key is specified.","parent_name":"ZDCLocalUser"},"Classes/ZDCLocalUser.html#/c:objc(cs)ZDCLocalUser(py)aws_stage":{"name":"aws_stage","abstract":"<p>Each AWS server has 3 <q>stages</q> which are used to test server-side code.","parent_name":"ZDCLocalUser"},"Classes/ZDCLocalUser.html#/c:objc(cs)ZDCLocalUser(py)syncingPaused":{"name":"syncingPaused","abstract":"<p>If set to YES, all network activity for the user will be paused.","parent_name":"ZDCLocalUser"},"Classes/ZDCLocalUser.html#/c:objc(cs)ZDCLocalUser(py)accountSuspended":{"name":"accountSuspended","abstract":"<p>If set to YES, the user&rsquo;s account has been suspended due to lack of payment.","parent_name":"ZDCLocalUser"},"Classes/ZDCLocalUser.html#/c:objc(cs)ZDCLocalUser(py)accountNeedsA0Token":{"name":"accountNeedsA0Token","abstract":"<p>The previously valid authentication credentials have been revoked.","parent_name":"ZDCLocalUser"},"Classes/ZDCLocalUser.html#/c:objc(cs)ZDCLocalUser(py)isPayingCustomer":{"name":"isPayingCustomer","abstract":"<p>Undocumented</p>","parent_name":"ZDCLocalUser"},"Classes/ZDCLocalUser.html#/c:objc(cs)ZDCLocalUser(py)hasBackedUpAccessCode":{"name":"hasBackedUpAccessCode","abstract":"<p>All data stored in the cloud is encrypted with keys that only the user knows.","parent_name":"ZDCLocalUser"},"Classes/ZDCLocalUser.html#/c:objc(cs)ZDCLocalUser(py)activationDate":{"name":"activationDate","abstract":"<p>Undocumented</p>","parent_name":"ZDCLocalUser"},"Classes/ZDCLocalUser.html#/c:objc(cs)ZDCLocalUser(py)auth0_primary":{"name":"auth0_primary","abstract":"<p>Undocumented</p>","parent_name":"ZDCLocalUser"},"Classes/ZDCLocalUser.html#/c:objc(cs)ZDCLocalUser(py)hasCompletedActivation":{"name":"hasCompletedActivation","abstract":"<p>Whether or not the user has an assigned region &amp; bucket.","parent_name":"ZDCLocalUser"},"Classes/ZDCLocalUser.html#/c:objc(cs)ZDCLocalUser(py)hasCompletedSetup":{"name":"hasCompletedSetup","abstract":"<p>Does the user have a region/bucket AND a private key.","parent_name":"ZDCLocalUser"},"Classes/ZDCLocalUser.html#/c:objc(cs)ZDCLocalUser(py)canPerformSync":{"name":"canPerformSync","abstract":"<p>Indicates whether we can perform user syncing right now.</p>","parent_name":"ZDCLocalUser"},"Classes/ZDCCloudDataInfo.html#/c:objc(cs)ZDCCloudDataInfo(im)initWithCloudFileHeader:eTag:lastModified:":{"name":"-initWithCloudFileHeader:eTag:lastModified:","abstract":"<p>Creates an instance from a decrypted header,","parent_name":"ZDCCloudDataInfo"},"Classes/ZDCCloudDataInfo.html#/c:objc(cs)ZDCCloudDataInfo(py)metadataSize":{"name":"metadataSize","abstract":"<p>The size (in bytes) of the metadata section within the cloud&rsquo;s data file.","parent_name":"ZDCCloudDataInfo"},"Classes/ZDCCloudDataInfo.html#/c:objc(cs)ZDCCloudDataInfo(py)thumbnailSize":{"name":"thumbnailSize","abstract":"<p>The size (in bytes) of the thumbnail section within the cloud&rsquo;s data file.","parent_name":"ZDCCloudDataInfo"},"Classes/ZDCCloudDataInfo.html#/c:objc(cs)ZDCCloudDataInfo(py)dataSize":{"name":"dataSize","abstract":"<p>The size (in bytes) of the main data section within the cloud&rsquo;s data file.","parent_name":"ZDCCloudDataInfo"},"Classes/ZDCCloudDataInfo.html#/c:objc(cs)ZDCCloudDataInfo(py)thumbnailxxHash64":{"name":"thumbnailxxHash64","abstract":"<p>It is often the case that a node&rsquo;s data will be updated in the cloud,","parent_name":"ZDCCloudDataInfo"},"Classes/ZDCCloudDataInfo.html#/c:objc(cs)ZDCCloudDataInfo(py)eTag":{"name":"eTag","abstract":"<p>The server&rsquo;s eTag value for the DATA file.</p>","parent_name":"ZDCCloudDataInfo"},"Classes/ZDCCloudDataInfo.html#/c:objc(cs)ZDCCloudDataInfo(py)lastModified":{"name":"lastModified","abstract":"<p>The server&rsquo;s lastModified value for the DATA file.</p>","parent_name":"ZDCCloudDataInfo"},"Classes/ZDCCloudDataInfo.html#/c:objc(cs)ZDCCloudDataInfo(im)rawHeader":{"name":"-rawHeader","abstract":"<p>Returns a raw struct version, which is used when storing the data in the cloudFile header.</p>","parent_name":"ZDCCloudDataInfo"},"Classes/ZDCBlockchainProof.html#/c:objc(cs)ZDCBlockchainProof(py)merkleTreeRoot":{"name":"merkleTreeRoot","abstract":"<p>The merkleTreeRoot value is stored on the blockchain (i.e. within the smart contract).</p>","parent_name":"ZDCBlockchainProof"},"Classes/ZDCBlockchainProof.html#/c:objc(cs)ZDCBlockchainProof(py)blockNumber":{"name":"blockNumber","abstract":"<p>The smart contract is coded such that, when a user&rsquo;s merkleTreeRoot is stored in the contract,","parent_name":"ZDCBlockchainProof"},"Classes/ZDCBlockchainProof.html#/c:objc(cs)ZDCBlockchainProof(py)merkleTreeFile_pubKey":{"name":"merkleTreeFile_pubKey","abstract":"<p>Stores the pubKey value that was recorded in the merkleTreeFile.</p>","parent_name":"ZDCBlockchainProof"},"Classes/ZDCBlockchainProof.html#/c:objc(cs)ZDCBlockchainProof(py)merkleTreeFile_keyID":{"name":"merkleTreeFile_keyID","abstract":"<p>Stores the keyID value that was recorded in the merkleTreeFile.</p>","parent_name":"ZDCBlockchainProof"},"Classes/ZDCBlockchainProof.html":{"name":"ZDCBlockchainProof","abstract":"<p>If the user&rsquo;s public key has been verified on the blockchain,"},"Classes/ZDCCloudDataInfo.html":{"name":"ZDCCloudDataInfo","abstract":"<p>The CloudDataInfo class contains information about the DATA file in the cloud.</p>"},"Classes/ZDCLocalUser.html":{"name":"ZDCLocalUser","abstract":"<p>Represents a local user in the system.</p>"},"Classes/ZDCLocalUserAuth.html":{"name":"ZDCLocalUserAuth","abstract":"<p>Encapsulates the information necessary to authenticate the localUser with various systems.</p>"},"Classes/ZDCNode.html":{"name":"ZDCNode","abstract":"<p>ZDCNode encapsulates the metadata for a node."},"Classes/ZDCNodeAnchor.html":{"name":"ZDCNodeAnchor","abstract":"<p>When a node is located in a different bucket (not the localUser&rsquo;s bucket),"},"Classes/ZDCPublicKey.html":{"name":"ZDCPublicKey","abstract":"<p>The PublicKey class holds the information necessary to create a public key within the S4Crypto library."},"Classes/ZDCShareItem.html":{"name":"ZDCShareItem","abstract":"<p>A ShareItem encapsulates the permissions for a particular resource."},"Classes/ZDCShareList.html":{"name":"ZDCShareList","abstract":"<p>ZDCShareList encapsulates the permissions information for a node.</p>"},"Classes/ZDCSymmetricKey.html":{"name":"ZDCSymmetricKey","abstract":"<p>The SymmetricKey class holds the information necessary to create a symmetric key within the S4Crypto library.</p>"},"Classes/ZDCTrunkNode.html":{"name":"ZDCTrunkNode","abstract":"<p>The ZeroDark.cloud framework provides a treesystem in the cloud.</p>"},"Classes/ZDCUser.html":{"name":"ZDCUser","abstract":"<p>Represents a user in the system.</p>"},"Classes/ZDCUserIdentity.html":{"name":"ZDCUserIdentity","abstract":"<p>Encapsulates an identity that&rsquo;s attached to the user.</p>"},"Classes/ZDCUserSearchManager.html#/c:objc(cs)ZDCUserSearchManager(im)searchForUsersWithQuery:treeID:requesterID:options:completionQueue:resultsBlock:":{"name":"-searchForUsersWithQuery:treeID:requesterID:options:completionQueue:resultsBlock:","abstract":"<p>Searches for co-op users who have linked identities which match a given query.</p>","parent_name":"ZDCUserSearchManager"},"Classes/ZDCUserSearchManager.html#/c:objc(cs)ZDCUserSearchManager(im)flushCache":{"name":"-flushCache","abstract":"<p>Allows you to clear the search cache.","parent_name":"ZDCUserSearchManager"},"Classes/ZDCUserManager.html#/c:objc(cs)ZDCUserManager(im)fetchUserWithID:requesterID:completionQueue:completionBlock:":{"name":"-fetchUserWithID:requesterID:completionQueue:completionBlock:","abstract":"<p>Fetches the ZDCUser from the database. If missing, automatically downloads the user.</p>","parent_name":"ZDCUserManager"},"Classes/ZDCUserManager.html#/c:objc(cs)ZDCUserManager(im)fetchPublicKey:requesterID:completionQueue:completionBlock:":{"name":"-fetchPublicKey:requesterID:completionQueue:completionBlock:","abstract":"<p>In some situations, a user&rsquo;s public key may be missing.</p>","parent_name":"ZDCUserManager"},"Classes/ZDCUserManager.html#/c:objc(cs)ZDCUserManager(im)refreshIdentities:requesterID:completionQueue:completionBlock:":{"name":"-refreshIdentities:requesterID:completionQueue:completionBlock:","abstract":"<p>Refreshes the user&rsquo;s list of linked identities.</p>","parent_name":"ZDCUserManager"},"Classes/ZDCUserManager.html#/c:objc(cs)ZDCUserManager(im)checkBlockchain:completionQueue:completionBlock:":{"name":"-checkBlockchain:completionQueue:completionBlock:","abstract":"<p>Checks the blockchain for proof of the user&rsquo;s publicKey.</p>","parent_name":"ZDCUserManager"},"Classes/ZDCUserManager.html#/c:objc(cs)ZDCUserManager(im)sortedUnambiguousNamesForUsers:":{"name":"-sortedUnambiguousNamesForUsers:","abstract":"<p>Given an array of ZDCUser&rsquo;s, this will produce an array of unambiguous displayNames.</p>","parent_name":"ZDCUserManager"},"Classes/ZDCUITools.html#/c:objc(cs)ZDCUITools(im)accountSetupViewControllerWithInitialViewController:canDismissWithoutNewAccount:completionHandler:":{"name":"-accountSetupViewControllerWithInitialViewController:canDismissWithoutNewAccount:completionHandler:","abstract":"<p>Returns a UIViewController that can be used for sign-in &amp; sign-up.</p>","parent_name":"ZDCUITools"},"Classes/ZDCUITools.html#/c:objc(cs)ZDCUITools(im)accountResumeSetupForLocalUserID:completionHandler:":{"name":"-accountResumeSetupForLocalUserID:completionHandler:","abstract":"<p>return a UIViewController for resuming user activation</p>","parent_name":"ZDCUITools"},"Classes/ZDCUITools.html#/c:objc(cs)ZDCUITools(im)pushSettingsForLocalUserID:withNavigationController:":{"name":"-pushSettingsForLocalUserID:withNavigationController:","abstract":"<p>Push a UIViewController for managing a ZDCLocalUser settings.</p>","parent_name":"ZDCUITools"},"Classes/ZDCUITools.html#/c:objc(cs)ZDCUITools(im)pushSocialIdMgmtWithUserID:withNavigationController:":{"name":"-pushSocialIdMgmtWithUserID:withNavigationController:","abstract":"<p>Push a UIViewController for managing a ZDCLocalUser socialIDs</p>","parent_name":"ZDCUITools"},"Classes/ZDCUITools.html#/c:objc(cs)ZDCUITools(im)pushBackupAccessForLocalUserID:withNavigationController:":{"name":"-pushBackupAccessForLocalUserID:withNavigationController:","abstract":"<p>Push a UIViewController for backing up a ZDCLocalUser Access Key</p>","parent_name":"ZDCUITools"},"Classes/ZDCUITools.html#/c:objc(cs)ZDCUITools(im)pushVerifyPublicKeyForUserID:localUserID:withNavigationController:":{"name":"-pushVerifyPublicKeyForUserID:localUserID:withNavigationController:","abstract":"<p>Push a UIViewController for veriying up a ZDCLocalUser Public key</p>","parent_name":"ZDCUITools"},"Classes/ZDCUITools.html#/c:objc(cs)ZDCUITools(im)pushSharedUsersViewForLocalUserID:remoteUserIDs:title:navigationController:completionHandler:":{"name":"-pushSharedUsersViewForLocalUserID:remoteUserIDs:title:navigationController:completionHandler:","abstract":"<p>Push a UIViewController for managing the list of users that an object is shared with.</p>","parent_name":"ZDCUITools"},"Classes/ZDCUITools.html#/c:objc(cs)ZDCUITools(im)pushActivityViewForLocalUserID:withNavigationController:":{"name":"-pushActivityViewForLocalUserID:withNavigationController:","abstract":"<p>Push a UIViewController displaying syncing activity</p>","parent_name":"ZDCUITools"},"Classes/ZDCUITools.html#/c:objc(cs)ZDCUITools(im)deleteRefreshTokenforUserID:completionBlock:":{"name":"-deleteRefreshTokenforUserID:completionBlock:","abstract":"<p>Delete the Refresh token for a given Local User.","parent_name":"ZDCUITools"},"Classes/ZDCUITools.html#/c:objc(cs)ZDCUITools(im)simulatePushNotificationViewController":{"name":"-simulatePushNotificationViewController","abstract":"<p>return a UIViewController for that simulates push notifcations for debugging</p>","parent_name":"ZDCUITools"},"Classes/ZDCSyncManager.html#/c:objc(cs)ZDCSyncManager(im)pullChangesForLocalUserID:":{"name":"-pullChangesForLocalUserID:","abstract":"<p>This method is typically only used on the iOS simulator, which doesn&rsquo;t support push notifications.","parent_name":"ZDCSyncManager"},"Classes/ZDCSyncManager.html#/c:objc(cs)ZDCSyncManager(im)pullChangesForAllLocalUsers":{"name":"-pullChangesForAllLocalUsers","abstract":"<p>This method is typically only used on the iOS simulator, which doesn&rsquo;t support push notifications.","parent_name":"ZDCSyncManager"},"Classes/ZDCSyncManager.html#/c:objc(cs)ZDCSyncManager(im)pausePushForLocalUserID:andAbortUploads:":{"name":"-pausePushForLocalUserID:andAbortUploads:","abstract":"<p>Allows you to pause the push system.","parent_name":"ZDCSyncManager"},"Classes/ZDCSyncManager.html#/c:objc(cs)ZDCSyncManager(im)pausePushForAllLocalUsersAndAbortUploads:":{"name":"-pausePushForAllLocalUsersAndAbortUploads:","abstract":"<p>Allows you to pause the push system.","parent_name":"ZDCSyncManager"},"Classes/ZDCSyncManager.html#/c:objc(cs)ZDCSyncManager(im)resumePushForLocalUserID:":{"name":"-resumePushForLocalUserID:","parent_name":"ZDCSyncManager"},"Classes/ZDCSyncManager.html#/c:objc(cs)ZDCSyncManager(im)resumePushForAllLocalUsers":{"name":"-resumePushForAllLocalUsers","abstract":"<p>Resumes all push systems.","parent_name":"ZDCSyncManager"},"Classes/ZDCSyncManager.html#/c:objc(cs)ZDCSyncManager(im)isPushingPausedForLocalUserID:":{"name":"-isPushingPausedForLocalUserID:","abstract":"<p>Returns true if push is paused for the localUser.</p>","parent_name":"ZDCSyncManager"},"Classes/ZDCSyncManager.html#/c:objc(cs)ZDCSyncManager(im)isPushingPausedForAllUsers":{"name":"-isPushingPausedForAllUsers","abstract":"<p>Returns true if push is paused for every single localUser</p>","parent_name":"ZDCSyncManager"},"Classes/ZDCSyncManager.html#/c:objc(cs)ZDCSyncManager(im)isPushingPausedForAnyUser":{"name":"-isPushingPausedForAnyUser","abstract":"<p>Returns true if push is paused for any localUser</p>","parent_name":"ZDCSyncManager"},"Classes/ZDCSyncManager.html#/c:objc(cs)ZDCSyncManager(im)isPullingChangesForLocalUserID:":{"name":"-isPullingChangesForLocalUserID:","abstract":"<p>This method can be used to discover if a pull is currently in progress for the given user.</p>","parent_name":"ZDCSyncManager"},"Classes/ZDCSyncManager.html#/c:objc(cs)ZDCSyncManager(im)isPushingChangesForLocalUserID:":{"name":"-isPushingChangesForLocalUserID:","abstract":"<p>This method can be used to discover is a push is currently in progress for the given user.</p>","parent_name":"ZDCSyncManager"},"Classes/ZDCSyncManager.html#/c:objc(cs)ZDCSyncManager(im)isPullingOrPushingChangesForLocalUserID:":{"name":"-isPullingOrPushingChangesForLocalUserID:","abstract":"<p>Helpful for checking general sync activity.</p>","parent_name":"ZDCSyncManager"},"Classes/ZDCSyncManager.html#/c:objc(cs)ZDCSyncManager(im)isPullingOrPushingChangesForAnyLocalUser":{"name":"-isPullingOrPushingChangesForAnyLocalUser","abstract":"<p>Helpful for checking general sync activity.</p>","parent_name":"ZDCSyncManager"},"Classes/ZDCSyncManager.html#/c:objc(cs)ZDCSyncManager(im)syncingNodeIDsForLocalUserID:":{"name":"-syncingNodeIDsForLocalUserID:","parent_name":"ZDCSyncManager"},"Classes/ZDCRestManager.html#/c:objc(cs)ZDCRestManager(im)apiGatewayIDForRegion:stage:":{"name":"-apiGatewayIDForRegion:stage:","abstract":"<p>API Gateway URLS have the following form:</p>","parent_name":"ZDCRestManager"},"Classes/ZDCRestManager.html#/c:objc(cs)ZDCRestManager(im)apiGatewayForRegion:stage:path:":{"name":"-apiGatewayForRegion:stage:path:","abstract":"<p>API Gateway URLS have the following form:</p>","parent_name":"ZDCRestManager"},"Classes/ZDCRestManager.html#/c:objc(cs)ZDCRestManager(im)fetchConfigWithCompletionQueue:completionBlock:":{"name":"-fetchConfigWithCompletionQueue:completionBlock:","abstract":"<p>Fetches configuration information from the server.</p>","parent_name":"ZDCRestManager"},"Classes/ZDCRestManager.html#/c:objc(cs)ZDCRestManager(im)setupAccountForLocalUser:withAuth:treeIDs:completionQueue:completionBlock:":{"name":"-setupAccountForLocalUser:withAuth:treeIDs:completionQueue:completionBlock:","abstract":"<p>Configures the user&rsquo;s account, which includes tasks such as creating the user&rsquo;s bucket.</p>","parent_name":"ZDCRestManager"},"Classes/ZDCRestManager.html#/c:objc(cs)ZDCRestManager(im)registerPushTokenForLocalUser:completionQueue:completionBlock:":{"name":"-registerPushTokenForLocalUser:completionQueue:completionBlock:","abstract":"<p>Registers the given iOS/macOS pushToken with the server.</p>","parent_name":"ZDCRestManager"},"Classes/ZDCRestManager.html#/c:objc(cs)ZDCRestManager(im)unregisterPushToken:forUserID:region:completionQueue:completionBlock:":{"name":"-unregisterPushToken:forUserID:region:completionQueue:completionBlock:","abstract":"<p>Unregisters the given iOS/macOS pushToken with the server.</p>","parent_name":"ZDCRestManager"},"Classes/ZDCRestManager.html#/c:objc(cs)ZDCRestManager(im)fetchInfoForLocalUser:withAuth:completionQueue:completionBlock:":{"name":"-fetchInfoForLocalUser:withAuth:completionQueue:completionBlock:","abstract":"<p>Fetches the user&rsquo;s info from the server, which includes:</p>","parent_name":"ZDCRestManager"},"Classes/ZDCRestManager.html#/c:objc(cs)ZDCRestManager(im)fetchAuth0ProfileForLocalUserID:completionQueue:completionBlock:":{"name":"-fetchAuth0ProfileForLocalUserID:completionQueue:completionBlock:","abstract":"<p>Documentation ?</p>","parent_name":"ZDCRestManager"},"Classes/ZDCRestManager.html#/c:objc(cs)ZDCRestManager(im)fetchInfoForRemoteUserID:requesterID:completionQueue:completionBlock:":{"name":"-fetchInfoForRemoteUserID:requesterID:completionQueue:completionBlock:","parent_name":"ZDCRestManager"},"Classes/ZDCRestManager.html#/c:objc(cs)ZDCRestManager(im)fetchUserExists:completionQueue:completionBlock:":{"name":"-fetchUserExists:completionQueue:completionBlock:","parent_name":"ZDCRestManager"},"Classes/ZDCRestManager.html#/c:objc(cs)ZDCRestManager(im)fetchPubKeyForUser:requesterID:completionQueue:completionBlock:":{"name":"-fetchPubKeyForUser:requesterID:completionQueue:completionBlock:","abstract":"<p>Downloads &amp; parses the given user&rsquo;s publicKey file from the server.</p>","parent_name":"ZDCRestManager"},"Classes/ZDCRestManager.html#/c:objc(cs)ZDCRestManager(im)uploadPrivKey:pubKey:forLocalUser:withAuth:completionQueue:completionBlock:":{"name":"-uploadPrivKey:pubKey:forLocalUser:withAuth:completionQueue:completionBlock:","abstract":"<p>Attempts to set the user&rsquo;s privateKey/publicKey pair.","parent_name":"ZDCRestManager"},"Classes/ZDCRestManager.html#/c:objc(cs)ZDCRestManager(im)updatePubKeySigs:forLocalUserID:completionQueue:completionBlock:":{"name":"-updatePubKeySigs:forLocalUserID:completionQueue:completionBlock:","abstract":"<p>Update the publicKey for the user.</p>","parent_name":"ZDCRestManager"},"Classes/ZDCRestManager.html#/c:objc(cs)ZDCRestManager(im)updateAvatar:contentType:previousETag:forLocalUserID:auth0ID:completionQueue:completionBlock:":{"name":"-updateAvatar:contentType:previousETag:forLocalUserID:auth0ID:completionQueue:completionBlock:","abstract":"<p>Updates a user&rsquo;s avatar on the server, either by uploading a new avatar or deleting whatever is there.</p>","parent_name":"ZDCRestManager"},"Classes/ZDCRestManager.html#/c:objc(cs)ZDCRestManager(im)multipartComplete:withUploadID:eTags:inBucket:region:forLocalUserID:withAuth:":{"name":"-multipartComplete:withUploadID:eTags:inBucket:region:forLocalUserID:withAuth:","abstract":"<p>Multipart-complete proxy, facilitated by ZeroDark server.</p>","parent_name":"ZDCRestManager"},"Classes/ZDCRestManager.html#/c:objc(cs)ZDCRestManager(im)listProxyWithPaths:treeID:pullID:continuationID:continuationOffset:continuationToken:inBucket:region:forLocalUserID:withAuth:":{"name":"-listProxyWithPaths:treeID:pullID:continuationID:continuationOffset:continuationToken:inBucket:region:forLocalUserID:withAuth:","abstract":"<p>The permissions on S3 only allow the bucket&rsquo;s owner to list the items within the bucket.","parent_name":"ZDCRestManager"},"Classes/ZDCRestManager.html#/c:objc(cs)ZDCRestManager(im)lostAndFound:bucket:region:requesterID:completionQueue:completionBlock:":{"name":"-lostAndFound:bucket:region:requesterID:completionQueue:completionBlock:","abstract":"<p>Used during grafting if the target node cannot be located.</p>","parent_name":"ZDCRestManager"},"Classes/ZDCRestManager.html#/c:objc(cs)ZDCRestManager(im)fetchFilteredAuth0Profile:requesterID:completionQueue:completionBlock:":{"name":"-fetchFilteredAuth0Profile:requesterID:completionQueue:completionBlock:","abstract":"<p>Fetches the user&rsquo;s public info via the API Gateway.</p>","parent_name":"ZDCRestManager"},"Classes/ZDCRestManager.html#/c:objc(cs)ZDCRestManager(im)searchUserMatch:provider:treeID:requesterID:completionQueue:completionBlock:":{"name":"-searchUserMatch:provider:treeID:requesterID:completionQueue:completionBlock:","abstract":"<p>User search API.</p>","parent_name":"ZDCRestManager"},"Classes/ZDCRestManager.html#/c:objc(cs)ZDCRestManager(im)linkAuth0ID:toRecoveryID:forUser:completionQueue:completionBlock:":{"name":"-linkAuth0ID:toRecoveryID:forUser:completionQueue:completionBlock:","abstract":"<p>REST API to link a normal auth0 identity to a recovery profile.</p>","parent_name":"ZDCRestManager"},"Classes/ZDCRestManager.html#/c:objc(cs)ZDCRestManager(im)linkAuth0ID:forUser:completionQueue:completionBlock:":{"name":"-linkAuth0ID:forUser:completionQueue:completionBlock:","abstract":"<p>Uses the server API to link a secondary auth0 identity to the user&rsquo;s auth0 profile.</p>","parent_name":"ZDCRestManager"},"Classes/ZDCRestManager.html#/c:objc(cs)ZDCRestManager(im)unlinkAuth0ID:forUser:completionQueue:completionBlock:":{"name":"-unlinkAuth0ID:forUser:completionQueue:completionBlock:","abstract":"<p>Uses the server API to unlink a secondary auth0 identity from the user&rsquo;s auth0 profile.</p>","parent_name":"ZDCRestManager"},"Classes/ZDCRestManager.html#/c:objc(cs)ZDCRestManager(im)fetchIsCustomer:completionQueue:completionBlock:":{"name":"-fetchIsCustomer:completionQueue:completionBlock:","abstract":"<p>Queries the server to see if the user has transitioned from <q>free user</q> to <q>paying customer</q>.</p>","parent_name":"ZDCRestManager"},"Classes/ZDCRestManager.html#/c:objc(cs)ZDCRestManager(im)fetchCurrentBalance:completionQueue:completionBlock:":{"name":"-fetchCurrentBalance:completionQueue:completionBlock:","abstract":"<p>Queries the server for the current balance of the user.</p>","parent_name":"ZDCRestManager"},"Classes/ZDCRestManager.html#/c:objc(cs)ZDCRestManager(im)fetchCurrentBilling:completionQueue:completionBlock:":{"name":"-fetchCurrentBilling:completionQueue:completionBlock:","abstract":"<p>Queries the server for the user&rsquo;s billing info.</p>","parent_name":"ZDCRestManager"},"Classes/ZDCRestManager.html#/c:objc(cs)ZDCRestManager(im)fetchPreviousBilling:withYear:month:completionQueue:completionBlock:":{"name":"-fetchPreviousBilling:withYear:month:completionQueue:completionBlock:","abstract":"<p>Queries the server for the user&rsquo;s billing info.</p>","parent_name":"ZDCRestManager"},"Classes/ZDCRestManager.html#/c:objc(cs)ZDCRestManager(im)productPurchasedByUser:productIdentifier:transactionIdentifier:appStoreReceipt:completionQueue:completionBlock:":{"name":"-productPurchasedByUser:productIdentifier:transactionIdentifier:appStoreReceipt:completionQueue:completionBlock:","abstract":"<p>/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////</p>","parent_name":"ZDCRestManager"},"Classes/ZDCRestManager.html#/c:objc(cs)ZDCRestManager(im)fetchMerkleTreeFile:completionQueue:completionBlock:":{"name":"-fetchMerkleTreeFile:completionQueue:completionBlock:","abstract":"<p>Downloads the merkle tree JSON file from the server.","parent_name":"ZDCRestManager"},"Classes/ZDCPushManager.html#/c:objc(cs)ZDCPushManager(im)abortOperationsForLocalUserID:treeID:":{"name":"-abortOperationsForLocalUserID:treeID:","abstract":"<p>Stops all in-flight uploads for the given {localUserID, treeID} tuple.</p>","parent_name":"ZDCPushManager"},"Classes/ZDCPushManager.html#/c:objc(cs)ZDCPushManager(im)abortOperations:":{"name":"-abortOperations:","abstract":"<p>Stops in-flight uploads for the given list of operations.</p>","parent_name":"ZDCPushManager"},"Classes/ZDCPullManager.html#/c:objc(cs)ZDCPullManager(im)pullRemoteChangesForLocalUserID:treeID:":{"name":"-pullRemoteChangesForLocalUserID:treeID:","abstract":"<p>Performs a <q>pull</q> for the given {localUserID, treeID} tuple.</p>","parent_name":"ZDCPullManager"},"Classes/ZDCPullManager.html#/c:objc(cs)ZDCPullManager(im)abortPullForLocalUserID:treeID:":{"name":"-abortPullForLocalUserID:treeID:","abstract":"<p>Aborts an in-progress pull (if exists) for the given {localUserID, treeID} tuple.</p>","parent_name":"ZDCPullManager"},"Classes/ZDCProgressManager.html#/c:objc(cs)ZDCProgressManager(im)allDownloadingNodeIDs":{"name":"-allDownloadingNodeIDs","abstract":"<p>Returns the list of nodeIDs that currently have associated downloads.","parent_name":"ZDCProgressManager"},"Classes/ZDCProgressManager.html#/c:objc(cs)ZDCProgressManager(im)allDownloadingNodeIDs:":{"name":"-allDownloadingNodeIDs:","abstract":"<p>Returns the list of nodeIDs (for the given user) that currently have associated downloads.","parent_name":"ZDCProgressManager"},"Classes/ZDCProgressManager.html#/c:objc(cs)ZDCProgressManager(im)downloadProgressForNodeID:":{"name":"-downloadProgressForNodeID:","abstract":"<p>If available, returns the download progress of the node.</p>","parent_name":"ZDCProgressManager"},"Classes/ZDCProgressManager.html#/c:objc(cs)ZDCProgressManager(im)allMetaDownloadingNodeIDs":{"name":"-allMetaDownloadingNodeIDs","abstract":"<p>Returns the list of nodeIDs that currently have associated &lsquo;meta&rsquo; downloads.</p>","parent_name":"ZDCProgressManager"},"Classes/ZDCProgressManager.html#/c:objc(cs)ZDCProgressManager(im)allMetaDownloadingNodeIDs:":{"name":"-allMetaDownloadingNodeIDs:","abstract":"<p>Returns the list of nodeIDs (for the given user) that currently have associated &lsquo;meta&rsquo; downloads.</p>","parent_name":"ZDCProgressManager"},"Classes/ZDCProgressManager.html#/c:objc(cs)ZDCProgressManager(im)metaDownloadProgressForNodeID:":{"name":"-metaDownloadProgressForNodeID:","abstract":"<p>If available, returns the &lsquo;meta&rsquo; download progress of the node.</p>","parent_name":"ZDCProgressManager"},"Classes/ZDCProgressManager.html#/c:objc(cs)ZDCProgressManager(im)metaDownloadProgressForNodeID:components:":{"name":"-metaDownloadProgressForNodeID:components:","abstract":"<p>If available, returns the &lsquo;meta&rsquo; download progress of the node.</p>","parent_name":"ZDCProgressManager"},"Classes/ZDCProgressManager.html#/c:objc(cs)ZDCProgressManager(im)metaDownloadProgressForNodeID:completionQueue:completionBlock:":{"name":"-metaDownloadProgressForNodeID:completionQueue:completionBlock:","abstract":"<p>If available, returns the &lsquo;meta&rsquo; download progress of the node.","parent_name":"ZDCProgressManager"},"Classes/ZDCProgressManager.html#/c:objc(cs)ZDCProgressManager(im)metaDownloadProgressForNodeID:components:completionQueue:completionBlock:":{"name":"-metaDownloadProgressForNodeID:components:completionQueue:completionBlock:","abstract":"<p>If available, returns the &lsquo;meta&rsquo; download progress of the node.","parent_name":"ZDCProgressManager"},"Classes/ZDCProgressManager.html#/c:objc(cs)ZDCProgressManager(im)addMetaDownloadListenerForNodeID:completionQueue:completionBlock:":{"name":"-addMetaDownloadListenerForNodeID:completionQueue:completionBlock:","abstract":"<p>Adds the given listener.","parent_name":"ZDCProgressManager"},"Classes/ZDCProgressManager.html#/c:objc(cs)ZDCProgressManager(im)addMetaDownloadListenerForNodeID:components:completionQueue:completionBlock:":{"name":"-addMetaDownloadListenerForNodeID:components:completionQueue:completionBlock:","abstract":"<p>Adds the given listener.","parent_name":"ZDCProgressManager"},"Classes/ZDCProgressManager.html#/c:objc(cs)ZDCProgressManager(im)setMetaDownloadProgress:forNodeID:components:localUserID:":{"name":"-setMetaDownloadProgress:forNodeID:components:localUserID:","abstract":"<p>Associates the given progress with a download of the node.","parent_name":"ZDCProgressManager"},"Classes/ZDCProgressManager.html#/c:objc(cs)ZDCProgressManager(im)removeMetaDownloadListenerForNodeID:components:completionBlock:":{"name":"-removeMetaDownloadListenerForNodeID:components:completionBlock:","abstract":"<p>Removes the associated download listener.","parent_name":"ZDCProgressManager"},"Classes/ZDCProgressManager.html#/c:objc(cs)ZDCProgressManager(im)removeMetaDownloadProgressForNodeID:components:withHeader:metadata:thumbnail:error:":{"name":"-removeMetaDownloadProgressForNodeID:components:withHeader:metadata:thumbnail:error:","abstract":"<p>The party responsible for executing the download invokes this method once the download has terminated.</p>","parent_name":"ZDCProgressManager"},"Classes/ZDCProgressManager.html#/c:objc(cs)ZDCProgressManager(im)allDataDownloadingNodeIDs":{"name":"-allDataDownloadingNodeIDs","abstract":"<p>Returns the list of nodeIDs that currently have associated &lsquo;data&rsquo; downloads.</p>","parent_name":"ZDCProgressManager"},"Classes/ZDCProgressManager.html#/c:objc(cs)ZDCProgressManager(im)allDataDownloadingNodeIDs:":{"name":"-allDataDownloadingNodeIDs:","abstract":"<p>Returns the list of nodeIDs (for the given user) that currently have associated &lsquo;data&rsquo; downloads.</p>","parent_name":"ZDCProgressManager"},"Classes/ZDCProgressManager.html#/c:objc(cs)ZDCProgressManager(im)dataDownloadProgressForNodeID:":{"name":"-dataDownloadProgressForNodeID:","abstract":"<p>If available, returns the &lsquo;data&rsquo; download progress of the node.</p>","parent_name":"ZDCProgressManager"},"Classes/ZDCProgressManager.html#/c:objc(cs)ZDCProgressManager(im)dataDownloadProgressForNodeID:completionQueue:completionBlock:":{"name":"-dataDownloadProgressForNodeID:completionQueue:completionBlock:","abstract":"<p>If available, returns the &lsquo;data&rsquo; download progress of the node.","parent_name":"ZDCProgressManager"},"Classes/ZDCProgressManager.html#/c:objc(cs)ZDCProgressManager(im)addDataDownloadListenerForNodeID:completionQueue:completionBlock:":{"name":"-addDataDownloadListenerForNodeID:completionQueue:completionBlock:","abstract":"<p>Adds the given listener.","parent_name":"ZDCProgressManager"},"Classes/ZDCProgressManager.html#/c:objc(cs)ZDCProgressManager(im)setDataDownloadProgress:forNodeID:localUserID:":{"name":"-setDataDownloadProgress:forNodeID:localUserID:","abstract":"<p>Associates the given progress with a download of the node.","parent_name":"ZDCProgressManager"},"Classes/ZDCProgressManager.html#/c:objc(cs)ZDCProgressManager(im)removeDataDownloadListenerForNodeID:completionBlock:":{"name":"-removeDataDownloadListenerForNodeID:completionBlock:","abstract":"<p>Removes the associated download listener.","parent_name":"ZDCProgressManager"},"Classes/ZDCProgressManager.html#/c:objc(cs)ZDCProgressManager(im)removeDataDownloadProgressForNodeID:withHeader:cryptoFile:error:":{"name":"-removeDataDownloadProgressForNodeID:withHeader:cryptoFile:error:","abstract":"<p>The party responsible for executing the download invokes this method once the download has terminated.</p>","parent_name":"ZDCProgressManager"},"Classes/ZDCProgressManager.html#/c:objc(cs)ZDCProgressManager(im)allUploadingOperationUUIDs":{"name":"-allUploadingOperationUUIDs","abstract":"<p>Returns the list of operationUUIDs that currently have an associated upload progress.</p>","parent_name":"ZDCProgressManager"},"Classes/ZDCProgressManager.html#/c:objc(cs)ZDCProgressManager(im)allUploadingOperationUUIDs:":{"name":"-allUploadingOperationUUIDs:","abstract":"<p>Returns the list of operationUUIDs (for the given user) that currently have associated upload progress.</p>","parent_name":"ZDCProgressManager"},"Classes/ZDCProgressManager.html#/c:objc(cs)ZDCProgressManager(im)allUploadingNodeIDs":{"name":"-allUploadingNodeIDs","abstract":"<p>Returns the list of nodeIDs that currently have associated downloads.</p>","parent_name":"ZDCProgressManager"},"Classes/ZDCProgressManager.html#/c:objc(cs)ZDCProgressManager(im)allUploadingNodeIDs:":{"name":"-allUploadingNodeIDs:","abstract":"<p>Returns the list of nodeIDs (for the given user) that currently have associated upload progress.</p>","parent_name":"ZDCProgressManager"},"Classes/ZDCProgressManager.html#/c:objc(cs)ZDCProgressManager(im)uploadProgressForOperationUUID:":{"name":"-uploadProgressForOperationUUID:","abstract":"<p>If available, returns the upload progress for the given operation.</p>","parent_name":"ZDCProgressManager"},"Classes/ZDCProgressManager.html#/c:objc(cs)ZDCProgressManager(im)uploadProgressForOperationUUID:completionQueue:completionBlock:":{"name":"-uploadProgressForOperationUUID:completionQueue:completionBlock:","abstract":"<p>If available, returns the upload progress for the given operation.</p>","parent_name":"ZDCProgressManager"},"Classes/ZDCProgressManager.html#/c:objc(cs)ZDCProgressManager(im)dataUploadProgressForNodeID:":{"name":"-dataUploadProgressForNodeID:","abstract":"<p>If available, returns the upload progress for the node.</p>","parent_name":"ZDCProgressManager"},"Classes/ZDCProgressManager.html#/c:objc(cs)ZDCProgressManager(im)dataUploadProgressForNodeID:completionQueue:completionBlock:":{"name":"-dataUploadProgressForNodeID:completionQueue:completionBlock:","abstract":"<p>If available, returns the upload progress for the node.</p>","parent_name":"ZDCProgressManager"},"Classes/ZDCProgressManager.html#/c:objc(cs)ZDCProgressManager(im)setUploadProgress:forOperation:":{"name":"-setUploadProgress:forOperation:","abstract":"<p>Associates the given progress with the upload for the operation.</p>","parent_name":"ZDCProgressManager"},"Classes/ZDCProgressManager.html#/c:objc(cs)ZDCProgressManager(im)removeUploadProgressForOperationUUID:withSuccess:":{"name":"-removeUploadProgressForOperationUUID:withSuccess:","abstract":"<p>The party responsible for executing the upload invokes this method once the upload has terminated.</p>","parent_name":"ZDCProgressManager"},"Classes/ZDCNodeManager.html#/c:objc(cs)ZDCNodeManager(cm)sharedInstance":{"name":"+sharedInstance","abstract":"<p>Returns the singleton instance.</p>","parent_name":"ZDCNodeManager"},"Classes/ZDCNodeManager.html#/c:objc(cs)ZDCNodeManager(im)trunkNodeForLocalUserID:treeID:trunk:transaction:":{"name":"-trunkNodeForLocalUserID:treeID:trunk:transaction:","abstract":"<p>Returns a specific trunk (top-level root node).</p>","parent_name":"ZDCNodeManager"},"Classes/ZDCNodeManager.html#/c:objc(cs)ZDCNodeManager(im)trunkNodeForNode:transaction:":{"name":"-trunkNodeForNode:transaction:","abstract":"<p>A <q>trunk node</q> is a top-level root node.","parent_name":"ZDCNodeManager"},"Classes/ZDCNodeManager.html#/c:objc(cs)ZDCNodeManager(im)anchorNodeForNode:transaction:":{"name":"-anchorNodeForNode:transaction:","abstract":"<p>An <q>anchor node</q> is the nearest node in the hierarchy that","parent_name":"ZDCNodeManager"},"Classes/ZDCNodeManager.html#/c:objc(cs)ZDCNodeManager(im)ownerIDForNode:transaction:":{"name":"-ownerIDForNode:transaction:","abstract":"<p>Returns the owner of a given node.</p>","parent_name":"ZDCNodeManager"},"Classes/ZDCNodeManager.html#/c:objc(cs)ZDCNodeManager(im)ownerForNode:transaction:":{"name":"-ownerForNode:transaction:","abstract":"<p>Invokes <code>ownerIDForNode:transaction:</code>, and then uses the result to fetch the corresponding ZDCUser.</p>","parent_name":"ZDCNodeManager"},"Classes/ZDCNodeManager.html#/c:objc(cs)ZDCNodeManager(im)targetNodeForNode:transaction:":{"name":"-targetNodeForNode:transaction:","abstract":"<p>If the given node is a pointer (node.isPointer == true),","parent_name":"ZDCNodeManager"},"Classes/ZDCNodeManager.html#/c:objc(cs)ZDCNodeManager(im)pathForNode:transaction:":{"name":"-pathForNode:transaction:","abstract":"<p>Returns the path to the given node.</p>","parent_name":"ZDCNodeManager"},"Classes/ZDCNodeManager.html#/c:objc(cs)ZDCNodeManager(im)parentNodeIDsForNode:transaction:":{"name":"-parentNodeIDsForNode:transaction:","abstract":"<p>Returns an array of all parent nodeID&rsquo;s of the given node, up to the containerNode.</p>","parent_name":"ZDCNodeManager"},"Classes/ZDCNodeManager.html#/c:objc(cs)ZDCNodeManager(im)isNode:aDescendantOf:transaction:":{"name":"-isNode:aDescendantOf:transaction:","abstract":"<p>Walks the tree from nodeID up to the root,","parent_name":"ZDCNodeManager"},"Classes/ZDCNodeManager.html#/c:objc(cs)ZDCNodeManager(im)enumerateNodeIDsWithParentID:transaction:usingBlock:":{"name":"-enumerateNodeIDsWithParentID:transaction:usingBlock:","abstract":"<p>Enumerates all ZDCNode.uuid&rsquo;s whose parentID property matches the given parentID.</p>","parent_name":"ZDCNodeManager"},"Classes/ZDCNodeManager.html#/c:objc(cs)ZDCNodeManager(im)recursiveEnumerateNodeIDsWithParentID:transaction:usingBlock:":{"name":"-recursiveEnumerateNodeIDsWithParentID:transaction:usingBlock:","abstract":"<p>Enumerates all ZDCNode.uuid&rsquo;s who are ancestors of the given parentID.","parent_name":"ZDCNodeManager"},"Classes/ZDCNodeManager.html#/c:objc(cs)ZDCNodeManager(im)enumerateNodesWithParentID:transaction:usingBlock:":{"name":"-enumerateNodesWithParentID:transaction:usingBlock:","abstract":"<p>Enumerates all ZDCNode&rsquo;s whose parentID property matches the given parentID.</p>","parent_name":"ZDCNodeManager"},"Classes/ZDCNodeManager.html#/c:objc(cs)ZDCNodeManager(im)recursiveEnumerateNodesWithParentID:transaction:usingBlock:":{"name":"-recursiveEnumerateNodesWithParentID:transaction:usingBlock:","abstract":"<p>Enumerates all ZDCNodes&rsquo;s who are ancestors of the given parentID.","parent_name":"ZDCNodeManager"},"Classes/ZDCNodeManager.html#/c:objc(cs)ZDCNodeManager(im)hasChildren:transaction:":{"name":"-hasChildren:transaction:","abstract":"<p>Returns whether or not the node has any children.</p>","parent_name":"ZDCNodeManager"},"Classes/ZDCNodeManager.html#/c:objc(cs)ZDCNodeManager(im)findNodeWithName:parentID:transaction:":{"name":"-findNodeWithName:parentID:transaction:","abstract":"<p>Finds the node with the given name, if it exists, and returns it.</p>","parent_name":"ZDCNodeManager"},"Classes/ZDCNodeManager.html#/c:objc(cs)ZDCNodeManager(im)findNodeWithPath:localUserID:treeID:transaction:":{"name":"-findNodeWithPath:localUserID:treeID:transaction:","abstract":"<p>Finds the node with the given path components.</p>","parent_name":"ZDCNodeManager"},"Classes/ZDCNodeManager.html#/c:objc(cs)ZDCNodeManager(im)findNodeWithCloudName:parentID:transaction:":{"name":"-findNodeWithCloudName:parentID:transaction:","abstract":"<p>Finds the node with the given cloudName.","parent_name":"ZDCNodeManager"},"Classes/ZDCNodeManager.html#/c:objc(cs)ZDCNodeManager(im)findNodeWithCloudID:localUserID:treeID:transaction:":{"name":"-findNodeWithCloudID:localUserID:treeID:transaction:","abstract":"<p>Finds the node with the given cloudID &amp; localUserID.","parent_name":"ZDCNodeManager"},"Classes/ZDCNodeManager.html#/c:objc(cs)ZDCNodeManager(im)findNodeWithCloudPath:bucket:region:localUserID:treeID:transaction:":{"name":"-findNodeWithCloudPath:bucket:region:localUserID:treeID:transaction:","abstract":"<p>Locates the node using only the cloud path information.","parent_name":"ZDCNodeManager"},"Classes/ZDCNodeManager.html#/c:objc(cs)ZDCNodeManager(im)findNodeWithDirPrefix:bucket:region:localUserID:treeID:transaction:":{"name":"-findNodeWithDirPrefix:bucket:region:localUserID:treeID:transaction:","abstract":"<p>Finds the node with a matching dirPrefix.</p>","parent_name":"ZDCNodeManager"},"Classes/ZDCNodeManager.html#/c:objc(cs)ZDCNodeManager(im)findNodeWithPointeeID:localUserID:treeID:transaction:":{"name":"-findNodeWithPointeeID:localUserID:treeID:transaction:","abstract":"<p>Finds the pointer node with the given pointeeID.</p>","parent_name":"ZDCNodeManager"},"Classes/ZDCNodeManager.html#/c:objc(cs)ZDCNodeManager(im)allNodeIDsWithLocalUserID:transaction:":{"name":"-allNodeIDsWithLocalUserID:transaction:","abstract":"<p>Returns a list of all nodeID&rsquo;s belonging to the given user (regardless of treeID).</p>","parent_name":"ZDCNodeManager"},"Classes/ZDCNodeManager.html#/c:objc(cs)ZDCNodeManager(im)allNodeIDsWithLocalUserID:treeID:transaction:":{"name":"-allNodeIDsWithLocalUserID:treeID:transaction:","abstract":"<p>Returns a list of all nodeID&rsquo;s belonging to the given user.</p>","parent_name":"ZDCNodeManager"},"Classes/ZDCNodeManager.html#/c:objc(cs)ZDCNodeManager(im)allUploadedNodeIDsWithLocalUserID:treeID:transaction:":{"name":"-allUploadedNodeIDsWithLocalUserID:treeID:transaction:","abstract":"<p>Returns all ZDCNode.uuid&rsquo;s where ZDCNode.cloudID is non-nil.","parent_name":"ZDCNodeManager"},"Classes/ZDCNodeManager.html#/c:objc(cs)ZDCNodeManager(im)resetPermissionsForNode:transaction:":{"name":"-resetPermissionsForNode:transaction:","abstract":"<p>Updates the permissons for the node to match those of its parent.</p>","parent_name":"ZDCNodeManager"},"Classes/ZDCNodeManager.html#/c:objc(cs)ZDCNodeManager(im)resolveNamingConflict:transaction:":{"name":"-resolveNamingConflict:transaction:","abstract":"<p>This method may be used to resolve a conflict that can occur when","parent_name":"ZDCNodeManager"},"Classes/ZDCLocalUserManager.html#/c:objc(cs)ZDCLocalUserManager(im)anyLocalUser:":{"name":"-anyLocalUser:","abstract":"<p>Returns non-nil if a ZDCLocalUser exists in the database.","parent_name":"ZDCLocalUserManager"},"Classes/ZDCLocalUserManager.html#/c:objc(cs)ZDCLocalUserManager(im)allLocalUserIDs:":{"name":"-allLocalUserIDs:","abstract":"<p>Returns a list of all localUserIDs. (localUserID == ZDCLocalUser.uuid)</p>","parent_name":"ZDCLocalUserManager"},"Classes/ZDCLocalUserManager.html#/c:objc(cs)ZDCLocalUserManager(im)allLocalUsers:":{"name":"-allLocalUsers:","parent_name":"ZDCLocalUserManager"},"Classes/ZDCLocalUserManager.html#/c:objc(cs)ZDCLocalUserManager(im)enumerateLocalUserIDsWithTransaction:usingBlock:":{"name":"-enumerateLocalUserIDsWithTransaction:usingBlock:","abstract":"<p>Enumerates all localUserID&rsquo;s. (localUserID == ZDCLocalUser.uuid)</p>","parent_name":"ZDCLocalUserManager"},"Classes/ZDCLocalUserManager.html#/c:objc(cs)ZDCLocalUserManager(im)enumerateLocalUsersWithTransaction:usingBlock:":{"name":"-enumerateLocalUsersWithTransaction:usingBlock:","abstract":"<p>Enumerates all local users.</p>","parent_name":"ZDCLocalUserManager"},"Classes/ZDCLocalUserManager.html#/c:objc(cs)ZDCLocalUserManager(im)deleteLocalUser:transaction:":{"name":"-deleteLocalUser:transaction:","abstract":"<p>Fully deletes the local user and all associated items.</p>","parent_name":"ZDCLocalUserManager"},"Classes/ZDCLocalUserManager.html#/c:objc(cs)ZDCLocalUserManager(im)createLocalUserFromJSON:transaction:error:":{"name":"-createLocalUserFromJSON:transaction:error:","abstract":"<p>Creates a local user from a JSON file.</p>","parent_name":"ZDCLocalUserManager"},"Classes/ZDCImageManager.html#/c:objc(cs)ZDCImageManager(py)nodeThumbnailsCache":{"name":"nodeThumbnailsCache","abstract":"<p>Direct access to the underlying in-memory cache container.</p>","parent_name":"ZDCImageManager"},"Classes/ZDCImageManager.html#/c:objc(cs)ZDCImageManager(py)userAvatarsCache":{"name":"userAvatarsCache","abstract":"<p>Direct access to the underlying in-memory cache container.</p>","parent_name":"ZDCImageManager"},"Classes/ZDCImageManager.html#/c:objc(cs)ZDCImageManager(im)fetchNodeThumbnail:withOptions:preFetchBlock:postFetchBlock:":{"name":"-fetchNodeThumbnail:withOptions:preFetchBlock:postFetchBlock:","abstract":"<p>Fetches the node&rsquo;s thumbnail.</p>","parent_name":"ZDCImageManager"},"Classes/ZDCImageManager.html#/c:objc(cs)ZDCImageManager(im)fetchNodeThumbnail:withOptions:processingID:processingBlock:preFetchBlock:postFetchBlock:":{"name":"-fetchNodeThumbnail:withOptions:processingID:processingBlock:preFetchBlock:postFetchBlock:","abstract":"<p>Fetches the node&rsquo;s thumbnail, and allows you to process the image.</p>","parent_name":"ZDCImageManager"},"Classes/ZDCImageManager.html#/c:objc(cs)ZDCImageManager(im)flushNodeThumbnailCache:":{"name":"-flushNodeThumbnailCache:","abstract":"<p>Removes all cached thumbnail images for the given node.</p>","parent_name":"ZDCImageManager"},"Classes/ZDCImageManager.html#/c:objc(cs)ZDCImageManager(im)flushNodeThumbnailCacheWithProcessingID:":{"name":"-flushNodeThumbnailCacheWithProcessingID:","abstract":"<p>Removes all cached thumbnail images for the given processingID.</p>","parent_name":"ZDCImageManager"},"Classes/ZDCImageManager.html#/c:objc(cs)ZDCImageManager(im)fetchUserAvatar:withOptions:preFetchBlock:postFetchBlock:":{"name":"-fetchUserAvatar:withOptions:preFetchBlock:postFetchBlock:","abstract":"<p>Fetches the user&rsquo;s avatar.</p>","parent_name":"ZDCImageManager"},"Classes/ZDCImageManager.html#/c:objc(cs)ZDCImageManager(im)fetchUserAvatar:withOptions:processingID:processingBlock:preFetchBlock:postFetchBlock:":{"name":"-fetchUserAvatar:withOptions:processingID:processingBlock:preFetchBlock:postFetchBlock:","abstract":"<p>Fetches the node&rsquo;s thumbnail, and allows you to process the image.</p>","parent_name":"ZDCImageManager"},"Classes/ZDCImageManager.html#/c:objc(cs)ZDCImageManager(im)fetchUserAvatar:identityID:processingID:processingBlock:preFetchBlock:postFetchBlock:":{"name":"-fetchUserAvatar:identityID:processingID:processingBlock:preFetchBlock:postFetchBlock:","abstract":"<p>Fetches the node&rsquo;s thumbnail, and allows you to process the image.</p>","parent_name":"ZDCImageManager"},"Classes/ZDCImageManager.html#/c:objc(cs)ZDCImageManager(im)flushUserAvatarsCache:":{"name":"-flushUserAvatarsCache:","abstract":"<p>Removes all cached avatar images for the given user.</p>","parent_name":"ZDCImageManager"},"Classes/ZDCImageManager.html#/c:objc(cs)ZDCImageManager(im)flushUserAvatarsCacheWithProcessingID:":{"name":"-flushUserAvatarsCacheWithProcessingID:","abstract":"<p>Removes all cached avatar images for the given processingID.</p>","parent_name":"ZDCImageManager"},"Classes/ZDCImageManager.html#/c:objc(cs)ZDCImageManager(im)defaultUserAvatar":{"name":"-defaultUserAvatar","abstract":"<p>Returns the default user avatar used by the framework.</p>","parent_name":"ZDCImageManager"},"Classes/ZDCImageManager.html#/c:objc(cs)ZDCImageManager(im)defaultMultiUserAvatar":{"name":"-defaultMultiUserAvatar","abstract":"<p>Returns the default multi-user avatar used by the framework.</p>","parent_name":"ZDCImageManager"},"Classes/ZDCDownloadManager.html#/c:objc(cs)ZDCDownloadManager(im)downloadNodeMeta:components:options:completionQueue:completionBlock:":{"name":"-downloadNodeMeta:components:options:completionQueue:completionBlock:","abstract":"<p>Downloads a small portion of the node&rsquo;s content.</p>","parent_name":"ZDCDownloadManager"},"Classes/ZDCDownloadManager.html#/c:objc(cs)ZDCDownloadManager(im)downloadNodeData:options:completionQueue:completionBlock:":{"name":"-downloadNodeData:options:completionQueue:completionBlock:","abstract":"<p>Downloads the full DATA file from the cloud.</p>","parent_name":"ZDCDownloadManager"},"Classes/ZDCDownloadManager.html#/c:objc(cs)ZDCDownloadManager(im)downloadUserAvatar:options:completionQueue:completionBlock:":{"name":"-downloadUserAvatar:options:completionQueue:completionBlock:","abstract":"<p>Downloads the avatar for a user.</p>","parent_name":"ZDCDownloadManager"},"Classes/ZDCDownloadManager.html#/c:objc(cs)ZDCDownloadManager(im)downloadUserAvatar:identityID:completionQueue:completionBlock:":{"name":"-downloadUserAvatar:identityID:completionQueue:completionBlock:","abstract":"<p>Downloads the avatar for a user.</p>","parent_name":"ZDCDownloadManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(py)maxNodeDataCacheSize":{"name":"maxNodeDataCacheSize","abstract":"<p>Allows you to configure the max size of the <q>storage pool</q> for cached (non-persistent) nodeData files.</p>","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(py)maxNodeThumbnailsCacheSize":{"name":"maxNodeThumbnailsCacheSize","abstract":"<p>Allows you to configure the max size of the <q>storage pool</q> for cached (non-persistent) nodeThumbnail files.</p>","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(py)maxUserAvatarsCacheSize":{"name":"maxUserAvatarsCacheSize","abstract":"<p>Allows you to configure the max size of the <q>storage pool</q> for cached (non-persistent) userAvatar files.</p>","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(py)defaultNodeDataCacheExpiration":{"name":"defaultNodeDataCacheExpiration","abstract":"<p>Allows you to configure a default expiration interval for cached (non-persistent) nodeData files,","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(py)defaultNodeThumbnailCacheExpiration":{"name":"defaultNodeThumbnailCacheExpiration","abstract":"<p>Allows you to configure a default expiration interval for cached (non-persistent) nodeThumbnail files,","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(py)defaultUserAvatarCacheExpiration":{"name":"defaultUserAvatarCacheExpiration","abstract":"<p>Allows you to configure a default expiration interval for cached (non-persistent) userAvatar files,","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(im)importNodeData:forNode:error:":{"name":"-importNodeData:forNode:error:","abstract":"<p>This method is designed to take an import, migrate it to an encrypted format,","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(im)hasNodeData:":{"name":"-hasNodeData:","abstract":"<p>Returns whether or not the DiskManager currently has a data file for the given node.</p>","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(im)nodeData:":{"name":"-nodeData:","abstract":"<p>Exports the CryptoFile and associated info for the node&rsquo;s data, if available on disk.","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(im)nodeData:preferredFormat:":{"name":"-nodeData:preferredFormat:","abstract":"<p>Returns a CryptoFile and associated info for the node&rsquo;s data, if available on disk.","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(im)deleteNodeData:":{"name":"-deleteNodeData:","abstract":"<p>Deletes data files for the given nodeID from disk.</p>","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(im)deleteNodeDataForNodeIDs:":{"name":"-deleteNodeDataForNodeIDs:","abstract":"<p>Deletes data files for the given nodeIDs from disk.</p>","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(im)makeNodeDataPersistent:forNodeID:":{"name":"-makeNodeDataPersistent:forNodeID:","abstract":"<p>Migrates node data files between persistent &amp; non-persistent.</p>","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(im)importNodeThumbnail:forNode:error:":{"name":"-importNodeThumbnail:forNode:error:","abstract":"<p>This method is designed to take a downloaded thumbnail and store it to disk","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(im)hasNodeThumbnail:":{"name":"-hasNodeThumbnail:","abstract":"<p>Returns whether or not the DiskManager currently has a thumbnail for the given node.</p>","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(im)nodeThumbnail:":{"name":"-nodeThumbnail:","abstract":"<p>Returns a CryptoFile and associated info for the node&rsquo;s thumbnail, if available on disk.","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(im)deleteNodeThumbnail:":{"name":"-deleteNodeThumbnail:","abstract":"<p>Deletes thumbnail files for the given nodeID from disk.</p>","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(im)deleteNodeThumbnailsForNodeIDs:":{"name":"-deleteNodeThumbnailsForNodeIDs:","abstract":"<p>Deletes thumbnail files for the given nodeID&rsquo;s from disk.</p>","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(im)makeNodeThumbnailPersistent:forNodeID:":{"name":"-makeNodeThumbnailPersistent:forNodeID:","abstract":"<p>Migrates node thumbnail files between persistent &amp; non-persistent.</p>","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(im)importUserAvatar:forUser:identityID:error:":{"name":"-importUserAvatar:forUser:identityID:error:","abstract":"<p>This method is designed to take a CryptoFile that&rsquo;s stored in a temp location,","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(im)hasUserAvatar:":{"name":"-hasUserAvatar:","abstract":"<p>Returns whether or not the DiskManager currently has any avatars for the given user.</p>","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(im)hasUserAvatar:forIdentityID:":{"name":"-hasUserAvatar:forIdentityID:","abstract":"<p>Returns whether or not the DiskManager currently has an avatar for the given {userID, auth0ID} tuple.","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(im)storedIdentityIDs:":{"name":"-storedIdentityIDs:","abstract":"<p>Returns the list of identityID&rsquo;s for which we have a stored user avatar within the DiskManager.</p>","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(im)userAvatar:":{"name":"-userAvatar:","abstract":"<p>Returns a CryptoFile and associated info for the user avatar, if available on disk.","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(im)userAvatar:forIdentityID:":{"name":"-userAvatar:forIdentityID:","abstract":"<p>Returns a CryptoFile and associated info for the user avatar, if available on disk.","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(im)deleteUserAvatar:":{"name":"-deleteUserAvatar:","abstract":"<p>Deletes all avatar files for the given userID from disk.</p>","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(im)deleteUserAvatarsForUserIDs:":{"name":"-deleteUserAvatarsForUserIDs:","abstract":"<p>Deletes avatar files for the given userID&rsquo;s from disk.</p>","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(im)deleteUserAvatar:forIdentityID:":{"name":"-deleteUserAvatar:forIdentityID:","abstract":"<p>Deletes the avatar file(s) for the given {userID, identityID} tuple from disk.</p>","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(im)makeUserAvatarPersistent:forUserID:":{"name":"-makeUserAvatarPersistent:forUserID:","abstract":"<p>Migrates user avatar files between persistent &amp; non-persistent.</p>","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(im)storageSizeForAllNodeData":{"name":"-storageSizeForAllNodeData","abstract":"<p>Returns the total size (summation) of all nodeData files on disk","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(im)storageSizeForPersistentNodeData":{"name":"-storageSizeForPersistentNodeData","abstract":"<p>Returns the total size (summation) of all persistent nodeData files on disk","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(im)storageSizeForCachedNodeData":{"name":"-storageSizeForCachedNodeData","abstract":"<p>Returns the total size (summation) of all cached (non-persistent) nodeData files on disk","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(im)storageSizeForAllNodeThumbnails":{"name":"-storageSizeForAllNodeThumbnails","abstract":"<p>Returns the total size (summation) of all nodeThumbnail files on disk","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(im)storageSizeForPersistentNodeThumbnail":{"name":"-storageSizeForPersistentNodeThumbnail","abstract":"<p>Returns the total size (summation) of all persistent nodeThumbnail files on disk","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(im)storageSizeForCachedNodeThumbnails":{"name":"-storageSizeForCachedNodeThumbnails","abstract":"<p>Returns the total size (summation) of all cached (non-persistent) nodeThumbnail files on disk","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(im)storageSizeForAllUserAvatars":{"name":"-storageSizeForAllUserAvatars","abstract":"<p>Returns the total size (summation) of all userAvatar files on disk","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(im)storageSizeForPersistentUserAvatars":{"name":"-storageSizeForPersistentUserAvatars","abstract":"<p>Returns the total size (summation) of all persistent userAvatar files on disk","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(im)storageSizeForCachedUserAvatars":{"name":"-storageSizeForCachedUserAvatars","abstract":"<p>Returns the total size (summation) of all cached (non-persistent) userAvatar files on disk","parent_name":"ZDCDiskManager"},"Classes/ZDCDiskManager.html#/c:objc(cs)ZDCDiskManager(im)deleteFileIfUnmanaged:":{"name":"-deleteFileIfUnmanaged:","abstract":"<p>Deletes the given file from the filesystem, so long as it&rsquo;s not being managed by the DiskManager.</p>","parent_name":"ZDCDiskManager"},"Classes/ZDCDirectoryManager.html#/c:objc(cs)ZDCDirectoryManager(cm)appSupportDirectoryURL":{"name":"+appSupportDirectoryURL","abstract":"<p>The typical <q>Application Support</q> directory for the app.</p>","parent_name":"ZDCDirectoryManager"},"Classes/ZDCDirectoryManager.html#/c:objc(cs)ZDCDirectoryManager(cm)appCacheDirectoryURL":{"name":"+appCacheDirectoryURL","abstract":"<p>The typical <q>Cache</q> directory for the app.</p>","parent_name":"ZDCDirectoryManager"},"Classes/ZDCDirectoryManager.html#/c:objc(cs)ZDCDirectoryManager(cm)tempDirectoryURL":{"name":"+tempDirectoryURL","abstract":"<p>The typical <q>Temp</q> directory for the app.</p>","parent_name":"ZDCDirectoryManager"},"Classes/ZDCDirectoryManager.html#/c:objc(cs)ZDCDirectoryManager(cm)zdcPersistentDirectoryURL":{"name":"+zdcPersistentDirectoryURL","abstract":"<p>The ZeroDarkCloud framework attempts to keep all stored files within a few <q>zdc</q> folders.","parent_name":"ZDCDirectoryManager"},"Classes/ZDCDirectoryManager.html#/c:objc(cs)ZDCDirectoryManager(cm)zdcCacheDirectoryURL":{"name":"+zdcCacheDirectoryURL","abstract":"<p>The ZeroDarkCloud framework attempts to keep all stored files within a few <q>zdc</q> folders.","parent_name":"ZDCDirectoryManager"},"Classes/ZDCDirectoryManager.html#/c:objc(cs)ZDCDirectoryManager(cm)zdcDatabaseDirectoryURL":{"name":"+zdcDatabaseDirectoryURL","abstract":"<p>The ZeroDarkCloud framework attempts to keep all stored files within a few <q>zdc</q> folders.","parent_name":"ZDCDirectoryManager"},"Classes/ZDCDirectoryManager.html#/c:objc(cs)ZDCDirectoryManager(cm)zdcPersistentDataDirectoryForDatabaseName:":{"name":"+zdcPersistentDataDirectoryForDatabaseName:","abstract":"<p>The ZeroDarkCloud framework attempts to keep all stored files within a few <q>zdc</q> folders.","parent_name":"ZDCDirectoryManager"},"Classes/ZDCDirectoryManager.html#/c:objc(cs)ZDCDirectoryManager(cm)zdcCacheDataDirectoryForDatabaseName:":{"name":"+zdcCacheDataDirectoryForDatabaseName:","abstract":"<p>The ZeroDarkCloud framework attempts to keep all stored files within a few <q>zdc</q> folders.","parent_name":"ZDCDirectoryManager"},"Classes/ZDCDirectoryManager.html#/c:objc(cs)ZDCDirectoryManager(cm)fileURLsForDatabaseName:":{"name":"+fileURLsForDatabaseName:","abstract":"<p>Sqlite creates multiple files for each database.","parent_name":"ZDCDirectoryManager"},"Classes/ZDCDirectoryManager.html#/c:objc(cs)ZDCDirectoryManager(cm)smiCacheDirectoryURL":{"name":"+smiCacheDirectoryURL","abstract":"<p>Social Media Icons cache directory.</p>","parent_name":"ZDCDirectoryManager"},"Classes/ZDCDirectoryManager.html#/c:objc(cs)ZDCDirectoryManager(cm)emptyUploadFileURL":{"name":"+emptyUploadFileURL","abstract":"<p>Background NSURLSession&rsquo;s only support download &amp; upload tasks.","parent_name":"ZDCDirectoryManager"},"Classes/ZDCDirectoryManager.html#/c:objc(cs)ZDCDirectoryManager(cm)generateTempURL":{"name":"+generateTempURL","abstract":"<p>Generates a random fileName (using a UUID), and returns a fileURL for it within the tempDirectory.</p>","parent_name":"ZDCDirectoryManager"},"Classes/ZDCDirectoryManager.html#/c:objc(cs)ZDCDirectoryManager(im)downloadDirectoryURL":{"name":"-downloadDirectoryURL","abstract":"<p>A common download directory used by the framework.","parent_name":"ZDCDirectoryManager"},"Classes/ZDCDirectoryManager.html#/c:objc(cs)ZDCDirectoryManager(im)generateDownloadURL":{"name":"-generateDownloadURL","abstract":"<p>Generates a random fileName (using a UUID), and returns a fileURL for it.","parent_name":"ZDCDirectoryManager"},"Classes/ZDCDirectoryManager.html#/c:objc(cs)ZDCDirectoryManager(cm)bundleIdentifier":{"name":"+bundleIdentifier","abstract":"<p>Extracted from main NSBundle using key <code>kCFBundleIdentifierKey</code>.</p>","parent_name":"ZDCDirectoryManager"},"Classes/ZDCDirectoryManager.html#/c:objc(cs)ZDCDirectoryManager(cm)bundleName":{"name":"+bundleName","abstract":"<p>Extracted from main NSBundle using key <code>kCFBundleNameKey</code>.</p>","parent_name":"ZDCDirectoryManager"},"Classes/ZDCDatabaseKeyManager.html#/c:objc(cs)ZDCDatabaseKeyManager(py)isConfigured":{"name":"isConfigured","abstract":"<p>Returns NO/false if the database hasn&rsquo;t been setup yet.","parent_name":"ZDCDatabaseKeyManager"},"Classes/ZDCDatabaseKeyManager.html#/c:objc(cs)ZDCDatabaseKeyManager(py)usesKeychainKey":{"name":"usesKeychainKey","abstract":"<p>Returns YES/true if the PBKDF2 file exists, and can be decrypted using a key stored in the OS keychain.</p>","parent_name":"ZDCDatabaseKeyManager"},"Classes/ZDCDatabaseKeyManager.html#/c:objc(cs)ZDCDatabaseKeyManager(py)usesPassphrase":{"name":"usesPassphrase","abstract":"<p>Returns YES/true if the PBKDF2 file exists, and can be decrypted using a passphrase.</p>","parent_name":"ZDCDatabaseKeyManager"},"Classes/ZDCDatabaseKeyManager.html#/c:objc(cs)ZDCDatabaseKeyManager(py)usesBioMetrics":{"name":"usesBioMetrics","abstract":"<p>Returns YES/true if the PBKDF2 file exists, and can be decrypted using biometrics.</p>","parent_name":"ZDCDatabaseKeyManager"},"Classes/ZDCDatabaseKeyManager.html#/c:objc(cs)ZDCDatabaseKeyManager(py)canUseBioMetrics":{"name":"canUseBioMetrics","abstract":"<p>Returns YES/true if biometrics are available on the current device.</p>","parent_name":"ZDCDatabaseKeyManager"},"Classes/ZDCDatabaseKeyManager.html#/c:objc(cs)ZDCDatabaseKeyManager(py)canUseTouchID":{"name":"canUseTouchID","abstract":"<p>Returns YES/true if TouchID is available on the current device.</p>","parent_name":"ZDCDatabaseKeyManager"},"Classes/ZDCDatabaseKeyManager.html#/c:objc(cs)ZDCDatabaseKeyManager(py)canUseFaceID":{"name":"canUseFaceID","abstract":"<p>Returns YES/true if FaceID is available on the current device.</p>","parent_name":"ZDCDatabaseKeyManager"},"Classes/ZDCDatabaseKeyManager.html#/c:objc(cs)ZDCDatabaseKeyManager(im)createKeychainEntry:":{"name":"-createKeychainEntry:","abstract":"<p>Creates an entry in the PBKDF2 file, and a corresponding entry in the OS keychain.</p>","parent_name":"ZDCDatabaseKeyManager"},"Classes/ZDCDatabaseKeyManager.html#/c:objc(cs)ZDCDatabaseKeyManager(im)unlockUsingKeychain:":{"name":"-unlockUsingKeychain:","abstract":"<p>Attempts to unlock the PBKDF2 file using the passcode stored in the keychain.</p>","parent_name":"ZDCDatabaseKeyManager"},"Classes/ZDCDatabaseKeyManager.html#/c:objc(cs)ZDCDatabaseKeyManager(im)createPassphraseEntry:withHint:error:":{"name":"-createPassphraseEntry:withHint:error:","abstract":"<p>Creates an entry in the PBKDF2 file using the given passphrase.</p>","parent_name":"ZDCDatabaseKeyManager"},"Classes/ZDCDatabaseKeyManager.html#/c:objc(cs)ZDCDatabaseKeyManager(im)unlockUsingPassphase:error:":{"name":"-unlockUsingPassphase:error:","abstract":"<p>Attempts to unlock the PBKDF2 file using the given passphrase.</p>","parent_name":"ZDCDatabaseKeyManager"},"Classes/ZDCDatabaseKeyManager.html#/c:objc(cs)ZDCDatabaseKeyManager(im)passphraseHint":{"name":"-passphraseHint","abstract":"<p>Returns the passphrase hint.","parent_name":"ZDCDatabaseKeyManager"},"Classes/ZDCDatabaseKeyManager.html#/c:objc(cs)ZDCDatabaseKeyManager(im)removePassphraseEntry:":{"name":"-removePassphraseEntry:","abstract":"<p>Removes the passphrase entry from the PBKDF2 file.</p>","parent_name":"ZDCDatabaseKeyManager"},"Classes/ZDCDatabaseKeyManager.html#/c:objc(cs)ZDCDatabaseKeyManager(im)createBiometricEntry:":{"name":"-createBiometricEntry:","abstract":"<p>Creates an entry in the PBKDF2 file that can be unlocked using biometric techniques provided by the device.</p>","parent_name":"ZDCDatabaseKeyManager"},"Classes/ZDCDatabaseKeyManager.html#/c:objc(cs)ZDCDatabaseKeyManager(im)unlockUsingBiometricWithPrompt:error:":{"name":"-unlockUsingBiometricWithPrompt:error:","abstract":"<p>Attempts to unlock the PBKDF2 file using biometric techniques provided by the device.</p>","parent_name":"ZDCDatabaseKeyManager"},"Classes/ZDCDatabaseKeyManager.html#/c:objc(cs)ZDCDatabaseKeyManager(im)removeBiometricEntry:":{"name":"-removeBiometricEntry:","abstract":"<p>Removes the passphrase entry from the PBKDF2 file.</p>","parent_name":"ZDCDatabaseKeyManager"},"Classes/ZDCDatabaseKeyManager.html#/c:objc(cs)ZDCDatabaseKeyManager(im)deleteAllPasscodeData":{"name":"-deleteAllPasscodeData","abstract":"<p>DANGER!!! This method deletes the PBKDF2 file.","parent_name":"ZDCDatabaseKeyManager"},"Classes/ZDCDatabaseManager.html#/c:objc(cs)ZDCDatabaseManager(py)database":{"name":"database","abstract":"<p>The root YapDatabase instance.","parent_name":"ZDCDatabaseManager"},"Classes/ZDCDatabaseManager.html#/c:objc(cs)ZDCDatabaseManager(py)uiDatabaseConnection":{"name":"uiDatabaseConnection","abstract":"<p>The UI connection is read-only, and is reserved for use EXCLUSIVELY on the MAIN THREAD.</p>","parent_name":"ZDCDatabaseManager"},"Classes/ZDCDatabaseManager.html#/c:objc(cs)ZDCDatabaseManager(py)roConnectionPool":{"name":"roConnectionPool","abstract":"<p>A read-only connection pool.","parent_name":"ZDCDatabaseManager"},"Classes/ZDCDatabaseManager.html#/c:objc(cs)ZDCDatabaseManager(py)roDatabaseConnection":{"name":"roDatabaseConnection","abstract":"<p>Read-only connection(s) are automatically vended from the roConnectionPool.","parent_name":"ZDCDatabaseManager"},"Classes/ZDCDatabaseManager.html#/c:objc(cs)ZDCDatabaseManager(py)rwDatabaseConnection":{"name":"rwDatabaseConnection","abstract":"<p>Read-write connection is reserved for write transactions.","parent_name":"ZDCDatabaseManager"},"Classes/ZDCDatabaseManager.html#/c:objc(cs)ZDCDatabaseManager(py)databaseConnectionProxy":{"name":"databaseConnectionProxy","abstract":"<p>Uses the roDatabaseConnection &amp; rwDatabaseConnection.</p>","parent_name":"ZDCDatabaseManager"},"Classes/ZDCDatabaseManager.html#/c:objc(cs)ZDCDatabaseManager(cm)groupForLocalUserID:treeID:":{"name":"+groupForLocalUserID:treeID:","abstract":"<p>For use within:</p>","parent_name":"ZDCDatabaseManager"},"Classes/ZDCDatabaseManager.html#/c:objc(cs)ZDCDatabaseManager(cm)groupForLocalUserID:region:bucket:treeID:dirPrefix:":{"name":"+groupForLocalUserID:region:bucket:treeID:dirPrefix:","abstract":"<p>For use within:</p>","parent_name":"ZDCDatabaseManager"},"Classes/ZDCDatabaseManager.html#/c:objc(cs)ZDCDatabaseManager(im)cloudExtNameForUserID:":{"name":"-cloudExtNameForUserID:","abstract":"<p>Returns the registered name of the ZDCCloud extension for the given localUserID.","parent_name":"ZDCDatabaseManager"},"Classes/ZDCDatabaseManager.html#/c:objc(cs)ZDCDatabaseManager(im)cloudExtNameForUserID:treeID:":{"name":"-cloudExtNameForUserID:treeID:","abstract":"<p>Returns the registered name of the ZDCCloud extension for the given <localUserID, treeID> tuple.","parent_name":"ZDCDatabaseManager"},"Classes/ZDCDatabaseManager.html#/c:objc(cs)ZDCDatabaseManager(im)cloudExtsForUserID:":{"name":"-cloudExtsForUserID:","abstract":"<p>Returns all registered ZDCCloud instances for the given account.</p>","parent_name":"ZDCDatabaseManager"},"Classes/ZDCDatabaseManager.html#/c:objc(cs)ZDCDatabaseManager(im)cloudExtForUserID:":{"name":"-cloudExtForUserID:","abstract":"<p>Returns the registered ZDCCloud instance for the given account.</p>","parent_name":"ZDCDatabaseManager"},"Classes/ZDCDatabaseManager.html#/c:objc(cs)ZDCDatabaseManager(im)cloudExtForUserID:treeID:":{"name":"-cloudExtForUserID:treeID:","abstract":"<p>Returns the registered ZDCCloud instance for the given account.</p>","parent_name":"ZDCDatabaseManager"},"Classes/ZDCDatabaseManager.html#/c:objc(cs)ZDCDatabaseManager(im)registerCloudExtensionForUserID:treeID:":{"name":"-registerCloudExtensionForUserID:treeID:","abstract":"<p>A separate ZDCCloud instance is registered for every account.</p>","parent_name":"ZDCDatabaseManager"},"Classes/ZDCDatabaseManager.html#/c:objc(cs)ZDCDatabaseManager(im)unregisterCloudExtensionForUserID:treeID:":{"name":"-unregisterCloudExtensionForUserID:treeID:","abstract":"<p>A separate ZDCCloud instance MUST be registered for every account.","parent_name":"ZDCDatabaseManager"},"Classes/ZDCCloudPathManager.html#/c:objc(cs)ZDCCloudPathManager(cm)sharedInstance":{"name":"+sharedInstance","abstract":"<p>Returns singleton instance.</p>","parent_name":"ZDCCloudPathManager"},"Classes/ZDCCloudPathManager.html#/c:objc(cs)ZDCCloudPathManager(im)cloudLocatorForNode:transaction:":{"name":"-cloudLocatorForNode:transaction:","abstract":"<p>Returns the cloud locator for the given node.</p>","parent_name":"ZDCCloudPathManager"},"Classes/ZDCCloudPathManager.html#/c:objc(cs)ZDCCloudPathManager(im)cloudLocatorForNode:fileExtension:transaction:":{"name":"-cloudLocatorForNode:fileExtension:transaction:","abstract":"<p>Returns the cloud locator for the given node.</p>","parent_name":"ZDCCloudPathManager"},"Classes/ZDCCloudPathManager.html#/c:objc(cs)ZDCCloudPathManager(im)cloudLocatorForName:parentNode:fileExtension:transaction:":{"name":"-cloudLocatorForName:parentNode:fileExtension:transaction:","abstract":"<p>Returns the cloud locator for a theoretical child node with the given name.</p>","parent_name":"ZDCCloudPathManager"},"Classes/ZDCCloudPathManager.html#/c:objc(cs)ZDCCloudPathManager(im)cloudPathForNode:transaction:":{"name":"-cloudPathForNode:transaction:","abstract":"<p>Returns the cloudPath for the node.","parent_name":"ZDCCloudPathManager"},"Classes/ZDCCloudPathManager.html#/c:objc(cs)ZDCCloudPathManager(im)cloudPathForNode:fileExtension:transaction:":{"name":"-cloudPathForNode:fileExtension:transaction:","abstract":"<p>Returns the cloud path for the node.</p>","parent_name":"ZDCCloudPathManager"},"Classes/ZDCCloudPathManager.html#/c:objc(cs)ZDCCloudPathManager(im)cloudPathForName:parentNode:fileExtension:transaction:":{"name":"-cloudPathForName:parentNode:fileExtension:transaction:","abstract":"<p>Returns the cloud path for a theoretical child node with the given name.</p>","parent_name":"ZDCCloudPathManager"},"Classes/ZDCCloudPathManager.html#/c:objc(cs)ZDCCloudPathManager(im)cloudNameForNode:transaction:":{"name":"-cloudNameForNode:transaction:","abstract":"<p>Calculates &amp; returns the cloudName for the given node.</p>","parent_name":"ZDCCloudPathManager"},"Classes/ZDCCloudPathManager.html":{"name":"ZDCCloudPathManager","abstract":"<p>The ZeroDark.cloud framework encrypts node-names before storing them in the cloud."},"Classes/ZDCDatabaseManager.html":{"name":"ZDCDatabaseManager","abstract":"<p>ZeroDarkCloud requires a database for atomic operations."},"Classes/ZDCDatabaseKeyManager.html":{"name":"ZDCDatabaseKeyManager","abstract":"<p>This class provides optional tools for securely storing &amp; retrieving the key"},"Classes/ZDCDirectoryManager.html":{"name":"ZDCDirectoryManager","abstract":"<p>Simple utility class to provide standardized URL&rsquo;s for common local directories &amp; for temp files.</p>"},"Classes/ZDCDiskManager.html":{"name":"ZDCDiskManager","abstract":"<p>The DiskManager simplifies the process of persisting &amp; caching files to disk.</p>"},"Classes/ZDCDownloadManager.html":{"name":"ZDCDownloadManager","abstract":"<p>The DownloadManager is your one-stop-shop for downloading data from the cloud.</p>"},"Classes/ZDCImageManager.html":{"name":"ZDCImageManager","abstract":"<p>The ImageManager simplifies the process of fetching, downloading &amp; resizing images."},"Classes/ZDCLocalUserManager.html":{"name":"ZDCLocalUserManager","abstract":"<p>The LocalUserManager simplifies many aspects of determining sync state.</p>"},"Classes/ZDCNodeManager.html":{"name":"ZDCNodeManager","abstract":"<p>Provides various methods for inspecting the node treesystem.</p>"},"Classes/ZDCProgressManager.html":{"name":"ZDCProgressManager","abstract":"<p>The ProgressManager provides real-time progress information for active operations.</p>"},"Classes/ZDCPullManager.html":{"name":"ZDCPullManager","abstract":"<p>The PullManager handles pulling changes down from the cloud.</p>"},"Classes/ZDCPushManager.html":{"name":"ZDCPushManager","abstract":"<p>The PushManager handles pushing changes up to the cloud.</p>"},"Classes/ZDCRestManager.html":{"name":"ZDCRestManager","abstract":"<p>Facilitates access to the REST API of the ZeroDark.cloud servers.</p>"},"Classes/ZDCSyncManager.html":{"name":"ZDCSyncManager","abstract":"<p>The SyncManager simplifies many aspects of determining sync state.</p>"},"Classes/ZDCUITools.html":{"name":"ZDCUITools","abstract":"<p>The ZDCUITools is a series of functions that simpily the user interface needed for"},"Classes/ZDCUserManager.html":{"name":"ZDCUserManager","abstract":"<p>The UserManager handles various tasks involving ZDCUser&rsquo;s.</p>"},"Classes/ZDCUserSearchManager.html":{"name":"ZDCUserSearchManager","abstract":"<p>The SearchManager allows you to search for other users within the system.</p>"},"Classes/ZDCTreesystemPath.html#/c:objc(cs)ZDCTreesystemPath(im)initWithPathComponents:":{"name":"-initWithPathComponents:","abstract":"<p>Constructs a path from the given components in the home container.</p>","parent_name":"ZDCTreesystemPath"},"Classes/ZDCTreesystemPath.html#/c:objc(cs)ZDCTreesystemPath(im)initWithPathComponents:trunk:":{"name":"-initWithPathComponents:trunk:","abstract":"<p>Creates a path with the given components in the given trunk.</p>","parent_name":"ZDCTreesystemPath"},"Classes/ZDCTreesystemPath.html#/c:objc(cs)ZDCTreesystemPath(py)trunk":{"name":"trunk","abstract":"<p>The trunk (top-level root node) in which the path is rooted.","parent_name":"ZDCTreesystemPath"},"Classes/ZDCTreesystemPath.html#/c:objc(cs)ZDCTreesystemPath(py)pathComponents":{"name":"pathComponents","abstract":"<p>An array of node-names, leading from the container node to the target node.</p>","parent_name":"ZDCTreesystemPath"},"Classes/ZDCTreesystemPath.html#/c:objc(cs)ZDCTreesystemPath(py)nodeName":{"name":"nodeName","abstract":"<p>Returns the name of the target node.","parent_name":"ZDCTreesystemPath"},"Classes/ZDCTreesystemPath.html#/c:objc(cs)ZDCTreesystemPath(py)isTrunk":{"name":"isTrunk","abstract":"<p>Returns YES if the path represents the root node (i.e. the trunk itself).","parent_name":"ZDCTreesystemPath"},"Classes/ZDCTreesystemPath.html#/c:objc(cs)ZDCTreesystemPath(im)relativePath":{"name":"-relativePath","abstract":"<p>Returns the pathComponents, joined using the separator &lsquo;/&rsquo;.","parent_name":"ZDCTreesystemPath"},"Classes/ZDCTreesystemPath.html#/c:objc(cs)ZDCTreesystemPath(im)fullPath":{"name":"-fullPath","abstract":"<p>Returns the container, plus the relativePath.","parent_name":"ZDCTreesystemPath"},"Classes/ZDCTreesystemPath.html#/c:objc(cs)ZDCTreesystemPath(im)parentPath":{"name":"-parentPath","abstract":"<p>Returns the parent&rsquo;s path by removing the last item from the pathComponents array.","parent_name":"ZDCTreesystemPath"},"Classes/ZDCTreesystemPath.html#/c:objc(cs)ZDCTreesystemPath(im)pathByAppendingComponent:":{"name":"-pathByAppendingComponent:","abstract":"<p>Returns a new path instance with the given component appended to the end.</p>","parent_name":"ZDCTreesystemPath"},"Classes/ZDCData.html#/c:objc(cs)ZDCData(im)initWithData:":{"name":"-initWithData:","abstract":"<p>Creates an instance with the given data.","parent_name":"ZDCData"},"Classes/ZDCData.html#/c:objc(cs)ZDCData(im)initWithCleartextFileURL:":{"name":"-initWithCleartextFileURL:","abstract":"<p>Creates an instance with the given cleartext (non-encrypted) file.","parent_name":"ZDCData"},"Classes/ZDCData.html#/c:objc(cs)ZDCData(im)initWithCryptoFile:":{"name":"-initWithCryptoFile:","abstract":"<p>Creates an instance with the given encrypted file.","parent_name":"ZDCData"},"Classes/ZDCData.html#/c:objc(cs)ZDCData(im)initWithPromise:":{"name":"-initWithPromise:","abstract":"<p>Creates an instance designed to deliver the data in an asynchronous fashion.","parent_name":"ZDCData"},"Classes/ZDCData.html#/c:objc(cs)ZDCData(py)data":{"name":"data","abstract":"<p>Returns non-nil if the <code>initWithData:</code> constructor was used.</p>","parent_name":"ZDCData"},"Classes/ZDCData.html#/c:objc(cs)ZDCData(py)cleartextFileURL":{"name":"cleartextFileURL","abstract":"<p>Returns non-nil if the <code>initWithCleartextFileURL:</code> constructor was used.</p>","parent_name":"ZDCData"},"Classes/ZDCData.html#/c:objc(cs)ZDCData(py)cryptoFile":{"name":"cryptoFile","abstract":"<p>Returns non-nil if the <code>initWithCryptoFile:</code> constructor was used.</p>","parent_name":"ZDCData"},"Classes/ZDCData.html#/c:objc(cs)ZDCData(py)promise":{"name":"promise","abstract":"<p>Returns non-nil if the <code>initAsPromise</code> constructor was used.</p>","parent_name":"ZDCData"},"Classes/ZDCData.html#/c:objc(cs)ZDCData(py)isLatestVersion":{"name":"isLatestVersion","abstract":"<p>ZeroDark uses a persistent queue to track which nodes need to be uploaded.","parent_name":"ZDCData"},"Classes/ZDCCryptoFile.html#/c:objc(cs)ZDCCryptoFile(im)initWithFileURL:fileFormat:encryptionKey:retainToken:":{"name":"-initWithFileURL:fileFormat:encryptionKey:retainToken:","abstract":"<p>Designated initializer</p>","parent_name":"ZDCCryptoFile"},"Classes/ZDCCryptoFile.html#/c:objc(cs)ZDCCryptoFile(py)fileURL":{"name":"fileURL","abstract":"<p>The location of the file on disk.</p>","parent_name":"ZDCCryptoFile"},"Classes/ZDCCryptoFile.html#/c:objc(cs)ZDCCryptoFile(py)fileFormat":{"name":"fileFormat","abstract":"<p>The encryption format being used to store the file.</p>","parent_name":"ZDCCryptoFile"},"Classes/ZDCCryptoFile.html#/c:objc(cs)ZDCCryptoFile(py)encryptionKey":{"name":"encryptionKey","abstract":"<p>The encryption key used to encrypt/decrypt the file.","parent_name":"ZDCCryptoFile"},"Classes/ZDCCryptoFile.html#/c:objc(cs)ZDCCryptoFile(py)retainToken":{"name":"retainToken","abstract":"<p>If the file is being managed by the DiskManager, the retainToken may be non-nil.</p>","parent_name":"ZDCCryptoFile"},"Protocols/ZeroDarkCloudDelegate.html#/c:objc(pl)ZeroDarkCloudDelegate(im)dataForNode:atPath:transaction:":{"name":"-dataForNode:atPath:transaction:","abstract":"<p>When the PushManager is ready to upload a node, it uses this method to request the node&rsquo;s data.</p>","parent_name":"ZeroDarkCloudDelegate"},"Protocols/ZeroDarkCloudDelegate.html#/c:objc(pl)ZeroDarkCloudDelegate(im)metadataForNode:atPath:transaction:":{"name":"-metadataForNode:atPath:transaction:","abstract":"<p>When the PushManager is ready to upload a node, it uses this method request the node&rsquo;s optional metadata.</p>","parent_name":"ZeroDarkCloudDelegate"},"Protocols/ZeroDarkCloudDelegate.html#/c:objc(pl)ZeroDarkCloudDelegate(im)thumbnailForNode:atPath:transaction:":{"name":"-thumbnailForNode:atPath:transaction:","abstract":"<p>When the PushManager is ready to upload a node, it uses this method to request the node&rsquo;s optional thumbnail.</p>","parent_name":"ZeroDarkCloudDelegate"},"Protocols/ZeroDarkCloudDelegate.html#/c:objc(pl)ZeroDarkCloudDelegate(im)didPushNodeData:atPath:transaction:":{"name":"-didPushNodeData:atPath:transaction:","abstract":"<p>This method is called by the framework after a node&rsquo;s data has been pushed to the cloud.</p>","parent_name":"ZeroDarkCloudDelegate"},"Protocols/ZeroDarkCloudDelegate.html#/c:objc(pl)ZeroDarkCloudDelegate(im)dataForMessage:transaction:":{"name":"-dataForMessage:transaction:","abstract":"<p>When the PushManager is ready to send an outgoing message, it uses this method to request the message data.</p>","parent_name":"ZeroDarkCloudDelegate"},"Protocols/ZeroDarkCloudDelegate.html#/c:objc(pl)ZeroDarkCloudDelegate(im)didSendMessage:toRecipient:transaction:":{"name":"-didSendMessage:toRecipient:transaction:","abstract":"<p>This method is called by the framework after a message has been sent.</p>","parent_name":"ZeroDarkCloudDelegate"},"Protocols/ZeroDarkCloudDelegate.html#/c:objc(pl)ZeroDarkCloudDelegate(im)didDiscoverNewNode:atPath:transaction:":{"name":"-didDiscoverNewNode:atPath:transaction:","abstract":"<p>This method is called by the framework when a new node has been discovered in the cloud.</p>","parent_name":"ZeroDarkCloudDelegate"},"Protocols/ZeroDarkCloudDelegate.html#/c:objc(pl)ZeroDarkCloudDelegate(im)didDiscoverModifiedNode:withChange:atPath:transaction:":{"name":"-didDiscoverModifiedNode:withChange:atPath:transaction:","abstract":"<p>This method is called by the framework when a node is discovered to have been modified in the cloud.</p>","parent_name":"ZeroDarkCloudDelegate"},"Protocols/ZeroDarkCloudDelegate.html#/c:objc(pl)ZeroDarkCloudDelegate(im)didDiscoverMovedNode:from:to:transaction:":{"name":"-didDiscoverMovedNode:from:to:transaction:","abstract":"<p>Invoked when the system discovers that a node was moved and/or renamed.</p>","parent_name":"ZeroDarkCloudDelegate"},"Protocols/ZeroDarkCloudDelegate.html#/c:objc(pl)ZeroDarkCloudDelegate(im)didDiscoverDeletedNode:atPath:timestamp:transaction:":{"name":"-didDiscoverDeletedNode:atPath:timestamp:transaction:","abstract":"<p>Invoked when the system discovers that a node has been deleted from the cloud.</p>","parent_name":"ZeroDarkCloudDelegate"},"Protocols/ZeroDarkCloudDelegate.html#/c:objc(pl)ZeroDarkCloudDelegate(im)didDiscoverDeletedDirtyNode:dirtyAncestors:timestamp:transaction:":{"name":"-didDiscoverDeletedDirtyNode:dirtyAncestors:timestamp:transaction:","abstract":"<p>This (optional) method is called when:</p>","parent_name":"ZeroDarkCloudDelegate"},"Protocols/ZeroDarkCloudDelegate.html#/c:objc(pl)ZeroDarkCloudDelegate(im)didDiscoverConflict:forNode:atPath:transaction:":{"name":"-didDiscoverConflict:forNode:atPath:transaction:","abstract":"<p>Invoked when a conflict is detected.</p>","parent_name":"ZeroDarkCloudDelegate"},"Protocols/ZeroDarkCloudDelegate.html#/c:objc(pl)ZeroDarkCloudDelegate(im)didBackgroundDownloadNodeMeta:atPath:withComponents:header:metadata:thumbnail:":{"name":"-didBackgroundDownloadNodeMeta:atPath:withComponents:header:metadata:thumbnail:","abstract":"<p>Background downloads can be tricky - and this delegate method is for an edge case.</p>","parent_name":"ZeroDarkCloudDelegate"},"Protocols/ZeroDarkCloudDelegate.html#/c:objc(pl)ZeroDarkCloudDelegate(im)didBackgroundDownloadNodeData:atPath:withCryptoFile:":{"name":"-didBackgroundDownloadNodeData:atPath:withCryptoFile:","abstract":"<p>Background downloads can be tricky - and this delegate method is for an edge case.</p>","parent_name":"ZeroDarkCloudDelegate"},"Protocols/ZeroDarkCloudDelegate.html#/c:objc(pl)ZeroDarkCloudDelegate(im)preferredNodeIDsForPullingRcrds":{"name":"-preferredNodeIDsForPullingRcrds","abstract":"<p>The PullManager automatically downloads the tree hierarchy, sans data.","parent_name":"ZeroDarkCloudDelegate"},"Classes/ZeroDarkCloud.html#/c:objc(cs)ZeroDarkCloud(im)initWithDelegate:config:":{"name":"-initWithDelegate:config:","abstract":"<p>Initializes an instance for use within your app.</p>","parent_name":"ZeroDarkCloud"},"Classes/ZeroDarkCloud.html#/c:objc(cs)ZeroDarkCloud(py)delegate":{"name":"delegate","abstract":"<p>The delegate specified during initialization</p>","parent_name":"ZeroDarkCloud"},"Classes/ZeroDarkCloud.html#/c:objc(cs)ZeroDarkCloud(py)databasePath":{"name":"databasePath","abstract":"<p>The databasePath specified during initialization.","parent_name":"ZeroDarkCloud"},"Classes/ZeroDarkCloud.html#/c:objc(cs)ZeroDarkCloud(py)primaryTreeID":{"name":"primaryTreeID","abstract":"<p>The primary treeID for this application.","parent_name":"ZeroDarkCloud"},"Classes/ZeroDarkCloud.html#/c:objc(cs)ZeroDarkCloud(py)reachability":{"name":"reachability","abstract":"<p>A reference to AFNetworkReachabilityManager.sharedManager.</p>","parent_name":"ZeroDarkCloud"},"Classes/ZeroDarkCloud.html#/c:objc(cs)ZeroDarkCloud(py)isDatabaseUnlocked":{"name":"isDatabaseUnlocked","abstract":"<p>The ZeroDarkCloud framework stores data on the local device in a database.","parent_name":"ZeroDarkCloud"},"Classes/ZeroDarkCloud.html#/c:objc(cs)ZeroDarkCloud(im)unlockOrCreateDatabase:error:":{"name":"-unlockOrCreateDatabase:error:","abstract":"<p>Attempts to unlock the database file using the given key.","parent_name":"ZeroDarkCloud"},"Classes/ZeroDarkCloud.html#/c:objc(cs)ZeroDarkCloud(py)cloudPathManager":{"name":"cloudPathManager","abstract":"<p>The functionality of ZeroDarkCloud is split into multiple managers, separated by task.</p>","parent_name":"ZeroDarkCloud"},"Classes/ZeroDarkCloud.html#/c:objc(cs)ZeroDarkCloud(py)databaseKeyManager":{"name":"databaseKeyManager","abstract":"<p>The functionality of ZeroDarkCloud is split into multiple managers, separated by task.</p>","parent_name":"ZeroDarkCloud"},"Classes/ZeroDarkCloud.html#/c:objc(cs)ZeroDarkCloud(py)directoryManager":{"name":"directoryManager","abstract":"<p>The functionality of ZeroDarkCloud is split into multiple managers, separated by task.</p>","parent_name":"ZeroDarkCloud"},"Classes/ZeroDarkCloud.html#/c:objc(cs)ZeroDarkCloud(py)nodeManager":{"name":"nodeManager","abstract":"<p>The functionality of ZeroDarkCloud is split into multiple managers, separated by task.</p>","parent_name":"ZeroDarkCloud"},"Classes/ZeroDarkCloud.html#/c:objc(cs)ZeroDarkCloud(py)progressManager":{"name":"progressManager","abstract":"<p>The functionality of ZeroDarkCloud is split into multiple managers, separated by task.</p>","parent_name":"ZeroDarkCloud"},"Classes/ZeroDarkCloud.html#/c:objc(cs)ZeroDarkCloud(py)databaseManager":{"name":"databaseManager","abstract":"<p>The functionality of ZeroDarkCloud is split into multiple managers, separated by task.","parent_name":"ZeroDarkCloud"},"Classes/ZeroDarkCloud.html#/c:objc(cs)ZeroDarkCloud(py)diskManager":{"name":"diskManager","abstract":"<p>The functionality of ZeroDarkCloud is split into multiple managers, separated by task.","parent_name":"ZeroDarkCloud"},"Classes/ZeroDarkCloud.html#/c:objc(cs)ZeroDarkCloud(py)downloadManager":{"name":"downloadManager","abstract":"<p>The functionality of ZeroDarkCloud is split into multiple managers, separated by task.","parent_name":"ZeroDarkCloud"},"Classes/ZeroDarkCloud.html#/c:objc(cs)ZeroDarkCloud(py)imageManager":{"name":"imageManager","abstract":"<p>The functionality of ZeroDarkCloud is split into multiple managers, separated by task.","parent_name":"ZeroDarkCloud"},"Classes/ZeroDarkCloud.html#/c:objc(cs)ZeroDarkCloud(py)localUserManager":{"name":"localUserManager","abstract":"<p>The functionality of ZeroDarkCloud is split into multiple managers, separated by task.","parent_name":"ZeroDarkCloud"},"Classes/ZeroDarkCloud.html#/c:objc(cs)ZeroDarkCloud(py)pullManager":{"name":"pullManager","abstract":"<p>The functionality of ZeroDarkCloud is split into multiple managers, separated by task.","parent_name":"ZeroDarkCloud"},"Classes/ZeroDarkCloud.html#/c:objc(cs)ZeroDarkCloud(py)pushManager":{"name":"pushManager","abstract":"<p>The functionality of ZeroDarkCloud is split into multiple managers, separated by task.","parent_name":"ZeroDarkCloud"},"Classes/ZeroDarkCloud.html#/c:objc(cs)ZeroDarkCloud(py)restManager":{"name":"restManager","abstract":"<p>The functionality of ZeroDarkCloud is split into multiple managers, separated by task.","parent_name":"ZeroDarkCloud"},"Classes/ZeroDarkCloud.html#/c:objc(cs)ZeroDarkCloud(py)searchManager":{"name":"searchManager","abstract":"<p>The functionality of ZeroDarkCloud is split into multiple managers, separated by task.","parent_name":"ZeroDarkCloud"},"Classes/ZeroDarkCloud.html#/c:objc(cs)ZeroDarkCloud(py)syncManager":{"name":"syncManager","abstract":"<p>The functionality of ZeroDarkCloud is split into multiple managers, separated by task.","parent_name":"ZeroDarkCloud"},"Classes/ZeroDarkCloud.html#/c:objc(cs)ZeroDarkCloud(py)userManager":{"name":"userManager","abstract":"<p>The functionality of ZeroDarkCloud is split into multiple managers, separated by task.","parent_name":"ZeroDarkCloud"},"Classes/ZeroDarkCloud.html#/c:objc(cs)ZeroDarkCloud(py)uiTools":{"name":"uiTools","abstract":"<p>The functionality of ZeroDarkCloud is split into multiple managers, separated by task.","parent_name":"ZeroDarkCloud"},"Classes/ZeroDarkCloud.html#/c:objc(cs)ZeroDarkCloud(im)cloudTransaction:forLocalUserID:":{"name":"-cloudTransaction:forLocalUserID:","abstract":"<p>Convenient way to get a reference to the ZDCCloudTransaction for the given localUserID.</p>","parent_name":"ZeroDarkCloud"},"Classes/ZeroDarkCloud.html#/c:objc(cs)ZeroDarkCloud(im)cloudTransaction:forLocalUserID:treeID:":{"name":"-cloudTransaction:forLocalUserID:treeID:","abstract":"<p>Convenient way to get a reference to the ZDCCloudTransaction for the given {localUserID, treeID} tuple.</p>","parent_name":"ZeroDarkCloud"},"Classes/ZeroDarkCloud.html#/c:objc(cs)ZeroDarkCloud(py)pushToken":{"name":"pushToken","abstract":"<p>The (parsed) pushToken that gets registered with the server.</p>","parent_name":"ZeroDarkCloud"},"Classes/ZeroDarkCloud.html#/c:objc(cs)ZeroDarkCloud(im)didRegisterForRemoteNotificationsWithDeviceToken:":{"name":"-didRegisterForRemoteNotificationsWithDeviceToken:","abstract":"<p>The ZeroDark.cloud framework relies on push notifications for real-time updates.","parent_name":"ZeroDarkCloud"},"Classes/ZeroDarkCloud.html#/c:objc(cs)ZeroDarkCloud(im)didReceiveRemoteNotification:fetchCompletionHandler:":{"name":"-didReceiveRemoteNotification:fetchCompletionHandler:","abstract":"<p>(iOS Version)</p>","parent_name":"ZeroDarkCloud"},"Classes/ZeroDarkCloud.html#/c:objc(cs)ZeroDarkCloud(im)handleEventsForBackgroundURLSession:completionHandler:":{"name":"-handleEventsForBackgroundURLSession:completionHandler:","abstract":"<p>When your AppDelegate receives this notification, forward it to the ZeroDarkCloud framework using this method.</p>","parent_name":"ZeroDarkCloud"},"Classes/ZeroDarkCloud.html#/c:objc(cs)ZeroDarkCloud(cm)frameworkBundle":{"name":"+frameworkBundle","abstract":"<p>Utility method to returns the bundle for the ZeroDarkCloud framework.</p>","parent_name":"ZeroDarkCloud"},"Classes/ZeroDarkCloud.html#/c:objc(cs)ZeroDarkCloud(cm)setLogHandler:":{"name":"+setLogHandler:","abstract":"<p>Allows you to configure a handler for log messages emitted from the framework.</p>","parent_name":"ZeroDarkCloud"},"Classes/ZeroDarkCloud.html":{"name":"ZeroDarkCloud","abstract":"<p>This class is the primary interface for interacting with the ZeroDark.cloud framework.</p>"},"Protocols/ZeroDarkCloudDelegate.html":{"name":"ZeroDarkCloudDelegate","abstract":"<p>The ZeroDarkCloudDelegate assists in push &amp; pull operations,"},"Classes/ZDCCryptoFile.html":{"name":"ZDCCryptoFile","abstract":"<p>A CryptoFile instance encapsulates all the information you need to read an encrypted file.</p>"},"Classes/ZDCData.html":{"name":"ZDCData","abstract":"<p>ZDData is used to upload data (of any size).</p>"},"Classes/ZDCTreesystemPath.html":{"name":"ZDCTreesystemPath","abstract":"<p>ZDCTreesystemPath is a standardized class for storing paths to nodes in the tree.</p>"},"Core.html":{"name":"Core"},"Managers.html":{"name":"Managers"},"Model.html":{"name":"Model"},"Billing.html":{"name":"Billing"},"File%20%26%20Streams.html":{"name":"File & Streams"},"ZDCCloud.html":{"name":"ZDCCloud"},"Utilities.html":{"name":"Utilities"},"AWS%20Utilities.html":{"name":"AWS Utilities"},"Other%20Classes.html":{"name":"Other Classes","abstract":"<p>The following classes are available globally.</p>"},"Other%20Constants.html":{"name":"Other Constants","abstract":"<p>The following constants are available globally.</p>"},"Other%20Enums.html":{"name":"Other Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Other%20Type%20Definitions.html":{"name":"Other Type Definitions","abstract":"<p>The following type definitions are available globally.</p>"},"Other%20Functions.html":{"name":"Other Functions","abstract":"<p>The following functions are available globally.</p>"}}